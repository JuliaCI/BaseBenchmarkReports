cset: moving following pidspec: 20263
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.180294655 seconds)
loading group "string"... done (took 0.663319294 seconds)
loading group "linalg"... done (took 7.613902364 seconds)
loading group "parallel"... done (took 0.158562974 seconds)
loading group "find"... done (took 1.154816429 seconds)
loading group "tuple"... done (took 1.857572769 seconds)
loading group "dates"... done (took 1.229056645 seconds)
loading group "micro"... done (took 0.217632793 seconds)
loading group "io"... done (took 0.907770493 seconds)
loading group "scalar"... done (took 37.963086864 seconds)
loading group "sparse"... done (took 11.962383448 seconds)
loading group "broadcast"... done (took 0.966570734 seconds)
loading group "union"... done (took 12.776341138 seconds)
loading group "simd"... done (took 4.82266024 seconds)
loading group "random"... done (took 8.854764053 seconds)
loading group "problem"... done (took 1.824469593 seconds)
loading group "array"... done (took 20.538315335 seconds)
loading group "misc"... done (took 1.680421119 seconds)
loading group "sort"... done (took 3.35536109 seconds)
loading group "collection"... done (took 16.858714358 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51845291 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123584376 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132406285 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118461726 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147697216 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117807401 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124839178 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086430064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.848827721 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146959217 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11638047 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397308941 seconds)
done (took 5.352796031 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177226767 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084342332 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084382391 seconds)
  done (took 1.328967063 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06823493 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126388362 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06943927 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07011675 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070065972 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069955146 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06977745 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069214276 seconds)
  done (took 1.706423309 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075106559 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071159321 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068945444 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071262966 seconds)
  done (took 1.447771888 seconds)
done (took 5.901780423 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742826565 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215700466 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186044736 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.380511476 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129704649 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.172502065 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64712787 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317856654 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187311231 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077320722 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107588047 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337085189 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12114595 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64894664 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075949241 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09115749 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142040001 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417797295 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069593564 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084668804 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091202269 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133324071 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088624219 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075953994 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148501712 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069766599 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132852961 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082604555 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068894514 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213253881 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174880925 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673867516 seconds)
  done (took 10.300708628 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100653558 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099062692 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070656122 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126963695 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099343406 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071815559 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077158118 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07050024 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091238201 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130691226 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092594152 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105942354 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069494501 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071962199 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087501064 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213350487 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084385683 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085409142 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073582053 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079556397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109576084 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079805033 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082150207 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081858792 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13064698 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183875746 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102445925 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102340704 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071616946 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086051967 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117605753 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129100075 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068300912 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070873932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127243027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096884884 seconds)
  done (took 4.74252163 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.952540106 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140591325 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089493814 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131669596 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067438587 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107806441 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06842745 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086129896 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203861011 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081456761 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.363684865 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.56948322 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111305697 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111862501 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104189405 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069904033 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071083363 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069656193 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.438695086 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102754463 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108118169 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084037291 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075708167 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073286699 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068654264 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070068479 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069298403 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073460419 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120000836 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081450889 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3060409 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124520128 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072639803 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.904654475 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.162608628 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068256586 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.242797894 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165207181 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095049037 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137843619 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070980749 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068002857 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155256595 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067166535 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072000069 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06889642 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088315956 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105164052 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119032956 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068054216 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068214146 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164300063 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068107981 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080562231 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.106110058 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157267532 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070227736 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283433277 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092207308 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074263387 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070103971 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.162213141 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125651986 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094378973 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070307005 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070409779 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070499606 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071255887 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367449926 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070627872 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.889118902 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075560951 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081838731 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074135394 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073802657 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068484515 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077329152 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076436133 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090710188 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069288477 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075667823 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070118769 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069298756 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069310128 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084559853 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.475394085 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069567847 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066895352 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070075054 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067391472 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092818465 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098027509 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069308501 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067743934 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101121697 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070136728 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069029135 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068522359 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084566401 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071577581 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114665275 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069195022 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.082158149 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098300359 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07114974 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10321358 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080329643 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070714831 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.407733851 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067815053 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069963328 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067740305 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069811703 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068682062 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080245443 seconds)
  done (took 21.649473231 seconds)
done (took 38.806537942 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243983225 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074783873 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075452408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075584057 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075631518 seconds)
  done (took 1.789520825 seconds)
done (took 3.026070714 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119702319 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098513945 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066986778 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096877374 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067444424 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102699406 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099133309 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077955124 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098279783 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067042166 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096875467 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067562126 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067008121 seconds)
  done (took 2.367297427 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085025431 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085509005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072847103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084644825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06671358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084716144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083512256 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092766971 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083673897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074343491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066540889 seconds)
  done (took 2.103796848 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083895269 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085785339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071674455 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084640061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065701864 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084312892 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084190597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089528781 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08614867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077753079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067881258 seconds)
  done (took 2.098332427 seconds)
done (took 7.785876243 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078372285 seconds)
  done (took 1.285816486 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.52125026 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.634347254 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081806935 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106140701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18453222 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112831622 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.245913404 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086689778 seconds)
  done (took 8.35124562 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091241479 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083685425 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071611012 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074820155 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070827462 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070847527 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071835405 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074266683 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072756444 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073390857 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070633954 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073794939 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07260369 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073184094 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071678099 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07099071 seconds)
  done (took 2.473442226 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093148762 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092013376 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076241953 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076553152 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073783041 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073536607 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075668918 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075741502 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07305628 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074004377 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077140463 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074729514 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072854931 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066235439 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075866069 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077796631 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072875933 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076141176 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076442974 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076628754 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076336724 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066519644 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073019689 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075730375 seconds)
  done (took 3.131732856 seconds)
done (took 16.462161577 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105855261 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069867632 seconds)
  done (took 1.390051775 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081099811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083583526 seconds)
  done (took 1.387328957 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082538291 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067221185 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089485847 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07895064 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068115983 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067444674 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08731701 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068100611 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067738963 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067570908 seconds)
  done (took 1.9668823 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07057421 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076991972 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071440364 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081769292 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074802873 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066224995 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07335284 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069235234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077714383 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06498964 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072809581 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083993425 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072431827 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08570343 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073339135 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070178228 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072258872 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069364039 seconds)
  done (took 2.552583198 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067182378 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068155553 seconds)
  done (took 1.366339827 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068808855 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065858063 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068427295 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068460794 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065669215 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064582326 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065838837 seconds)
  done (took 1.693900943 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.355467816 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117384225 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298591116 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073945985 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083052909 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250802926 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068687865 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073128764 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074024073 seconds)
  done (took 2.662369645 seconds)
done (took 14.252028617 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081023569 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087451666 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096439965 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.367634026 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093412035 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069141467 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115410324 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177601941 seconds)
done (took 2.331283449 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.205649636 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.650435158 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404987665 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.201381433 seconds)
  done (took 2.487342064 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327978049 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089514066 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062318759 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068995598 seconds)
  done (took 1.787648693 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068397846 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071097835 seconds)
  done (took 1.3751854 seconds)
done (took 7.095298609 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068526476 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067763329 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06566226 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068203062 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066254887 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065847408 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085424832 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067595941 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068507529 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068254104 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068639771 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068189255 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068067553 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065813315 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065705516 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06843704 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068663321 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.179623388 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066113226 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065811388 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06596684 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068083125 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065954964 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065658993 seconds)
  done (took 3.008206762 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083150956 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068017695 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072849153 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071933975 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070807567 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072212018 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072266364 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068050552 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072352131 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070330313 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070483412 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070116662 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070332429 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070787895 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070296899 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070139944 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072138642 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068034267 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070611446 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070257376 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072421755 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068075818 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070637448 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072165815 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070020482 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070523636 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070574473 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068186244 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072379015 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070379692 seconds)
  done (took 3.377442439 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071885602 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065450767 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065933993 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072525407 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06558266 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066586408 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065695126 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065780627 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066271522 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065911303 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067143717 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06550336 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065308465 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06622886 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066486039 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06938565 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080779807 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065987185 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065899036 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065919893 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068875589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068365946 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065756606 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065422712 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065371197 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065477957 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066398583 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065742655 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066475999 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066073031 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069041679 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069312961 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06588946 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072764771 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06962571 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065473386 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069581619 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065489418 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066093637 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065335675 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065128222 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065783731 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065530108 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072655242 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066010046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067157152 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06579077 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066499729 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066531267 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068213567 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065312706 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06530484 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067204067 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066845504 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069831118 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065075288 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066234622 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06521406 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066438498 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065542778 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065433767 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065084038 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068774669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066687376 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080720077 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072659395 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065437189 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067588376 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06646222 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068847502 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067537957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079105886 seconds)
  done (took 6.108332142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089283462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087099012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067799562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06771162 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06411793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066518533 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071097963 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066518372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067790485 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084003077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066233311 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067833024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067515232 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069924997 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066556986 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067592736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073958791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06426392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066640446 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069853373 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066539849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070910992 seconds)
  done (took 2.811421857 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147616989 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071553804 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104851101 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077201715 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071697478 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076397295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071514728 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072275428 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072213058 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069574092 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069481643 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072442721 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07213525 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069428606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069672305 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069469811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071795863 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069835287 seconds)
  done (took 2.651451979 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077781081 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067976685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087319162 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068513577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068773429 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070846437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071729772 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075610571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070213405 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068040645 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07538105 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070169385 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07022546 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068344177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070389041 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068433747 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070276504 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067758326 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0751815 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072020427 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071981972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076141068 seconds)
  done (took 2.835650466 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0806986 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069582822 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081895144 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069762884 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063601365 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066057219 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071358813 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067860011 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071729949 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070016785 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06786803 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066171552 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070156074 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068018565 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069975821 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067896133 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06963608 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067559433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069884601 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063780138 seconds)
  done (took 2.649094019 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086489539 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069649604 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069655059 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075810929 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069575314 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069528791 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076453159 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069499207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069947036 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089300847 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06946502 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069956504 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076242806 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076512094 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069461446 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075822925 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075623762 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075935755 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06949746 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069862513 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089371493 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069793049 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076307764 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069608597 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069687199 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070044764 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069844356 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0745501 seconds)
  done (took 3.32015153 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068222423 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068545379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0655576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065578712 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065760797 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065604832 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065979084 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065473802 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068310482 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066199434 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068849341 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068037787 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06824916 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068510652 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068211518 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067966005 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068455434 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065688078 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065822136 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066010147 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067985378 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067923392 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067799596 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066174769 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066192892 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068282988 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066151627 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06583554 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068157671 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065761521 seconds)
  done (took 3.273041947 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07614856 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074102292 seconds)
  done (took 1.411142311 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065073133 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081252223 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065276022 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072354161 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071960978 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068964765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074738611 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071499517 seconds)
  done (took 1.827669967 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082736457 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077771392 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069084229 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078074004 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077178477 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083720312 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121272058 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068252373 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074737254 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066643016 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080823496 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067925313 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074646801 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068755851 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074113001 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075484239 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066474674 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072744542 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069426264 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066544075 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06877257 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076273845 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07126638 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064559217 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069937932 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090069863 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079299182 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06834243 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071175012 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0759638 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074484211 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06275395 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067996513 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06832973 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066452406 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077547443 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082606562 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071072985 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076312252 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068425601 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076455448 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063830237 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072742075 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075048288 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078222261 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068513617 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068633184 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063959586 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066633837 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070633332 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06380368 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068852595 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063089662 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074906389 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071958539 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078483517 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067660116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069983618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071447185 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071425156 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074879871 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070159755 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071441694 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067517218 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078165834 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072919359 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07639663 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063511776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062942133 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067158254 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077389351 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090254217 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074251623 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068264404 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068609467 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066043994 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071826897 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069539244 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074121607 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074747427 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067803843 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072786199 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075393459 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069112253 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070944687 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074494927 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066754991 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070952969 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066879366 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083992953 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067697343 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069007826 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06646188 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077841063 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071428956 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067059384 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066156424 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074915316 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062407555 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067594058 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068494317 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068348131 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077297 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070311452 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070704413 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075509823 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074183502 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067585285 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069819466 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.19023071 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069039344 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068858795 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075472 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063221598 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071893043 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070002098 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068939266 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077957504 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066573271 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068305431 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075930966 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074123465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06738739 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06529924 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071988306 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068461886 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07034027 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076825245 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067491843 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063782286 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063790616 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072206406 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067885972 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072439241 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07206192 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071656266 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063143817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066619904 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071962386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076359965 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068272595 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069847205 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074412889 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069654105 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066948756 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074578709 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070986809 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067575271 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07368489 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069371233 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063609502 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071028834 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071214751 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066787154 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071904897 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070575855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070646618 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068446751 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067076453 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073812966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06905276 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068406211 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068831968 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067041371 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078559014 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070376702 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063525756 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065681434 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074593441 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067039004 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067637595 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068569785 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070497931 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068264121 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066218255 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067822815 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070730413 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075946183 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071202454 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068545966 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073708841 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080293857 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067801963 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070392814 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06808891 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068889523 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06877657 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077054021 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07393997 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071899215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070996421 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065440654 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073445849 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076186486 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068235878 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066835609 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068215638 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071838968 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07430834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072191393 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069405922 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066503253 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069738058 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070778256 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071056212 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06792501 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067768685 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072804414 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066640143 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072987707 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068169938 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077718392 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070984755 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06351413 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069308938 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065570553 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073623739 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062523409 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065929924 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067208819 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067998407 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066589883 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069525731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.192366437 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07730809 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076523923 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069568452 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068748271 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068352999 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075627474 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07087564 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072282413 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072773882 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074672349 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078802723 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068388648 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072268011 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081944892 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068559716 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063443638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074480539 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066947833 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068146955 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067674398 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066974113 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072689173 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075652999 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074668081 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062824941 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070986642 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066646919 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068783292 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063771059 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072607198 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071995836 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069877306 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075724823 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0694428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067874843 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072392975 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06794162 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068455567 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06890048 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071438584 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068891094 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069837836 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068168843 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071272667 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067804819 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06662199 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070457591 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068538827 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06957634 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073015038 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068041596 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068757896 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070758334 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068862309 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069617544 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069243265 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068828711 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07153633 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069542681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06934765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070774462 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064185248 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075415147 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067714352 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075964159 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068900966 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065510415 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074064782 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071110436 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072770075 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069384621 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068872457 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070645407 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06790799 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071261659 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075407642 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067494417 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078877666 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075611595 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069546909 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071417972 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069640815 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07026733 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069282781 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069795457 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068696454 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069244061 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068498699 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072984523 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071287709 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069647335 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070844166 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06917282 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069504924 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069240201 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063736948 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067991917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068664882 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068335052 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077092794 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068605892 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068706695 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067175115 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06871584 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066830617 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065032265 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074680995 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074456388 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067338745 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07347694 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067238689 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069731915 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077853539 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.193879152 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067196807 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066689794 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067815549 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076628874 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069066879 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078514418 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069477793 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068742351 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066083447 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069009234 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067473535 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063522759 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066483932 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071771037 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067979676 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067582106 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068520805 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071679481 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069762909 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077790692 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067621682 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070030826 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068608476 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065915451 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068364909 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068157837 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071465096 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068800556 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066807288 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065966217 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068623827 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070501381 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071034877 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067951917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070442131 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07530323 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069016897 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071162501 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070838694 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063512737 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071436373 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068824983 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068639547 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068143311 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072655129 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074446043 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069933977 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077618991 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068020172 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07003059 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068830221 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066923608 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068103761 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068227691 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069011893 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068715993 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069596763 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076108073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066581897 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071901115 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069056945 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069847846 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075162416 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068977116 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071656452 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073516011 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069545533 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070548801 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076422559 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071738478 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071660875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068747664 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070279738 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075149286 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06893464 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075305978 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069740482 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068509404 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07038543 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066777471 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068869302 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067879929 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067727325 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074032714 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068579627 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068074339 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068364084 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06687125 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069820971 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070995026 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075998046 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070986001 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071950354 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064007267 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06597118 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069211364 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067162847 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070138984 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071486944 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074332964 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070595879 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069130453 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067122404 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0773096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073945671 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071744933 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066546638 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071661392 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068388056 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070815331 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069194062 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068003914 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068369208 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070908113 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068986677 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067576535 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.20612549 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073351381 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070206045 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071167956 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0701605 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070235004 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064052061 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069202678 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071984522 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0735034 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071336111 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06899131 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07955237 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067180108 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069876367 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071326889 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068299528 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073722196 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064104756 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070744113 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069249158 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068626212 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064510936 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068185321 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06749413 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071116788 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068391153 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06461593 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079265457 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078060549 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071415241 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067357375 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06728898 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063794759 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064563865 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068312335 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069265581 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070260019 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078380119 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068083044 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068689349 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064410675 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068791111 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071616996 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072359032 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066611244 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064158276 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067880498 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071406539 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073547236 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067347774 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067998749 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071718558 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070976801 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066745629 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070939398 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065736193 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072321821 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080492974 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068723856 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069546778 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074731363 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07595955 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068363033 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064057753 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068444191 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071762607 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069503386 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069445027 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06916277 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083255658 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071531019 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068788014 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067379118 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071121365 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07126562 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07643857 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069124613 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068867935 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073798797 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071156303 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075652895 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071850785 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075938539 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072162618 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072170822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068342402 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069421721 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06707539 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068347578 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06923472 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068764162 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072717778 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074706065 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068867384 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079243326 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077516502 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070816216 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065965766 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067898278 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068077187 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063462236 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068434411 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066309016 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066415345 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066072452 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066620023 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069297853 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072566939 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069258648 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06791105 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067130625 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062436282 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07002828 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069456249 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068461417 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.198050644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069291925 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069947654 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073437587 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071440643 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068024017 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071593474 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070941099 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070295248 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063753244 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075389577 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067904002 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071235023 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068903039 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069075522 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069667307 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072207305 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072812426 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069393747 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070812471 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072644455 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069688327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066216341 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06623499 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073992643 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06684363 seconds)
  done (took 43.894232402 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100140533 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065453856 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064534387 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06524373 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073994413 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065229566 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064178807 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066183695 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065198136 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067643868 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064223449 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064096603 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071706884 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078556153 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074463206 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068351166 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064531892 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065000741 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064178437 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065150158 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071993002 seconds)
  done (took 2.793946174 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074788225 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078839907 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075988629 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083097964 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072642853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071542398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076238205 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071618839 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079054549 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074151935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079309895 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071724402 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073487965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074380229 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073659634 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072193966 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079583098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072906995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071791184 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076245283 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071996773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075948723 seconds)
  done (took 2.987253634 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068632029 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067733929 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070287321 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063441741 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067559673 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063519124 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070478954 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066344988 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070287844 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068019872 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067634081 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067544913 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069988727 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06358213 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068556322 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066292149 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106980463 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070924039 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067870739 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068989119 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063717707 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06996347 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063402511 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063972116 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06737994 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07045497 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069068183 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066395121 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0681815 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068212699 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068740557 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066177284 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069843141 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069049952 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067329674 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067489312 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067581092 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070532782 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063934929 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066162752 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068573294 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064518651 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06807005 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069972992 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066344013 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06621278 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069433841 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068835114 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063681666 seconds)
  done (took 4.686509779 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078560448 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109001709 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069987925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08951035 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08064068 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074331443 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072084482 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090448563 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06518103 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066113061 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081662359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079417565 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067410361 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071966597 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073896419 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067414247 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068753569 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066952194 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070582273 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067156745 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070949235 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073736163 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080468629 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078107292 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070932943 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066581866 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066901689 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071882146 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077926356 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071106077 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072502632 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072523473 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080829814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07208146 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066757947 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069668202 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081886549 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067901653 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070088443 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065386611 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069721845 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071601148 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073808321 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082095277 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067581718 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071953932 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067725512 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065352608 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07824393 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069779696 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074306783 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079419165 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071384396 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068155189 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071464214 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081460449 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067731978 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066313932 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070178912 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077775124 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065406919 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07038688 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078802815 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069647737 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073910771 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079335643 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071686465 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071517641 seconds)
  done (took 6.452776441 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076550545 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096551243 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083522734 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083776592 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077912245 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077297342 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077234204 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077323173 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077168233 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081113871 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076999403 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115182157 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073214926 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.087918938 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077441221 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077400466 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077251543 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077600953 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077005093 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076848274 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077267438 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083513122 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077066485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083487311 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080820816 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073104264 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076935975 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077064327 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084112523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077823444 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080204469 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076804302 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077083649 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083714267 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079819406 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077197796 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06786422 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076805498 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077494967 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077056973 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073584301 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083444127 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077153762 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07330298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077338435 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077093332 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083807884 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080361107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079355298 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081373156 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077990435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084104198 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077036175 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076861094 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083970631 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085723404 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083280522 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083462662 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077173405 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08288131 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083355255 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086157138 seconds)
  done (took 6.327161175 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082651398 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074216964 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08290042 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0642017 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06908498 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073434467 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067484518 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066867634 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075628309 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074912043 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077255535 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073699809 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077018073 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077451533 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073981468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076030431 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073600853 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073871327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075531806 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073921093 seconds)
  done (took 2.853016922 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076136905 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083947005 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069377871 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073659328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071431352 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073428126 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070766186 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071896462 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069765252 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071267063 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078092198 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077310046 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069378215 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073643702 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077237294 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073488386 seconds)
  done (took 2.537137136 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083862582 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074626786 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081145661 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06782566 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068520202 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064618413 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.0679438 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063879157 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065161068 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079811385 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068868969 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07860924 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06797953 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066981577 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065373057 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073698198 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064575321 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065694553 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082669188 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07910739 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071275555 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066622056 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071376071 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06780761 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070014048 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071714106 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066915419 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067987531 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065411026 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068059883 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070428893 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070793719 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065285743 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065847983 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067054469 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065825036 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067907303 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068320495 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073112128 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068114348 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066189631 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069670189 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067994249 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069252549 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064992418 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068188675 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064595733 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070110005 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065703394 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07044703 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067730017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070380563 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068408717 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074454358 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070762463 seconds)
  done (took 5.187168949 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080570897 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071162681 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063566277 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065863064 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070946015 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069403348 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071096551 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068475027 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069115407 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066372856 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069485749 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070811736 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069049855 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071505246 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069245357 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071145203 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064334795 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068797329 seconds)
  done (took 2.63517093 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073127237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067984003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075099492 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068419831 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06768884 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070151628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064159894 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066736492 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066816141 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068350781 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068220692 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070371891 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067098315 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070389235 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068066681 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068711463 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070713363 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06661334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068425821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064116755 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070606276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06672622 seconds)
  done (took 2.880892472 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093103513 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084090705 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137932107 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079886847 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086508966 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073325111 seconds)
  done (took 1.929382645 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092043931 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101041563 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068231248 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070660998 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07692254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071872905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071679702 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072031644 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078460607 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076720431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071876859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081833419 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07975123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078184129 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076909531 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076861225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071736653 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072371212 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068506033 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083620715 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072168757 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07973841 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071908487 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071597285 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071822011 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078626441 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079095214 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07678249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072092539 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079059482 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076770593 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07195519 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079398309 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076962792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070972491 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079225124 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072067244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084055551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077089703 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078482733 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070778772 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076975749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078839707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075760872 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079350713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072494113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07618571 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072224041 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072853003 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08596177 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077408122 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078360144 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076968641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079527227 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079133458 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085189433 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077045756 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078342663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07701016 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076989384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07882886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076975863 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07840811 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077424696 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076958487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078534742 seconds)
  done (took 6.455629769 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103612671 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068906344 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072290391 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077197456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078655923 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071786273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071939842 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072163323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07182606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069209718 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107555665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072421561 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078431774 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078374808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071850764 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071742699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072046454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078231481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069671424 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085648535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071950125 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078225039 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078326031 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078866568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077047279 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076799374 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072333268 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071951687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071815183 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072198963 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075954646 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072300002 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078863056 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068968815 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078549079 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07205879 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071947917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07582072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07185418 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076881749 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078474552 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08401062 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072206737 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071961137 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076892792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071577288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071773898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068629806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071664261 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068755034 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076857079 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077077146 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076698572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078441315 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072235666 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072121141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072157434 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071906736 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072243665 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077203886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078997821 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07224601 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08535117 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072107035 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072511198 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078636963 seconds)
  done (took 6.378808333 seconds)
done (took 132.510764117 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194557971 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172370682 seconds)
  done (took 1.733350377 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070109842 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097723666 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077819715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12979394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068461829 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101985668 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10187646 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078653977 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068705747 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068495826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06862185 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070517767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1331512 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068323884 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068020893 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070522827 seconds)
  done (took 2.728711656 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09812834 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156135688 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101382105 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067893865 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098502785 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074099641 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067335595 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07878198 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072817836 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067789044 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074328388 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071630234 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067303743 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071817844 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07255767 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074175548 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067101382 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073929578 seconds)
  done (took 2.844087709 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097378382 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092027862 seconds)
  done (took 1.579710553 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153751836 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13504312 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200790516 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.328711702 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154704511 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146457148 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143702613 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141964897 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113800314 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137484173 seconds)
  done (took 3.041799904 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099492259 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147886026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263655703 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115432673 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07435725 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092291568 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117193681 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080339521 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081137536 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080957497 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080483901 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077898101 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099138105 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075516085 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076681616 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077643856 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102309166 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075391961 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076114758 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076804734 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100104111 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068687666 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074987314 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075303805 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078246706 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078155536 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068920051 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068329644 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076577925 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076323548 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077913373 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091470164 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078244433 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103292104 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073846349 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104290739 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078632499 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07476289 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077136353 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074772694 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07908446 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078914312 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075047859 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077985342 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068338373 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077514655 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068581501 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068717379 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079017525 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069243121 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078531527 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077430682 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103506098 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069174304 seconds)
  done (took 6.053959146 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10755264 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105809582 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071718195 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11223553 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103770959 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071306872 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105925957 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098277995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107225236 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071977171 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070237731 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071813139 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08061057 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081695305 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114836243 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10801606 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073975574 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071200171 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10800496 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107336025 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070771821 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101830615 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097617048 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106739389 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070088599 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071685521 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070420263 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072078501 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077511322 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078080529 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070787984 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07979667 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083980202 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078158264 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069151343 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07009312 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070318016 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079332888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079413693 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07939155 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077540765 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069132269 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070224607 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071281029 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070911278 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069871762 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078739346 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07910012 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078571691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070666043 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071704205 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070780506 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071463398 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079190613 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077418446 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080042324 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079441248 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070954514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069993591 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0731472 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079838027 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079815647 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079737069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071267741 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080312981 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07330014 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080532694 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084022923 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070249379 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071111501 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069963328 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06992773 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071606757 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077942284 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077678736 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071662158 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070354727 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070100594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079514185 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078438105 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070508921 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078248311 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070126647 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069997984 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072071421 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071749847 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07731849 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079226095 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071218115 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070100214 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070060905 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069367376 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068518488 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076542511 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077342196 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077058084 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076704105 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069801132 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076764425 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076315046 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.204902842 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07884871 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070435392 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072000504 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071749182 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078751377 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078387419 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079672 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070815583 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070955316 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077880319 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0810823 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070462761 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078336922 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079719105 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078558608 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069310596 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081807801 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070788694 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079864614 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070647907 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080378309 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070990936 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078752681 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070229901 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0691251 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070838759 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079402667 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070897659 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070655542 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071178619 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070016602 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078588763 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082077393 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072194551 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078112574 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078009002 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071055133 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078689256 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070687738 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078906583 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070328135 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071414174 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069211556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081512688 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070686981 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070504235 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069856687 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07981207 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070424986 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079895564 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07742039 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069703132 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081436242 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079713989 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077579153 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079898111 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071746317 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070207598 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070366928 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070816923 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077867223 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079290584 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071518228 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070362573 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077440848 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079374866 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069703958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077974112 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078049575 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078089613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07046263 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070462932 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080587883 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080099997 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078190482 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078397805 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078910795 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070509749 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077853826 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078622852 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070177284 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083620254 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070986559 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082551889 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078511921 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077646168 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078748494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079694954 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078995731 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079951839 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082379106 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068911158 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070150774 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077785684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069299089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069310359 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075850202 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070540541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07051302 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080526126 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06957025 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.215690158 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070592585 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079584134 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070055359 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072561897 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082950145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071091276 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072060046 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079075564 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072751199 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077748207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080581674 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078273983 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070736368 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07160537 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080200916 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079702933 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070871239 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07031053 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071651046 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078565087 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078212654 seconds)
  done (took 18.887569053 seconds)
done (took 38.272401932 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.189480669 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143212551 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.155801409 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111346486 seconds)
  done (took 2.078832689 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110724231 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097032458 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090439674 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067163251 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09622772 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067566064 seconds)
  done (took 1.954331934 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.264719208 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184883893 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167504948 seconds)
  done (took 2.040918269 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.18978922 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177357475 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419027138 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254476958 seconds)
  done (took 2.56649575 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136235268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085898865 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069144907 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084408167 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125895573 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15404807 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096989486 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120466572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079875164 seconds)
  done (took 2.426955863 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140352866 seconds)
done (took 12.632351995 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121924267 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188838615 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097659682 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07594085 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.201587911 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073362366 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.205745896 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069687906 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081084305 seconds)
    (10/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.199375001 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071551614 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.192908394 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077497535 seconds)
    (14/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110082343 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.165368512 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.208649579 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149653412 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09357378 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177310457 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076342123 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.186148061 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142120588 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091862864 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075862054 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069040676 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.156121906 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.19845282 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077598687 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092305945 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.168019484 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094561958 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.173501207 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.167817993 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083816677 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.406752917 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098783351 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189474036 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075648754 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107397551 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075706366 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158748396 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075881651 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168062975 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066258937 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091656397 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099650478 seconds)
    (47/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103226288 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137967789 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12267844 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.143677309 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079662807 seconds)
    (52/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.154824568 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078177965 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.068856868 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079660747 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074507034 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12224343 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072168486 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067425689 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076095462 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087621153 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126500671 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.20546903 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078527573 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055107506 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073360114 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175715006 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069856885 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07370883 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087094889 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066054621 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053905851 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128374407 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087622897 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143291919 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068974248 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068113729 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091532003 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055089365 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094229925 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.140788713 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.240921903 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080249425 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076742046 seconds)
    (85/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190665617 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074985163 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081208646 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090706478 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089911029 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076418443 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074556793 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08958143 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090885836 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116751714 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174709775 seconds)
    (96/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070634678 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168358824 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079439924 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099731555 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056649719 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068342896 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074899153 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.165727258 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088346877 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076149121 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.158090945 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073215278 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073729906 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072000368 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.121966772 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080395684 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.178594414 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075267953 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08818396 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075688621 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185444672 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074767672 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.143564982 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075967481 seconds)
    (120/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099176727 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068575758 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098360292 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067872362 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092080668 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07412561 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166683165 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076707405 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.11977424 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092686698 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075050351 seconds)
    (131/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108737492 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055021858 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07454149 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073461924 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07639921 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089177811 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170743355 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148029849 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054189859 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075990263 seconds)
    (141/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108360476 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077397355 seconds)
    (143/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066588271 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110898041 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068423594 seconds)
    (146/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074154795 seconds)
    (147/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066459151 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053990406 seconds)
    (149/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118988492 seconds)
    (150/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07017395 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066409556 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067396556 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074873891 seconds)
    (154/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066324913 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07398052 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054339565 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05408225 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089079316 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054222285 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05406665 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090019807 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055469283 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055281878 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141643883 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055388462 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054762011 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110204784 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075239893 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069659395 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112695601 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095225523 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075988833 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055145715 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099274511 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067734021 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097224976 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054317882 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067138258 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.170401933 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06725547 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.120346114 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076971932 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054688842 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089676375 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.145233706 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131260833 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067243058 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068488887 seconds)
    (189/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075990694 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055292247 seconds)
    (191/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.235124248 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056655225 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069936364 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069412868 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094637631 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075371417 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08288221 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069432531 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.167845351 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074350359 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076666236 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067918224 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076526409 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053985712 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078610682 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076488707 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07453989 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108559611 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13657638 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068657992 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10087692 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054144418 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073071472 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054300575 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055137123 seconds)
    (216/309) benchmarking ("sort", Int8, false)...
    done (took 0.145197955 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068678345 seconds)
    (218/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074785193 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054130588 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066469717 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071389987 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.14335035 seconds)
    (223/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055145795 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070448002 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157878286 seconds)
    (226/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091679033 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 0.129311016 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.145567081 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053931266 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05491148 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066992755 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071357622 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078919504 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.139653529 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054271541 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073713561 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058193363 seconds)
    (238/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065560102 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081312989 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054428354 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067940832 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135020639 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08130537 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068080025 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075255597 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068024318 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054496306 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066412895 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066658848 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069405016 seconds)
    (251/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055802862 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054004854 seconds)
    (253/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064132626 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054526224 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144005512 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069131195 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175385578 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054761095 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068186043 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068187668 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069373787 seconds)
    (262/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056977718 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053856345 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054689374 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07578377 seconds)
    (266/309) benchmarking ("sort", Float64, false)...
    done (took 0.128330486 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055712839 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073474026 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070128072 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090629982 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089577699 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06672605 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088490189 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055469732 seconds)
    (275/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069241797 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070549607 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054256617 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13819617 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05461547 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090284086 seconds)
    (281/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056950487 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067782513 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175354461 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067773664 seconds)
    (285/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075103919 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075601476 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074871612 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174760989 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054300111 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093589951 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054345439 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079982653 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054261062 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067193345 seconds)
    (295/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053848701 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095799179 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076625391 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07293268 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090043633 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073107897 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054174148 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088930896 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053999753 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078534073 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067182572 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054533505 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054517655 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067014186 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06658563 seconds)
  done (took 30.821165789 seconds)
done (took 32.259147519 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087403376 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094916993 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077791636 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093965743 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08273909 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077232878 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075683956 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080828925 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081734137 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083262524 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080706184 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058027893 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07686781 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077135089 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077166512 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091929556 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080708914 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075721227 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076327605 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067178349 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076329688 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06860527 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069396866 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057249072 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080531328 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074132398 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076429239 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076730623 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068294562 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067860944 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071906062 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07603841 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068512152 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081351247 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075218679 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076184286 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077625215 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079617342 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069661647 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067756023 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077238289 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068082464 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075306254 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075960959 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074208687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073493382 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07589206 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079511236 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091733758 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070440098 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077273426 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078465881 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07891528 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074993305 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072177308 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075718158 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072997151 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09192308 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.0759805 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070436114 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076642717 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076505844 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07372486 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07548141 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075580577 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077413404 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079132049 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073600729 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077092224 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074373328 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067900952 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075770192 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071495178 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068328336 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078130635 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082498124 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067106074 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074623621 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075263665 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075979276 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06726034 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069684122 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069860658 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074662366 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069690864 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057325926 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071735776 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074490597 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066892093 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076359065 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074489632 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075555561 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069648256 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078852914 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067927335 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07318847 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068046995 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068000838 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06950426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072089166 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067630587 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070297432 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078013719 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069155213 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074080584 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080143526 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067093094 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074341011 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066754407 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066897358 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080769637 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076688228 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067432695 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07023249 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066383166 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074207866 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066384752 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066664755 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066939354 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066485589 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07311724 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066604503 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068767045 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.21360169 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082582711 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068807125 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07255667 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07038032 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068206775 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07448344 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068484133 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068753892 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069959988 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06416377 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070364918 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068359713 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074976932 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070057878 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075724114 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069436681 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076896902 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073311579 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074018155 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073956024 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066415738 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06208329 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070684865 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069785913 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069580398 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067671541 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068914845 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067599485 seconds)
done (took 12.890224163 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069252607 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131711412 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095505623 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094558904 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086058946 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069463909 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076685524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096026101 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070363684 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09839665 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088677427 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086614919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110059024 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06727562 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068327006 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072355479 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070141068 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082197484 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097395128 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087549206 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11156171 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068315123 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09214306 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089243711 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088173887 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092875943 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069753614 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072668156 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072309509 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101503487 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089356092 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072505594 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069354585 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09603385 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094439714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083574084 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069186227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083750176 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069395003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068859446 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070514665 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096769865 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08088665 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081485383 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073190489 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078370333 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070400777 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083310011 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089118141 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080152901 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085757593 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099486491 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071022261 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084884454 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067456737 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08627726 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077663153 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0712688 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06950195 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.0761687 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069075733 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072095661 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081419801 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080873604 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07273675 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084444294 seconds)
  done (took 6.92279695 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085372216 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095671838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084562125 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087839983 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068951466 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069121802 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069024746 seconds)
  done (took 2.101422694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069146265 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089130721 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089303446 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089590959 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082819263 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092045226 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078041479 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069535518 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093252217 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070366844 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088365171 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098436828 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072301365 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081949442 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090559967 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070000987 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090719905 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069464207 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072117956 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090594129 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0749256 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097965992 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075907597 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0697436 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082047973 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069900998 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112241961 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073134802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071334033 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072564027 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070324452 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106199116 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081839849 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076506273 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069568443 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083941782 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082734381 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0720728 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080308641 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077704762 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082149361 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069892844 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071111163 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070892995 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073956299 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079352045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070310263 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073333013 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071938433 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087979436 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067924128 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081904276 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071968976 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074704859 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071229113 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076499182 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079269577 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070348324 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087671429 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071184143 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084164638 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083956829 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082856277 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084020801 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071353447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08157611 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081892728 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07187576 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071281424 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073126987 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083771061 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068378468 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071139553 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079047247 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07136915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090488114 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090406318 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071605081 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082123686 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069819871 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070465409 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069855688 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.0906131 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074129983 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069331105 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073440657 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07273736 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072280925 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069409262 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073538884 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067643565 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075087898 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07239396 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072485387 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072111519 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084411097 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072166187 seconds)
  done (took 9.093377272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072218234 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071163485 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07203406 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070919806 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070454706 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070797738 seconds)
  done (took 1.990100726 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090883623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07078251 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081650072 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073524534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102371328 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087687379 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088891261 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079345801 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084461422 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080056587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087905608 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088973331 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092549798 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074507202 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087612107 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073481563 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088154238 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076617105 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080396673 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074714265 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086718628 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074887555 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075024326 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083472814 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077912026 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073751999 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080706353 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080530785 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079868016 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080029876 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074070643 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077823969 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072949404 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07916134 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087992976 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073130464 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073192118 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078914484 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073949557 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080350335 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088781282 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074710932 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075948067 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079286551 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078773802 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073476767 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079038063 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081362191 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087566189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079266081 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078345041 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072801945 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077204773 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078791965 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072618801 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079259191 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078584669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088364587 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075273268 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072918002 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071024868 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077459715 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078935837 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078025226 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079579205 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078541504 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072993442 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074124584 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074594646 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073800488 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078412657 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070897626 seconds)
  done (took 7.241715666 seconds)
done (took 28.881042529 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533665111 seconds)
  done (took 2.049543067 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596856357 seconds)
  done (took 2.145850715 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.920170783 seconds)
  done (took 8.466909753 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362554311 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464466625 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.698542467 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136727968 seconds)
  done (took 3.243462957 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711073189 seconds)
  done (took 2.269559146 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229970997 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220248724 seconds)
  done (took 2.019123265 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377533997 seconds)
  done (took 1.927187971 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086641503 seconds)
  done (took 2.636821086 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230974966 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175549191 seconds)
  done (took 1.95895109 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451522963 seconds)
  done (took 2.000463057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.811815172 seconds)
  done (took 6.364356019 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220601693 seconds)
  done (took 1.814810077 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235338978 seconds)
  done (took 1.789892554 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.749078853 seconds)
  done (took 3.304194097 seconds)
done (took 43.550238559 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084594368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086488831 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087021735 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083130906 seconds)
  done (took 1.875513011 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079372163 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074720243 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078475849 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074529546 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078204436 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074121551 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076054384 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077781201 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074411532 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075313623 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074488406 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074967443 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077023023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076089184 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073185034 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076562278 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077918118 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075028925 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077502689 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075063566 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072782161 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077039154 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076823929 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074303296 seconds)
  done (took 3.377442325 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079621718 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07481723 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076951684 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074050659 seconds)
  done (took 1.868524623 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080032697 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091177295 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089477962 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081002319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091316179 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087205841 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070948266 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071550726 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073077642 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079769876 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070416903 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096018517 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089072909 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080155368 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082123895 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068245934 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070364277 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088287969 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080928311 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080750154 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073356931 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082592481 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071110663 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090457448 seconds)
  done (took 3.49895815 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086247539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100890356 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082284413 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090710498 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093435147 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067599861 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087089188 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092972352 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124424828 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067872041 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073341485 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068174289 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076008781 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068125356 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08266867 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110615939 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111694552 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071696462 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099402278 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068576674 seconds)
  done (took 3.30396523 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074896017 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071502671 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073394351 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068183759 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079060422 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075053819 seconds)
  done (took 2.020226546 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070178354 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070310132 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069734409 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06900187 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073281598 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069517446 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068267557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069686704 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070069831 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070110055 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069096751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068573365 seconds)
  done (took 2.40930118 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182867005 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070860407 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070991417 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068507061 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072850584 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069362438 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083056709 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070412987 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093295556 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068934328 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06950236 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071008618 seconds)
  done (took 2.565857758 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193688345 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077232866 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22304605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148203563 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107542149 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11143447 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11053312 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110108744 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135129935 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098531328 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157942513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159695988 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10574882 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133192872 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089442924 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10018607 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148582232 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159094938 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104773838 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158768913 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139498053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123128386 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142044147 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101014989 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104536763 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117606471 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073549176 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080878359 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162143912 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128608474 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13935694 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110471579 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096304428 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16906501 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162150076 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136219445 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143900017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084697134 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102321307 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129174936 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186324423 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088635157 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300516567 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110014624 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081916999 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131323828 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116493744 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11719269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103464502 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090451762 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140093955 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173548477 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129878354 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087723146 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121231437 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110187988 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110059819 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110388756 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168702899 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153017346 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125122796 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073569503 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110306404 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145768502 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1285251 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105787081 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120404549 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094256485 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128807687 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148207504 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119253148 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13710782 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113381627 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088757481 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117325024 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134062537 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123775224 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155370202 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12172855 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074741624 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119777573 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099354542 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081741662 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143517466 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077065872 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166820193 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098887427 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10495213 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120553182 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105148377 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106334534 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148675401 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286701608 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103531743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068606749 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10497647 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117196869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139598984 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087908599 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105838458 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114350766 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078869933 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132145702 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078175418 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120075596 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077847897 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12052806 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126621732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078314098 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118740001 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102376955 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099770239 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127629558 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151525865 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087908592 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081595829 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158835829 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119746745 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101105848 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137161761 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149187908 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099884621 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098627698 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141994912 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163827134 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089274174 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156219901 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104081169 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084240987 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087409548 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120265213 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10898734 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120577588 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082935409 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115657471 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159625546 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076125017 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095046101 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129623562 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079106439 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081796881 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103882369 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102250881 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095427246 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097264679 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100379631 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131155027 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27155279 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107779666 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121629055 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0979768 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15950591 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088353546 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101081625 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102665559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072092665 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127434321 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148128729 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079803195 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153906038 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117881686 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113189709 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116601999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084416405 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133293965 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080151794 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072112163 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137731117 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10913 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107155222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144031911 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1134605 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120632167 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115246671 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127848006 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127090838 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125609738 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105390732 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088507617 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109501186 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124199034 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074979181 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090085563 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081094699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10352756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094600388 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083927928 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136153074 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120041365 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111005108 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109734354 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09657785 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140826339 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077212047 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122791035 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116516142 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094763852 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144954769 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144558381 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127641238 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097595959 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284085754 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073083517 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076205648 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088759714 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12010768 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083906971 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083711798 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113501814 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140466073 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123641285 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131437075 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120219733 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116360874 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147284233 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07207052 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118318089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138567453 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117956781 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103379962 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090870702 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098141139 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136561636 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103785349 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169346734 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111521628 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120577114 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148687722 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101146297 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080147205 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100625526 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12832409 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102308817 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137002553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098265049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088522704 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10685215 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07934135 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097947571 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123610828 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115875394 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130687984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112241703 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129827696 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079245115 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111691415 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117800887 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117836688 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065972868 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114717481 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15144038 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094563948 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113463272 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296575269 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08015708 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133063182 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164441087 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138549873 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086006538 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10517954 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116669963 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122311787 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116262457 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13348554 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104151699 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131597343 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107509273 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085557829 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087352374 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095076329 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101915086 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092965576 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102796276 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110828762 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095643489 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126842071 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102718154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108249124 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115041121 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098904499 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092185685 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097062862 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166322926 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115968468 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161596559 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099006622 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137108409 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154749934 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076930936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081077473 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079520877 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133543895 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085546337 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126951469 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108760592 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114917124 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120956878 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135200524 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095741557 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070070755 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106718121 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12955061 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120365151 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096996141 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100812568 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152694583 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.096508467 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078236748 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107136696 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110922307 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099413061 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156198824 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063049275 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10149542 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076520778 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079261533 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119904174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138908918 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079924029 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.096757375 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113354047 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104173352 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115938779 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093367123 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104526349 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116363978 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132172234 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11619671 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086187664 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102998548 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115180735 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137699502 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095830904 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093137716 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153634417 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136663806 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1415742 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082313685 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105840994 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106213642 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10233762 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124669369 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081641165 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142899027 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079302692 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122134444 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095276454 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083454581 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116042026 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.104532472 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085098853 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130265236 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10808251 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080352501 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075710214 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107137952 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110031555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096804005 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073656022 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391179855 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078535133 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131100672 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156046158 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083680771 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105090795 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096948347 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0833009 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10508531 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102917618 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08917211 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099255113 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163627257 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087461929 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143621777 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131059383 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110969538 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1303686 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102133357 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640665081 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079750706 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145256258 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113696204 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165157609 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09963073 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116380335 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109310419 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118822081 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139258253 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10205426 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177491418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12820309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114319196 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080419534 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102334199 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103099211 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087570407 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106523252 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111788766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113209081 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093577877 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114177909 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121684009 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083296368 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096461117 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149508248 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112394674 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137376002 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133028348 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084851412 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114558808 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289475756 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081996916 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115442658 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144103271 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104836742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099304113 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082087459 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098578984 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152434968 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075338036 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151166261 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120399258 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107265836 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110573266 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107995447 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126782048 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104188686 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119616897 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092157359 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106120018 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111748794 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082556688 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078683311 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104086309 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108696724 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098584183 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09651563 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09705197 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145673611 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074487926 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098410484 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113440361 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139610352 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165166979 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087404991 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084081559 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117137785 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114283247 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111005875 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119022144 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080288485 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082752635 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080913445 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08224788 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106131338 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111614431 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112493606 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10874735 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155170833 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084542268 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22354338 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095042963 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103314817 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07142207 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079085214 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095627001 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097004089 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258215241 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111307392 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151694125 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094871744 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090554049 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091043476 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077140396 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084370191 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122919991 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106959187 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115641552 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100035917 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065122096 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105258302 seconds)
  done (took 57.524226453 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110096648 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084627007 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098585245 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145392752 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123230704 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200182858 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157278022 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190265249 seconds)
  done (took 2.839432912 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072136399 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096341042 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104833326 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085408975 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069802277 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072261711 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220023744 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083744522 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069841572 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095405102 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081097105 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072262829 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416689504 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070761974 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071926571 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066021196 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070456988 seconds)
  done (took 3.527622527 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379654644 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62610982 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.336323271 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079864156 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.94421742 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096645843 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.17420905 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141039235 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081471193 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545794414 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.40928777 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131800073 seconds)
  done (took 18.668365373 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084835202 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077755944 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091323533 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09067616 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081009187 seconds)
  done (took 2.147652496 seconds)
done (took 107.212419927 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085522289 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.584479951 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05762426 seconds)
  done (took 2.389026023 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089025279 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087558721 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08754549 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0849496 seconds)
  done (took 2.072437738 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076933272 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078582457 seconds)
  done (took 1.877104141 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22418861 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168097787 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096891942 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084793145 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082221216 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082487999 seconds)
  done (took 1.976927104 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075056305 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077001117 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075433663 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078348387 seconds)
  done (took 2.026623873 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078707802 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055329424 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057781749 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060789725 seconds)
  done (took 1.974936911 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088096568 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084011468 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080835591 seconds)
  done (took 1.976526206 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100814478 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088890773 seconds)
  done (took 1.91267508 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083664731 seconds)
  done (took 1.808637345 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094252107 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100510759 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128458838 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109603578 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135355779 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107378973 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085851578 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086683414 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078726618 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087642224 seconds)
  done (took 2.7393635 seconds)
done (took 23.050617433 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080452287 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369513174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36191213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092018805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671502186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358654129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987480166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095114712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139821706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07024593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087012133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651878044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981336288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332282235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967524742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331627025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652618598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071279762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070719972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071007544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976856789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070832904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070570694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071532064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652558376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374514327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07154626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332861033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071404575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072856488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360479385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089216356 seconds)
  done (took 16.361743323 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072925511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120113414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075297256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087032464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072472164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072375831 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074542011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071912579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121767889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070921472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088134983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070623207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074555994 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071965765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090539776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071784679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071814766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072005612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073880605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071503145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090345545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071087412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071197688 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072378719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071376703 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082676633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071788646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071591799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071632462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073205508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074417946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072245326 seconds)
  done (took 4.230213133 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11651764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12616283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075658109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105749372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113408739 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073354018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143321202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096051746 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128562556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071270222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088282371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071766983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103439015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072141706 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091452519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072298759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072075902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071784297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071276814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071697756 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090541684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071344286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071833055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072516585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071610845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084325844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072463474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071778327 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072332984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073707027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074815674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072010496 seconds)
  done (took 4.476765436 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075197317 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077285655 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086031547 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086687805 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072456853 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074766599 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076800836 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072858279 seconds)
  done (took 2.366390126 seconds)
done (took 29.168653266 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081261122 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071663496 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075514715 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090349452 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075867777 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079917514 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06949474 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078234218 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075414944 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075500654 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077921751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070151888 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074309509 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069589075 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076747375 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07109927 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082010866 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074876702 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081334493 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081722181 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073282067 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076389095 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078281727 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081761758 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081403663 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081445927 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079962803 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076051878 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071821247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074061424 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080079564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086214696 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072017744 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081718128 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071051103 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071581959 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075167896 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07143057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081704392 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079621188 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072929813 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079686587 seconds)
  done (took 4.943988486 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088228332 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093309287 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086161947 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064409066 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0682723 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068110281 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090386223 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062688953 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063228808 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089272991 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059990135 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062242119 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065664626 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057901826 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063185028 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060608604 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064502413 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059130415 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062678148 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062727227 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090458909 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057782846 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080070808 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065831486 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059665116 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064851715 seconds)
  done (took 3.565940864 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077920689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085289751 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091571586 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143206517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112767362 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080110654 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080962424 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09524636 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096704835 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069956134 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073697473 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095462553 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089530028 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076649349 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070765927 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087168186 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087979484 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07313738 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076011592 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094041604 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088453043 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088103639 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09441088 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08635343 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07002961 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072677642 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074011725 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083640757 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073012807 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079179613 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073341033 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073646609 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072226659 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081873658 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073024366 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072310355 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095971603 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079763623 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081375545 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071575136 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078223927 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071564939 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094047546 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125756435 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070027691 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076207279 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074192246 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079766702 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070126792 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095850133 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081518153 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07019839 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073345367 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069749317 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069887699 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072863316 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072336059 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072440932 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078852257 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075491082 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093219288 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075033625 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086002996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070134018 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078128135 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069570301 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071096951 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069621464 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094545248 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071899345 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109635191 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070992401 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071329478 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079078005 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077897306 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076083874 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070255251 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085960953 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080469849 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073472916 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078245843 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073682721 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074394739 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098637443 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07276988 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072094918 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071417277 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075504968 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072718105 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071401581 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08289866 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070035651 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07331461 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086431139 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070360573 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071760264 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07576709 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074708008 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069949551 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080742569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074219178 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071150157 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079541836 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070772836 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072933914 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081420171 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076122113 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06939307 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073922009 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075083389 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070615461 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071576973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072528723 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072026804 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078581899 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077242079 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074464652 seconds)
  done (took 11.024060507 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160333061 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15059023 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07329039 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144064291 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079368807 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081319514 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145316234 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095123742 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071362456 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071895079 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0712241 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110835111 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105334986 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116380309 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081104528 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07103081 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092588521 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114475264 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147102692 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142426199 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093103677 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078412159 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07323902 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072318052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072829898 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080069796 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087233947 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07986077 seconds)
  done (took 4.553671569 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082048826 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10362131 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077428776 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091968105 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09182143 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071208691 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073022903 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072609609 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086946579 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080801175 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070655962 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075735346 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077817099 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073865036 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072086766 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077540126 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077340908 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072046685 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074345376 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075615044 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080848517 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093801278 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074329344 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072516582 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075587572 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070543206 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066623206 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085814129 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071678906 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094784959 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068626042 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075163253 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084007534 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072027965 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070871863 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071017516 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070549159 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070695962 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072408892 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069623469 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069159501 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060854519 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070268246 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081301606 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083784108 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060045411 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075316177 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075588414 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075958957 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068259583 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073340106 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073323921 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073208325 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07732945 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074574314 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075719772 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072460975 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076185748 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078437921 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070538402 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06833963 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0690622 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075303937 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067862194 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085162199 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075160726 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069318691 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070692358 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072192584 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083759611 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070451931 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07531828 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068623513 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072678291 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075148049 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072819602 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071959589 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06919438 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07077012 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070965936 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058819335 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070940212 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057017719 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073139179 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069209761 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069855586 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07059848 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075127713 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081443104 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071901039 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07632656 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071921273 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069905049 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073437602 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063727239 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073146194 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080793475 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084452199 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070897644 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069169556 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082510433 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075635704 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069787103 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060204387 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074700199 seconds)
  done (took 9.584648177 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093098825 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072214215 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083992453 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090714148 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089017529 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077007094 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079885851 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071927692 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085942555 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076233255 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079122332 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07096121 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080725504 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079992219 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072317888 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080397765 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074812609 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085470051 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084463529 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071207287 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078754875 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082549861 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091526842 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08265637 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081441659 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083033919 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091852302 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079408658 seconds)
  done (took 4.065776728 seconds)
done (took 39.478227918 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.839825199 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.990171859 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.820570994 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.133842538 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.137763176 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.845966642 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.917174878 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.816156387 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.073263674 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.852491062 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.082096911 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.905016731 seconds)
done (took 66.29863023 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.846262206 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.957553342 seconds)
    (2/2) benchmarking "String"...
    done (took 2.049698713 seconds)
  done (took 5.75473354 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.039202864 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.461980059 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.059211022 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.81490462 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.822342272 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.119006415 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.6184535 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.338114939 seconds)
  done (took 30.982008636 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.005414346 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.044401362 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.518620241 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.556003689 seconds)
  done (took 15.922633957 seconds)
done (took 64.496877289 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.851755727 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.866478369 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.845020253 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.800770802 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.876279428 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.834227445 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.887728606 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.921242218 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.818255372 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.805442142 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.818605137 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.242007457 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.821085851 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.418139076 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.81979674 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.821945406 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.855558527 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.413217025 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.974391206 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.83188305 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.818965012 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.872017327 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.820938971 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.824088766 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.832535539 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.815779598 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.215650461 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.818053401 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.660147718 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.817729113 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.874553057 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.405607715 seconds)
  done (took 206.047795472 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.817916324 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.980933897 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.061222888 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.835696177 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.481151145 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.998764657 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.925889958 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.509721037 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.819823199 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.827941765 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.131775039 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.818661269 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.153711036 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.791237717 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.847111593 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.929306999 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.110702876 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.133385305 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.854965325 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.986495502 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.833080843 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.002657554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.948232539 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.088867666 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.81950388 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.845393115 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.841142926 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.828563865 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.014723113 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.078573428 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.829997155 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.849801715 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.026079053 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.692271862 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.834211368 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.837181381 seconds)
  done (took 173.136991868 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.009030763 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.8198417 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.817932461 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.818223408 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.823396039 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.819520144 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.945158118 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.818287539 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.440682975 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.947009194 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.142044603 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.874407679 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.819237295 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621626513 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.81867601 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886131517 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.830927441 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.821479972 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.83459689 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.848281118 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.823033247 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820421692 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.951355076 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.832758989 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.819541365 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.827199154 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.819577778 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82578345 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.190437357 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.820449805 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.861766946 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.822954231 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826109381 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.062740654 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.821206865 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.82022658 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671897892 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.3711731 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.908753531 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.82279303 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826949612 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.820950057 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.038831934 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.822251512 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820377517 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.821288741 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.823446368 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.960883241 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.821328701 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.948685137 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.821437741 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.302205415 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.820382696 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820713096 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.483032716 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.412673137 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.825866899 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.824364939 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.821784306 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.821681158 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.827938555 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.439791788 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.897214796 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.822640533 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.821898059 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.82510582 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828189182 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.823975337 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.952269907 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822585126 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.870767161 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.883709661 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.949787212 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.949156941 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.825704396 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.822931261 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.889173459 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.916853907 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.823319519 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.822208106 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.821801584 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.823676176 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.904037365 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.824030285 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.950365785 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.832050645 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.82515396 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.824258329 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.873504327 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.892388413 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.82396435 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676434465 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.827593887 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.823867354 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.088510528 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.889024772 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.822896568 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.823819967 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.95149225 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.947569523 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53131489 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.828180624 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.439265676 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.962489431 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.825239501 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.970862775 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.828529905 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.905718106 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.830475382 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.826407347 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.85796216 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.826869818 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.880701262 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.825413996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.19749566 seconds)
  done (took 406.49440057 seconds)
done (took 789.49501402 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.421372913 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.395568995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.495103252 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.415431452 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.387388067 seconds)
  done (took 13.87030423 seconds)
done (took 15.628055441 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.913908274 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920483946 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849940151 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.916283065 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847684469 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.91598336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897678586 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.849940212 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883337384 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.849912772 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.884750071 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.850616685 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.836710534 seconds)
  done (took 26.175262761 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.061540276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.073346553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.896882273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.061679631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.873329784 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.066992325 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.990520289 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.984484301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.980356733 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.843269383 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.840935969 seconds)
  done (took 23.432910616 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.067168054 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.081054806 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.903535647 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.070041337 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.876539195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.066688909 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.990847045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.986343822 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.987983246 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.844105433 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.841169422 seconds)
  done (took 23.47351093 seconds)
done (took 74.839978158 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.836830212 seconds)
  done (took 3.595485294 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.862221167 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.033162239 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.841773426 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.839098223 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.837373662 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.83605489 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.842354083 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.837298447 seconds)
  done (took 16.689128126 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.837495056 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.841577863 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.837422405 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.841101574 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.836027294 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.837173156 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.838018033 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.840974355 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.840376843 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.840010726 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.83882966 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.840151148 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.840708874 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.840272066 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.838438861 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.836598817 seconds)
  done (took 31.188209312 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.840049935 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.83755056 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.837248437 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.837969386 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.838339456 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.837595666 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.839601906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.836809234 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.836994463 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.837140393 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.838579398 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.838396294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.838825601 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.838150251 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.839272811 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.839199359 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.838345325 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.838767375 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.842565138 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.838579668 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.838725466 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.838263336 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.838083972 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.839135474 seconds)
  done (took 45.890216579 seconds)
done (took 99.123273882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.553767962 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.44367446 seconds)
  done (took 9.762272949 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.844297274 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.840627226 seconds)
  done (took 5.50870759 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.842885368 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.841410738 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.842027095 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.841649732 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.841790143 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.84237338 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.841489966 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.840844845 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.841190811 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.841199465 seconds)
  done (took 20.181159413 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.842217093 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.842665012 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.839729607 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.843204142 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.842547419 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.840322629 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.842358106 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.842989546 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.842704003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.839745843 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.841872768 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.839819832 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.841946731 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.840403231 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.843186209 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.840187165 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.841039183 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.840597487 seconds)
  done (took 34.913573185 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.843535855 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.842888731 seconds)
  done (took 5.45199538 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.839884627 seconds)
    (2/7) benchmarking "second"...
    done (took 1.839128714 seconds)
    (3/7) benchmarking "month"...
    done (took 1.840126325 seconds)
    (4/7) benchmarking "year"...
    done (took 1.840876801 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.841281571 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.841323237 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.8419315 seconds)
  done (took 14.650379107 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.844385191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.987799433 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.045809374 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.506084415 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.844766178 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.847242688 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.824278388 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.847934504 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.848212615 seconds)
  done (took 20.363589514 seconds)
done (took 112.597939214 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.68144658 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.84076631 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.071246927 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.885607425 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.890963871 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.179834581 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.868593982 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.122600095 seconds)
done (took 43.310062049 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.927352366 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.577747471 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.800117923 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.952017539 seconds)
  done (took 16.098267878 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.823913944 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.240632217 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.846646707 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.704777401 seconds)
  done (took 22.38772745 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204870981 seconds)
    (2/2) benchmarking "read"...
    done (took 2.191708012 seconds)
  done (took 6.169527431 seconds)
done (took 53.354200613 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845192193 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.845268818 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.843062398 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.845842228 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.843757282 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.842850132 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.843305613 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.846726919 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.847335931 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.845946778 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.847009013 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.846735405 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845834543 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843364966 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842740067 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846918177 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.84565816 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.844631265 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844687922 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844401784 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.844433251 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846472278 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.844488922 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.844211233 seconds)
  done (took 46.049554657 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.846189913 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.845104118 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.846835509 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.845706962 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.844876036 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.848233677 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.847204466 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.845330765 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.847288156 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.847690345 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84525921 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.844251293 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.846763859 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.844969807 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846611046 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.844957089 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.848090046 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84511274 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848209304 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.845741539 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.848916589 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84555175 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.845350744 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847687803 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.845662875 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844734136 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.847863865 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.845790051 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847922971 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.845939517 seconds)
  done (took 57.16036403 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.853535458 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.856715498 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.848923821 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.848792916 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.848957467 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.848125027 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.848207377 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.851313724 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.848013713 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.849152323 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.849678137 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.849637663 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.849520547 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.850129078 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.849631371 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.85035581 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.850222111 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.8489739 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.848872358 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.850174621 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.848756747 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.848960124 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.849652202 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.84995492 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.849662517 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.850505611 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.850509644 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.850612484 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.850514292 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.850220978 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.849710186 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.850190966 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.849990426 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.85013708 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.85009063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.850087858 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.855526585 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.859663209 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.850525449 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.851142292 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.849940831 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.850140398 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.850144526 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.850536862 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.85095631 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.850417267 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.850982405 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.8522503 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.851233338 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.850533033 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.850576328 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.851318857 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.851416414 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.85167496 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.851196747 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.849827164 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.85137786 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.85129533 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.851893676 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.852537288 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.852121858 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.852893412 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.852862765 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.853528133 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.853624156 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.852376854 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.851711406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.851802457 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.851580725 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.85312353 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.852136173 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.854576994 seconds)
  done (took 135.041780442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.852382671 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.850529296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849550642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.849849222 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850016275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.853000494 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.85017377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852577652 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849891903 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.85219762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852712449 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85064534 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850209186 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85347377 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853739588 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850220732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.853765654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85036313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.852340489 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.852380174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853650182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.850871193 seconds)
  done (took 42.511066856 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853981915 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.853703654 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.851349229 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.853006607 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.850574969 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853456912 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.854465725 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.853705914 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853666126 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849813754 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850620566 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852776419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.852017872 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851809173 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8515903 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.852220545 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855014817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.852190666 seconds)
  done (took 35.122171938 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.852078856 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.851695233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.854709019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.85157168 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.851519502 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.855437857 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853051739 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.855762935 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.855724692 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.853268261 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.855449363 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855033406 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.855330942 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851423785 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854462569 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.853303064 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.8547225 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851493684 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85497049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852519222 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.853373192 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856085347 seconds)
  done (took 42.560215972 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854854918 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855286973 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.853188205 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852353405 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.852283402 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.855743637 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.856109988 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.854148015 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.857162604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.8568407 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85400457 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.856492708 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.853551038 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.854565749 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.853510448 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853182475 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.857252957 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.854442748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856296493 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.855062388 seconds)
  done (took 38.875143727 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.858125486 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858436683 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.858199365 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857500968 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858470355 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.857320984 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857875602 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.858077784 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858277022 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.857751877 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.858756031 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.858841285 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858708769 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.859645895 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85925211 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859011303 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.858460094 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.858350225 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.858634057 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859419041 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.859412914 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85807936 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858477222 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.859391526 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.859817968 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859770312 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859372208 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.859289803 seconds)
  done (took 53.823135947 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858837234 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.858116704 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.854998579 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.855952257 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.854055712 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.856146426 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.857065747 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.856961057 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.858882182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.855282651 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.859729765 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.857989208 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.857743132 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.859119613 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.858029937 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.858008849 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858074967 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.856805345 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856814146 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856783712 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.859371933 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859332009 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.859625612 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856723573 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856101923 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.859148091 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.85690071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.856009209 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858341887 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856734613 seconds)
  done (took 57.506365645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.878995094 seconds)
    (2/2) benchmarking "in"...
    done (took 1.878231641 seconds)
  done (took 5.540884767 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.857137332 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860462331 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.861096372 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.858016616 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.85758579 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.859279578 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.859724379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857503223 seconds)
  done (took 16.654207416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.859128275 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.86265019 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.862080911 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.862285651 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.864145133 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.859499898 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866923513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.862861126 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.860940099 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.861705532 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.866969095 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.86998847 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.863393479 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860058557 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.859980956 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.861859039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.863045773 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.863411852 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.863017355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.86284016 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86384618 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862375867 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862744448 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.860563469 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.862913899 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.872546731 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.866090869 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.863897422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862340511 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.865388692 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.86167041 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.86029901 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.864324113 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.863772961 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.864269896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.864547071 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.871372309 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863976295 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.868064017 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.865264861 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.863868663 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.861182865 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.862390893 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.863418012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863966316 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.864614645 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.863387974 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.862165854 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.862220004 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.867726562 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.870051219 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863487751 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.863500206 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.867497924 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.865476724 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.869941785 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.866627864 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.866061257 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.872790028 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.873962454 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.877499433 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.872698959 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866435934 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.867558225 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.873734791 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.887919132 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.87139885 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.862726542 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.862902015 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.865563574 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.869973755 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.876476787 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.874774881 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.86619577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.86670282 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.865924321 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864827995 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.867383322 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.871406723 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.867596594 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.866513653 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.867123983 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.874019908 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.887029839 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.864334593 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.867642269 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.866834727 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.867726808 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.866220396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.876768963 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.868090232 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.866701275 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.865078008 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.866642168 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.866688063 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.868484662 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.865285205 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.866529837 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.866093032 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.868078346 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.868607105 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.869669681 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.874651331 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.868009909 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868616259 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.872605333 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.868752464 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.865268055 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.874225108 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.868248191 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.869512227 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.867890433 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.872038767 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.865863087 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868988535 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.875315015 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.868856637 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.867117411 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.869120031 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.869641788 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87734144 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.892978812 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.869378514 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.868925093 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.872715598 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.880962193 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.869421813 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.870689013 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.869468297 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.866974301 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.86700699 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.86861408 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.870358201 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.867693699 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.869558494 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.868317014 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.869018157 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.868541058 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.86985126 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.86875903 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.869075439 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.869088032 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.869465937 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.87152543 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.871576031 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.871421335 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.875361179 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.868341276 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.870031682 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.869010612 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.867121028 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.869893172 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.870751087 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.870592563 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.870273651 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.8723403 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.869088214 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.871820605 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.871094972 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.872210775 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.871271008 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.870695901 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.873552476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.872326115 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.874846806 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.869959479 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.868864499 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.871875345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.872108973 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.87096862 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.872751089 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.869584476 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.873254068 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.880201394 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.871247383 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.87201335 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.873730423 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873339591 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.873458424 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.872524874 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.873606674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.880115236 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.873436082 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.876808921 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.872742791 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.872131744 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.871902692 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.871028621 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.871174971 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.873857941 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.874632379 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.879659029 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883774495 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.880363884 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.873369659 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.876612237 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.871659349 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.87686366 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.875237355 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.873092157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.873968975 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.873668249 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.87170406 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.87416954 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.873740705 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.874685169 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.870411709 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.874736822 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.872963637 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.874170348 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.873572697 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.873867411 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.873398326 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.872423969 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.874886731 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.875399595 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.872932589 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.872204144 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.872851915 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.872549887 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.874899943 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.874700933 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.879276662 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.872580053 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874431824 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.874028318 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.874235519 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.872397819 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.8755069 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.874832117 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.873099259 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87965135 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.873474244 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.874100035 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.879545672 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.872862807 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.874268179 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.876269994 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.874968411 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.873137262 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.876911096 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.882704096 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.875182304 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.877097166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.875748707 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873728334 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.875968795 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.879970654 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.874028939 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.874081979 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.876757132 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.876953912 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.873543599 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.875179587 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.876158649 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.875155029 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.87739431 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.876785507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.877145409 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.876805043 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.87738236 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.878072716 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.877170504 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.878262102 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.885496472 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.880186436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.87622425 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.878069585 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.876679579 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.881081728 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.875714526 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.878091192 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.875689498 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888734067 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.887644848 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881956268 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.878013455 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.878738803 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.881767829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.877954755 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.879529119 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.874808017 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876626462 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.875867755 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.875583799 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.876278517 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.877074953 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.8779863 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.878605738 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.878348912 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.88316956 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.878578252 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.876233218 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.879149578 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.877661105 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.878557619 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.875994397 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.879433603 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.878495813 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.879569423 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.87725414 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.877076074 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.884883744 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878209142 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.879069576 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.877283189 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.877490738 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.876288239 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.878775402 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.880097692 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.882711893 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.889168303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.881612745 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.887969492 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.87923236 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.88729809 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.88064029 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.881850294 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.889375217 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.877007965 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.878010016 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.879145453 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.881752736 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887455529 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.881589804 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.879996945 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.885769134 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.880932565 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.881887194 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.880806698 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.881595422 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.881379119 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.881607863 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.888117877 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.880147836 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.884369577 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.882000241 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.879188398 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.883138118 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.880622991 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.878228014 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.881611564 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.881762129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.878673121 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.879044851 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.880460019 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.881396668 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.883484431 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.881718564 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.879044713 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.882390137 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.886955231 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.881277358 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.885606947 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.881628315 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.887720788 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.882317634 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.889236788 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.885138982 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.881112309 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.883178648 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.884181191 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.882313076 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.880118803 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.881528083 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.882750815 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.881344653 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.886240737 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.883985127 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.883981769 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.881884515 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.884249854 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.880792483 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.891425662 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.908620531 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.883814234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.887809778 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.879738378 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.88300556 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.88778902 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.88504475 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.8804507 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.885239231 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.893379618 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.893164221 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.882088304 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.885489428 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.881592149 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885618472 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.883303598 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.884274283 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.884310423 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.884645623 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.883577953 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.884375559 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.885713422 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.884382754 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.88385953 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.883625651 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.883796726 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.893303817 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.885437291 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.884042946 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885155941 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.883703551 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.883874018 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.884037973 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.887058671 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.884644874 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.885211025 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.884638742 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890988642 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.890277385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.886245266 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.883413862 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.885572317 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.884342933 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.884634524 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.886523404 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.88613994 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.886840181 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.886262229 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.888237209 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.883758199 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.883149543 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.885256549 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.884798259 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.886368896 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887824311 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.893135112 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.885864583 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.885043049 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.887056612 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.886974266 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.884605937 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.884737886 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.893320647 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887805792 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.895165348 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.893643152 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.891507646 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.886351852 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888497766 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.894136234 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.884501775 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.886437943 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.889367731 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.885792687 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.88676655 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.888210887 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888023875 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.892211069 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.885410221 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.886540417 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.894396832 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.887940064 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.888292032 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.889364445 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.889757911 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.886590655 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.884777117 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.888660647 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.885104183 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.892645035 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.887747826 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.889856942 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.887849195 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.884344709 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.888612196 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.893570405 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.889389717 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.887722211 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.885693916 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.886806833 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.890213623 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.890463761 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.88615504 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.888299015 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.887130456 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.891830031 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.896263718 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.887483107 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.890017729 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.888130395 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.888870105 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889937481 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.889868856 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.889305037 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.886889127 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.889411706 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.891418522 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.888174549 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.890462343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.888559434 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.889014013 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.89192201 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.88978587 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.890878989 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.899362737 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.897776724 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.887306131 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.888009811 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.889339064 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.891354814 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.891190254 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.891304513 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.88854102 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.889541879 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.890753531 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.890977768 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.889988231 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.891428306 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.90612468 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.890650823 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.888169267 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.888594698 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.893125917 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.891264685 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.888593415 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.890863346 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.890462952 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.891757032 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.899410318 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.891614205 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.897407454 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.890965964 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.8919824 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.895448901 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.893013255 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.898174429 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.892936679 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.892784761 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.89294589 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.894873663 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.90648768 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.891804065 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.899988891 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.921688461 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.891517276 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.892403687 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.894129453 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.890561918 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.893473166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.8932926 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.893506881 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.89203168 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.892905774 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.89356799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.893239985 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.897384252 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.892889713 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.892809938 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.893212152 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.891129407 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.892774113 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.890447393 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.89435983 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.892727608 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.893202025 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.894531603 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.894710165 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.892022101 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.905294183 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.903542776 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.894627438 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.895923072 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.892178146 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.895273309 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.894663026 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902813104 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.901663631 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.894948405 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.894475264 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.894479313 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.895592715 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.891650665 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.892740413 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.892540555 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891230103 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.890684236 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.905308813 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.903506524 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.898072168 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.893293537 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89695801 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.894937353 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.895077906 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.896970914 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.896988265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.895191776 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.89505613 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900925604 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.894848338 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.895711782 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.896962617 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.9030938 seconds)
  done (took 1122.259455097 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.894009776 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.893846714 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.893289364 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.894202419 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.893610359 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893783113 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893209197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.892776643 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.892540265 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.893573918 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.89283633 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893011877 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.893853055 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.89379691 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.894381636 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.894624811 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893957207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.895326946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.893176605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.892818251 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.893800195 seconds)
  done (took 41.582689449 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.896500634 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.894067406 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.895454384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.897033673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.895162643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.895958514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.894510066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897605239 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.897407763 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894132311 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.897586083 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896657013 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.894099864 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.894988507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896074329 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.897917136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.897785856 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.894743702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.897245332 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.896462385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.898431901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.894449993 seconds)
  done (took 43.531991388 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.899212006 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.898529952 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.896390452 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.894476237 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.898570129 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.895893813 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.899020553 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.897540035 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.898382791 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.897401176 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.895848696 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.897704565 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.904510483 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.904039698 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.898887564 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.899082468 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.042658038 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.899653914 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.899999375 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.899831815 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.896841316 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.90359275 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.897040234 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.896276938 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.89535648 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.899546746 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.899780441 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.89976952 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.900610979 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.899741091 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.904181603 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.899251544 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.897930117 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.899660409 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.89755934 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.899091207 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.904964567 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.900880042 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.897788642 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.898828538 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.907483306 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.921770918 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.901575303 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.905455016 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.900695379 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.901094197 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.903146932 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.909699011 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.898407853 seconds)
  done (took 95.075897226 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.900883338 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.901615596 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.899293902 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.900719861 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.900966121 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.900840519 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.902315954 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.901080038 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.899149926 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.899746421 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.903127871 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.89713249 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.89554401 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.898314546 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.898971723 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.896007154 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.896522258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.896117038 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.897278188 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.897251088 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.896042005 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.899468757 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.899131122 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.89730601 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.89876823 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.897388001 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.897317186 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.89903147 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.898259474 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.897222422 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.899966227 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.899929533 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.900442484 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.897538042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.897163434 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.899038333 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.899699783 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.896512302 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.900077534 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.896743822 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.900058226 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.901007823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.899993647 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.901169065 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.897935133 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.898448206 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.899706006 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.8983491 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.899026918 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.901086379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.901268231 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.899189712 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.901508744 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.898861625 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.900247609 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.901354206 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.899469711 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.898792729 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.901545353 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.899066688 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.898143127 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.901059361 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.899475866 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.899960845 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.900715888 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.89945999 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.898853281 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.900484376 seconds)
  done (took 130.970293235 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902571118 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.903064718 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902303131 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902581662 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.903061903 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.903112611 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.90231674 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.903307116 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.902987861 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.902959306 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.90460443 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.903292164 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.903505089 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.902256273 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.903464507 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.902764022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.904130164 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.903499434 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.903820314 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.904026742 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.903863932 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.904158351 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.90463853 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.903861542 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.904752465 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.904248018 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.903925102 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.904445452 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.906299165 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.904080246 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.904418102 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.904579713 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.905439127 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.903880279 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.904594772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.905019448 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.904964366 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90492797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.905199896 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.904885292 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.905178727 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.905597374 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.906199791 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.905873799 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.905634498 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.904722377 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.906017357 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.906165373 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.905829827 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.905365751 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.905669221 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.90540354 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.905596271 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.905558348 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.905641229 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.905770141 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.906077049 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.906182023 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.906531947 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.90593018 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.907129509 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.905549298 seconds)
  done (took 119.908157481 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.905847192 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.905819472 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.902245493 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.90257232 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.904930915 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.903230933 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.905779656 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.905401733 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.905044811 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.906047333 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906210584 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.904355883 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.903691959 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.905552294 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.904015876 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.904610122 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.904376734 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.903827275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905928346 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.903790875 seconds)
  done (took 39.920355368 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.906397732 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.905705725 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.903826624 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.904890507 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.906580189 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.904949669 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.908129579 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.90706401 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904457811 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.90724631 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.907980898 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.907614442 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.904227655 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.905872724 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.907693036 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.904834361 seconds)
  done (took 32.325391849 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.905811046 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.907787998 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.908449958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.907656454 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.905711651 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.90523515 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.907499277 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.904490799 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.904951967 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.908568547 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.906916988 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.907871925 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.907113893 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.909331703 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.904931393 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.907737774 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.906074676 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.906256048 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.909185055 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.909500283 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.9068365 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.905761648 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.908744272 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.907748648 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.905702265 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.907439174 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.906151437 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.906156319 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.905794686 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.909003312 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.907634091 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.906158248 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.90643082 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.906309758 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.910422199 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.906438377 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.909263943 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.909285118 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.910194462 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.908794053 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.909144501 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.908103192 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.909652869 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.910322842 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.907239997 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.910021571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.907128156 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.908085315 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.907057177 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.909020337 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.909687071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.911388943 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.910584979 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.909781262 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.911390212 seconds)
  done (took 106.760217078 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.910049769 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.910305931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.908204979 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.910672292 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.910601645 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.907487236 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.911309512 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.907656989 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.908619903 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.91009386 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.909202828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.910347876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.908822766 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.910386561 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.909896715 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.91046851 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.909726929 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.908960881 seconds)
  done (took 36.20396677 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.909043429 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.909119362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.911314408 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.908812068 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.908299 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.911556638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.908699923 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.912139543 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911582876 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.909746717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.908916197 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.911723101 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.9119893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.912097038 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.910089799 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910072639 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.912052478 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.913384079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.910555462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.910748303 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.913226452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.912880532 seconds)
  done (took 43.870560559 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.91041615 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.911046828 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.926967812 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.932951373 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.934226538 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.948151461 seconds)
  done (took 13.396391613 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909224602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91309328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909139038 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912568973 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918563046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909133385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909595869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910739818 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912362609 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.911033239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909086207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912510533 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912017665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908570742 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912144203 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913029725 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909989226 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90978189 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909301098 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913176744 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909236491 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912430007 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910093624 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910242886 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909345999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910304454 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912232924 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910116235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909950588 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912314251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911976825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90528052 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908008768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906162827 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907928857 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909155613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904730642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907005956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906872705 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905799253 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.907648213 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907731845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906603395 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904915348 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907353359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905253345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904825349 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904162871 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903638362 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906446095 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906866623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90379812 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906065562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905192858 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905862189 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90724795 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904936536 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903579115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906999637 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904091098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904006091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90608867 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904363374 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904457248 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90595513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904375735 seconds)
  done (took 127.783275792 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904404112 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.905631064 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904169585 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904950975 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904463856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904893441 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904540952 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906097529 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90435588 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904248646 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907039209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90567282 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904512052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903981455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904302135 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903573639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906475704 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904576087 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90533807 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907473164 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904916001 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906371177 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905573904 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905546604 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.9055095 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908770316 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906527131 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905883907 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906308556 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905421836 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90566256 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905796394 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905358745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.90568695 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905460638 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905487778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906297259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906341642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906226364 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909010154 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905712412 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908228524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90632437 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905578959 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90643832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905623728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905232375 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906311387 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904726003 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904545149 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906026743 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905137313 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905373822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905069996 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90449739 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904690928 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904770299 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905576405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905273909 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905769037 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904475675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904258034 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90778235 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903643214 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896360342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896437657 seconds)
  done (took 127.5760034 seconds)
done (took 2613.784233376 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.90908467 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.908264914 seconds)
  done (took 15.635803319 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.059195251 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.008500679 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.89723571 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.94417136 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.895001537 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.895118099 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.915214909 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.894047472 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.893256101 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.893036741 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.894321203 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.081619587 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.948444826 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.894939305 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.89477369 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.987625947 seconds)
  done (took 52.817920785 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.897484547 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.900373303 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.908956639 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.899336789 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.897232198 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.909831839 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.932542136 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.900838286 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.932149219 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.914748525 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.969872773 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.912482243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.9007755 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.951149405 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.919082385 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.916775597 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.993003297 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.980292996 seconds)
  done (took 36.455525539 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.979900182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.904796061 seconds)
  done (took 10.713434083 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.908717963 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.923630093 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.940057431 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.915546687 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.913849389 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.923456879 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.894752041 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.932810282 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.900659163 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.90734492 seconds)
  done (took 70.983573027 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.898188061 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.894234505 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.894446038 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.889456761 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.885215818 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.889799829 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.890049921 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.883673748 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.561741885 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.928711912 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.900064084 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.897072636 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.89143219 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.893044746 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.891507908 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.915383753 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.009506503 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.891130194 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.890082525 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.896589001 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.892768671 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.949237488 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.906235059 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.89654787 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.9218436 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.563736845 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.899358531 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.896668877 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.987053143 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.890261575 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.890783045 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.891583421 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.89425002 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.303440654 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.158040692 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.894743207 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.906250479 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.897192168 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.891040959 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.003481258 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.890387465 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.894909781 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.682531095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.136011806 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.989530956 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.932101574 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.207071302 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.909320145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.891245491 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.91952949 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.895033954 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.891806629 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.902932019 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.38544709 seconds)
  done (took 133.573420871 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.887485079 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.237833714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055863771 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.887152097 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17415538 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096337925 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.886451783 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935045715 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.885946109 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.121252799 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.143217922 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993130719 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.886288315 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.881343477 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.883545471 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.88222054 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044454889 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.959050185 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.886416447 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.882358565 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915901834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12707431 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.006977726 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883640635 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.910807632 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096459147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.006353562 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.991804699 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.663616179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.881138334 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946655812 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.883186198 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.88158185 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.879287027 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.038826074 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.977642464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967833116 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.88307769 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.878888057 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.879048206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.552783951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082564336 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.978449572 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.023328868 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081405561 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.089429519 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.664870151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.879754122 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.632371907 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.047599588 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.112730359 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.11729323 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.004705365 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.883045121 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.139286513 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.878042143 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878439152 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.131566459 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025476423 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.979990344 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881990566 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.878527773 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.878823297 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12740584 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.883409257 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.978109411 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88276555 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.880022116 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.978771329 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.981248412 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.021082469 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095191425 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913977374 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.852544576 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.420341453 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12967719 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.94892662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134067133 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.882160295 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880545428 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961266189 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.726245097 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.1376323 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134328193 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.136191116 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.918143481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.607605752 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.879909412 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.110696095 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.103923259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.145190689 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089140633 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.124802148 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.209108949 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.881050309 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.880404265 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.106563676 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.018925638 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.884902471 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227145704 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.115259185 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.429926764 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.902186698 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.188923403 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018135745 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.883805269 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.526280569 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.881255012 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.115148453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.925423013 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.883588029 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883163227 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.103988078 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.875040872 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881572054 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.530904074 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.946084351 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.887316923 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.118187035 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.886148344 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154941726 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88443118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123815321 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.346870279 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916445451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.059196183 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.088557068 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.883863439 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128708599 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.129806099 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999943168 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106907947 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.590576405 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.88267809 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.174188813 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.884428207 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.883065423 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056944558 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.884910687 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03146029 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.886333532 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180236163 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910335055 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123902771 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887367694 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.144637966 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.919833534 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.937198282 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.885675658 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016913284 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884720049 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.717322465 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044169915 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887576613 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.883886861 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.434076327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.883504369 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.036747121 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118632028 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909618006 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.95856738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.556145758 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.883935471 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967875394 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.910596875 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.275804331 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.885248822 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.138730085 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.886738184 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.883599637 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.883960496 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126965805 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.070729517 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.885527851 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.885784006 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.794420215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.884045818 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.884772099 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.069853636 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.220828001 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.885889372 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08926662 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888417176 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015119767 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.887442416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.96396074 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.221247972 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.886483573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.885498237 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.886976485 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.886125408 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.885938255 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.096128814 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.913904988 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.405967237 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.025523974 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.163355841 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.19885931 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.136662846 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.933527443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.888069863 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.144514477 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.888823911 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.952896889 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.887731764 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.909434458 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118055167 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.891017588 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098405989 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16915632 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.742026466 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.936693221 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.889280514 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887217 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.886591899 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031970575 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972951164 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.889313603 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.888977809 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.003382747 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009619118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.100077993 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.888627521 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.942008433 seconds)
  done (took 905.443213571 seconds)
done (took 1227.443474494 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.887451211 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.887038583 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.880052827 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.887119769 seconds)
  done (took 29.357607659 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.896716791 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.890727151 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.896849598 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.89043588 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.306464077 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.890284151 seconds)
  done (took 13.5834298 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.961573229 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.886962019 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.888185498 seconds)
  done (took 21.55037509 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.959604813 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.276458209 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.993563348 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.313385369 seconds)
  done (took 10.357480454 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.895393675 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.894410877 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.894961794 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.892803853 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.898959583 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.897358818 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.892767954 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.894182862 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.897892783 seconds)
  done (took 18.874964803 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.14938566 seconds)
done (took 99.68921015 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.246355159 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.889535267 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.03243309 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.914642406 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.408894252 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.959460757 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.444633559 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.997838453 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.888182505 seconds)
    (10/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.232626241 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.957386043 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.874395811 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.099028397 seconds)
    (14/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.397705105 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.071240533 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.457100816 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.118224485 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.893203545 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.971940709 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.056044602 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.225057589 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.998994488 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.136375159 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.935114504 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.974222528 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.957823863 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.878215298 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.015058666 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.203912581 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.131250444 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.720794132 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.29593302 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.128592006 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.985145362 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.879209039 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.311761393 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.184348961 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.91863975 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.799837076 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.923307566 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327705398 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.071333553 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.890534611 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.00237952 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.899308052 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.967946838 seconds)
    (47/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.149249912 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.00724659 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.965379484 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.111599102 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.579683706 seconds)
    (52/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.119817935 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.894238513 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.980017067 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.914052551 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.138136025 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.881473471 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.099302287 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.049649845 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.918211413 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.011800913 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.926660072 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.16524303 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.908417217 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285342643 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.220444879 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.03477874 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.117439551 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.3593699 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.158365064 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.992541258 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.206911635 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.027841614 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.296356108 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.89582639 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.895355739 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.110692629 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.619350841 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.886956924 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.017184733 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.983945 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.518157056 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918225632 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.922203815 seconds)
    (85/309) benchmarking ("sort", BigInt, false)...
    done (took 6.895770842 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.169320471 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.899584287 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.955411484 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.927377026 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.851761542 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.996740803 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.065805883 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.801772843 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.915356636 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.900315488 seconds)
    (96/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.961629388 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.040285712 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.910202465 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.96863608 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.882483828 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.996805246 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.088883701 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.24942782 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.303556145 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.908990283 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.372279024 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.922214667 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.324927285 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.988597131 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.047375457 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.5766495 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.196620006 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.928229883 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.825359657 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.903863885 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.600812232 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.199987623 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.132112909 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.92974672 seconds)
    (120/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.172148898 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.899654557 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.049597262 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.194212852 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.715289323 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.138659775 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.251428571 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.937365274 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.914035056 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.547209993 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.16249142 seconds)
    (131/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.018299629 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.077118395 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.157308974 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.914768025 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.983890598 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.911074395 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.115307035 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.938600232 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.996423772 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.929078458 seconds)
    (141/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.025380058 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.905921448 seconds)
    (143/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.189211658 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.152702924 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.904913132 seconds)
    (146/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.040759776 seconds)
    (147/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.090188952 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.979482079 seconds)
    (149/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.902947234 seconds)
    (150/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.983071796 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.918991217 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.236849177 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.044772951 seconds)
    (154/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.016957165 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.995197129 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.947369228 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.325823638 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.835870266 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.212825091 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.279200713 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.922110004 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275375073 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.363687306 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.905444497 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.890685394 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.181364508 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.037512028 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.983798759 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.909048892 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.972809138 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.900520347 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.902924298 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.137269378 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.997379488 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.261148348 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.089484124 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.942660545 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.246271668 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.190206818 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.21597437 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.994777163 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.060320058 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.194394493 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.709416884 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.010435125 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.997625416 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.570383375 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.007362934 seconds)
    (189/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.891395905 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.915060788 seconds)
    (191/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.362717634 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.177297772 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.906898874 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.730977239 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.034377423 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.980918293 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.937276623 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.024970309 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.28843634 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.160192474 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.924647874 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.608416616 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.913359165 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.480576244 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.917996686 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.880786829 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.137432704 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.416825738 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.770075099 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.306543456 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.986897388 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.203843844 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.329875351 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.106241033 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.901975028 seconds)
    (216/309) benchmarking ("sort", Int8, false)...
    done (took 4.895961134 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.221310094 seconds)
    (218/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.945369245 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.211457332 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.007168966 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.976575723 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.152306987 seconds)
    (223/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.216337317 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.983615043 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.430278859 seconds)
    (226/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.949111731 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 5.63218289 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.552850258 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.090309438 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.01637077 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.07180934 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.056962508 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.338105423 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.077957948 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.091124627 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.011831372 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.399275487 seconds)
    (238/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.146372001 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.061705072 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.154209973 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.174029758 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.919651376 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.055907284 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.846438982 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.948375143 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.316467841 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.020882776 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.020840886 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.900424124 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.201485817 seconds)
    (251/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.320590424 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.082624372 seconds)
    (253/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.371009581 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.117458793 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.91940883 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.920519861 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.99482684 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.829886614 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.260678315 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.919274537 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.109223954 seconds)
    (262/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.900655761 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.684272662 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.019811524 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.268199474 seconds)
    (266/309) benchmarking ("sort", Float64, false)...
    done (took 5.6974327 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.408825808 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.942140072 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.093464313 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.931868649 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.273873811 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.180481622 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.857085355 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.258945914 seconds)
    (275/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.098866411 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.023722174 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.860980878 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.9184836 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.057165152 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.037470884 seconds)
    (281/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.903623893 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.305990753 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.028330318 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.139248321 seconds)
    (285/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.947818637 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.9443271 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.704153338 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.917823831 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.029237014 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.949830666 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.302864309 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.511679066 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.016755914 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.078654125 seconds)
    (295/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.026298395 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.906928641 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.156478744 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.003540191 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.626582706 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.981934097 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.025652075 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.160488147 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.8271451 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.542732507 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.245264696 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.992637937 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.905948433 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.319255609 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.141765393 seconds)
  done (took 1018.717318085 seconds)
done (took 1020.599359822 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.95131158 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945626284 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.929644388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.950903349 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.041195949 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.956282934 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.93964622 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.932068778 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.978088305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.978387425 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.925855627 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.954436429 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.93001081 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.931026954 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.929818155 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942364683 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.242746501 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.963419462 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.947452094 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.938928935 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.946261351 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.92633728 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.978557976 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.957566538 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.933088914 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.931883183 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.93124237 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.949173341 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.041635089 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.932367985 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.9319735 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.941011823 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.241411312 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.963375302 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.925443023 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.949297167 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.943021582 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.939217451 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.937060953 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.961662582 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.327740946 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.97324008 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.931347366 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.932295426 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.932629276 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.933859444 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.931990615 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.936435824 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.944902865 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945319251 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.322305846 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.989042081 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.933794065 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.93290652 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.943493557 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.931366436 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.936381833 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.947478028 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.950070658 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948275181 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.228133291 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96866174 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.934951471 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.947519881 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.939906997 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.357707833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.970347283 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.935000563 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.32993536 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.979653313 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.358505018 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.983860839 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.934015182 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.94649947 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.962626344 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.244671338 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.958229422 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.932226892 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.941055557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.92890643 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.942139713 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945645477 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.937522323 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.935411428 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.946448476 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.961111245 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.944747411 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.932463136 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.943121016 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.952409714 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.940858855 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.945859457 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.936980601 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.92970968 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.944194947 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.937927337 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.936727387 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.937014859 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.939044298 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.94428582 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.328532398 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.992453417 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.930785419 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.933016979 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.933145995 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.948094575 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327973072 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.979094748 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.957940429 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.982507228 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.936731866 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.227766149 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.969648781 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950899934 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.944221752 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.938472616 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.930307939 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.2289914 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357725109 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.993118747 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.937059164 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.931348016 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.95204189 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.938872007 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.933690214 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.248200939 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.970287235 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.94914386 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.056906723 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.946118567 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.967458147 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.931425612 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.939740456 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.967006436 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.951691781 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.967067528 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.938884749 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950288155 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.95250014 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.934380618 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.945671479 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.946578274 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.93951188 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.942058262 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.931444214 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.967687764 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950257042 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.949798631 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.958060735 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.059186205 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.934580753 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.23229042 seconds)
done (took 303.578636907 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.00760156 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.933020508 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.032471867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.935339719 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.015434116 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.019288662 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.933480837 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.934104563 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.933917996 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.306044705 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.9335174 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.932877501 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.93466465 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.932422092 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.016447369 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.935767667 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.932301332 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.270551343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.936858242 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.004643325 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.933456001 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.933527549 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.936477257 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.306227956 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.930786171 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.93335421 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.005504302 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.937402291 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.301523139 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.928829023 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.935683725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.302546968 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.026423623 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.954913207 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.945523543 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.944183301 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.016416157 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.942080803 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.015439867 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.01485038 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.031549605 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.97831779 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.938163725 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.927685731 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.940218045 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.938682005 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.933263039 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.966174696 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.935410078 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.93578371 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.274607444 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.946550462 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.936325062 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.935061343 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.934721415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.968548969 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.935423687 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.939712014 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.027271419 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.939894576 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.998268709 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.307540717 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.308005625 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.937643175 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.929695727 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.934834359 seconds)
  done (took 188.760593546 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.00336636 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.015847721 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.002101277 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.94154219 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.987494008 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.004226506 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.941038969 seconds)
  done (took 15.750561544 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.943271525 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.939759238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.988887275 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.987459484 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.93904694 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.090635804 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.939289251 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.948160133 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.936533105 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.990453289 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.938499626 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.939643748 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.945887871 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.936519748 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.988159001 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.948533051 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.052269017 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.939633574 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.941132521 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.088183389 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.938413344 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.94693293 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.970802828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.94822359 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.937920641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.944337307 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.522970611 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940206893 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.938868709 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.940794017 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.938667501 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.97924248 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940155721 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.941184998 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.939292328 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.05471523 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.940633451 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.937992446 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.941687758 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.933653071 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.942035444 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.940269388 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.941704584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.937791693 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.940947249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.961037637 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.941282258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.93981432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.940961583 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941087638 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.972041098 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.942527183 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.939552689 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.939027834 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.993775923 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.949161755 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.943914833 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.938924801 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940826006 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.939217475 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.090244791 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.991128748 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.941046333 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.989663517 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.942182236 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.94157094 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.943780952 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.941892456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.03586107 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.940971807 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.990417621 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.941290973 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.0982192 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.963432735 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.944519075 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.942882127 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.943814331 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.943468172 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.943016015 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.949252668 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.939449496 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.941895346 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.94628388 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940203405 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.940563677 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.065563771 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.050290074 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.940934328 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.954321704 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.949567842 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.941241128 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.976441115 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.943924739 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.940595835 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.997987249 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.058638228 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.998062269 seconds)
  done (took 212.727695483 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.946922217 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.950408025 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.941543127 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.957699169 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.942388788 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.941396627 seconds)
  done (took 13.54163257 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.944183167 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.944047723 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.942928866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.943671073 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.946147222 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.943308257 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.943622695 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.94469817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.948320713 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.943581331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.94427374 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.945899306 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.945391846 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.946403565 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.947354004 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.94571235 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.946735315 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.943745198 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.947237672 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.947131867 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.091015978 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.947548874 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.947425752 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.9451373 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.950300478 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.947277236 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.951188687 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.947125511 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.946577496 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.952127741 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.951916178 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.946225852 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.945588387 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.952022784 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.952076594 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.946868105 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.950802337 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.946368832 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.944854079 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.946298605 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.94834009 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.947786052 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.948436963 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.948431025 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.949130582 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.950663605 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.950461702 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.954958741 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.949269045 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.948138458 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.949200619 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.947235644 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.947243585 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.947266161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.947511713 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.952849047 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.951662071 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.9490852 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.9488698 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.946914511 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.950331114 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.948061242 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.949518243 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.953846588 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.955595047 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.948731478 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.947394406 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.953013469 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.949333425 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.947480266 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.948576251 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.946640628 seconds)
  done (took 143.259927723 seconds)
done (took 575.913285612 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.138469963 seconds)
  done (took 9.004403128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.123144839 seconds)
  done (took 9.032466922 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.434442255 seconds)
  done (took 10.302910663 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.971771411 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.97717589 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.954170472 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.94989177 seconds)
  done (took 29.742547471 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.049125522 seconds)
  done (took 8.915078212 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.967362241 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.945031618 seconds)
  done (took 15.814231462 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.019739438 seconds)
  done (took 8.886820535 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.049747173 seconds)
  done (took 8.942291141 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.96786601 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.977774107 seconds)
  done (took 15.827938956 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.928944458 seconds)
  done (took 8.796795698 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.64010905 seconds)
  done (took 11.598716504 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.95529658 seconds)
  done (took 8.931276727 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.959360744 seconds)
  done (took 8.828561502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.046540096 seconds)
  done (took 8.914266023 seconds)
done (took 165.406158847 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.947100026 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.944444617 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.944625182 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.945390229 seconds)
  done (took 29.650472272 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.984193145 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.984055073 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.985246347 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.995180192 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.986567173 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.984410324 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.976909229 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.9767434 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.996025975 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.987463212 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.986868827 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.987495362 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.984681275 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.977764143 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.988362448 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.986208189 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.99571074 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.986493393 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.978106988 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.988347731 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.952040718 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.995077075 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.987972142 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.951982188 seconds)
  done (took 49.473553598 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.147598662 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.018936015 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.102195832 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.000780483 seconds)
  done (took 10.139416052 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.003117576 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.004644094 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.017097453 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.055174524 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.08475091 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.014202458 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.978558788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.974000425 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.960321043 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.006377225 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.081840311 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.999436273 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.089979869 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.952681342 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.131730684 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.952420439 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.952474534 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.004151189 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.055282366 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.070109624 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.953325109 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.011550192 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.012782072 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.006838121 seconds)
  done (took 50.242967442 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.957806852 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.96556721 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.963910957 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.957951203 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.95817947 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.958157239 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.964521705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.960974208 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.980777965 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.96073112 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.959282773 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.958382274 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.959250633 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.960614375 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.959047324 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.972797031 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.973560009 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.959302684 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.963496737 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.964839763 seconds)
  done (took 41.133112141 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.95165997 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.806303945 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.302474969 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.208108665 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.951620394 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.954338423 seconds)
  done (took 32.05208136 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.971810725 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.964164062 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.958164989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.016404418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.100159706 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.967531013 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.958664198 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.970016753 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.007337254 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.024965187 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.980960571 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.987971406 seconds)
  done (took 25.784198697 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.956284245 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.955404035 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.956246162 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.971227106 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.969699842 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.967011817 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.965968475 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.953837503 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.974708171 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.978218574 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.968898642 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.971568604 seconds)
  done (took 45.470351263 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044619653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.841350293 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.619131689 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675987603 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.490852056 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165007023 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.481835525 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128744158 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.957884637 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229580148 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.599257235 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207021645 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207591291 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955809933 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.030209898 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.428075253 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256799532 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192189988 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987382304 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720366657 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08369895 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.520303325 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.705116195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091525841 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166103591 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.088482495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.217960643 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.913210721 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096052072 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998954607 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966693933 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958519571 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230545457 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174065262 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088659889 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966681151 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612913961 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.675519395 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.957973995 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.68517824 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.722875241 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.09988648 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964807715 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957973148 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.893142287 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500211016 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137691569 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.963941427 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.660399957 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.962226251 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968663951 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049556694 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.963081424 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.773371738 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915572159 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.238121262 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.956210048 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962499149 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52735095 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.109673585 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.605220243 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.898051422 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.048429816 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698078244 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.448742566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.118690897 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.962598887 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962181718 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890812504 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.740722642 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088334543 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104393972 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.978953761 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608108082 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267099993 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.703385599 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.049818072 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257444659 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.759037951 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.896641507 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186927691 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.915722926 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893869016 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.817398229 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.894595748 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240029772 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999194808 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.622625912 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999694882 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131147654 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970261978 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980036142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967024382 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182719451 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.839790249 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961303426 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.583051465 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253026002 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983751209 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134456043 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893516025 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.964601983 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215737463 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.172023578 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.206505638 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.435182065 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124813193 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962231028 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.049551965 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.890756797 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972633967 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.247053214 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031556951 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.111668578 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09882434 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.919876514 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271186647 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992081274 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.137235116 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.657861761 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234370849 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.293015013 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2146402 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046135208 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.969884471 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.963355639 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.767020467 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.592121223 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.186832437 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.962021087 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341503628 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099673523 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.964607577 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898211867 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.626141197 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64688321 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.081276044 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186447091 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.815098141 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359326178 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898350032 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107852745 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.074189163 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.186027028 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.626283732 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.052468944 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223229156 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333060928 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.194921564 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079986092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98373078 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083193284 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985160956 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.263582682 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324753946 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.968661207 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.967716416 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.758408559 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.037679386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973380839 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.968907616 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.758399268 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261092388 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002287598 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.976733585 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.900944658 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.980142341 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047646575 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970935895 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97502821 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.488288188 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7155005 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.975970502 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.616709491 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189019595 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975912472 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.773713935 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164558517 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.047467206 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252701758 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037516604 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.898255721 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.669304972 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.670235022 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967386225 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899792773 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.967660344 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975118837 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977590246 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.185520799 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259139861 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.022448469 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.706009535 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.088792893 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977743632 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.971938748 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968529918 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.466197878 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.124012144 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483364284 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082538543 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103202893 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.981198611 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.900356512 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.971617638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972173911 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.968820915 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.92032697 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020245498 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.725590633 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307468123 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225604152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614767955 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984446138 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.810766868 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.104376373 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.992421678 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60947967 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955540759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.071616115 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02892005 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.978284705 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.107823638 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.745003195 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.537295917 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284131964 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308030653 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436136481 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.34334917 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.293807905 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144933241 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202167617 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.497844174 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029229075 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146709804 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912179034 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054316792 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.632082085 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334676728 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984022309 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19585993 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371201639 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.670789387 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139484569 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178909883 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004861132 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.784181174 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003248832 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.491771304 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124406844 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.642680156 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211848239 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139875962 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606407293 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.088385883 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.96913072 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.448874527 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054048215 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.679967768 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.331298737 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.508276934 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.660860758 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350379497 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.971942282 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.415607943 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339792116 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308692825 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.061879426 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905817699 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981518074 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981142795 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.969476845 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.94922819 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.821224705 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.223419699 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98300603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205835931 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.24627598 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256831974 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.897051357 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.976763429 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971864977 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280554882 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.710496084 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215826055 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.300339442 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.549037566 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985437307 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.905891645 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905503012 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.675611598 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.98136647 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947960473 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206065138 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.083179484 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92590648 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363032285 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287879992 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.229017208 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.98790704 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262741398 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257460386 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.706929469 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001366484 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.07344113 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60999848 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.69312345 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.195617203 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209466526 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771150835 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203864728 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.643745394 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.949255016 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.972641924 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187894762 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195324869 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.686537341 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236712045 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.701117302 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.986764424 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341068038 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042272492 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.68507705 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201193899 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.064656764 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984216215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05646006 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984808575 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.986087599 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985308844 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023310165 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.68685282 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.121915905 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.990129398 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066559694 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.135657482 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.563290535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.985973908 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269990253 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346696634 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328083232 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046415026 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.976454218 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977299104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908992028 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113560836 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.420727445 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249854037 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.106096149 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.114263786 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003285686 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.604532804 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264849787 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290731926 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251929506 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.871659747 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977797351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.069120377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.200667711 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988121418 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.186130105 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214589612 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306827175 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449263274 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.105323424 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254652362 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2526414 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345783845 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979971463 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56747866 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.993409677 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.506824638 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.02046699 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.687679367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275879558 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988816052 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200432054 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000495754 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.174936459 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430249224 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.729066147 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348471192 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.984288353 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.04288873 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272441989 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400014551 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301136041 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061275242 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989972054 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.675330808 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118284688 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.864574975 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.201213018 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.982867641 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189062092 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.693022945 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989206654 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273034802 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300222508 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.980514375 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.886163489 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015628077 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.98904931 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202501069 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258289804 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232629364 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989306197 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.988962794 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.798377313 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271607345 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049995376 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915462957 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.984192924 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080746029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.227412539 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001544855 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.498213734 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.683787921 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291450851 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.902525659 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002564632 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390568478 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.442115777 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334785887 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.512464949 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220334978 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.541758444 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836056685 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.357964072 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.986628929 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373464183 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361046576 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.985731549 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.480618061 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095750964 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.270657083 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31560941 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.995844002 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824048027 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.032135106 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205203258 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577416918 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923944163 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987528171 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.041269826 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.98404218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.112182821 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995419733 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.923868387 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838699993 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.826166579 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474913287 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.988184995 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.10378569 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.626071162 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.558068198 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095640651 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144108696 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.999106165 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.688136162 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.279115031 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241518776 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.494528639 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.060097921 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.993135624 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989728022 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916578173 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.18619375 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.18576611 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29906802 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.319854251 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.102628551 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992695069 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.203187359 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201041271 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.713436885 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160940435 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365523018 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104182998 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.914539632 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.701811288 seconds)
  done (took 1729.676340805 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.017039107 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.125075686 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.005277172 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.024934059 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.031706634 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.12412465 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.073893114 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.071538409 seconds)
  done (took 58.382462921 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.984271818 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.171293526 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.995722177 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.984914295 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.046022664 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.989348474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.202622024 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.998839547 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.040089546 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.992776138 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.983988805 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.004300892 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.341933933 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.009230701 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.982604079 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.994958038 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.99697489 seconds)
  done (took 76.678935499 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.986618798 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.16701327 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.007436511 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.011659589 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.861053486 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.997584653 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.959120701 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.99605505 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.990872389 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.152222531 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.322138115 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.04165937 seconds)
  done (took 91.407463226 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.001038646 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.988801086 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.991145686 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.987883992 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.994685308 seconds)
  done (took 11.879127902 seconds)
done (took 2253.856663552 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.372534325 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.170225479 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.222326015 seconds)
  done (took 6.301347317 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.1325241 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.184585466 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.298562362 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.305916859 seconds)
  done (took 10.834146584 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.283037929 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.374212898 seconds)
  done (took 6.567825099 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.310728675 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.007515688 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.40508436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.989977939 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.989715723 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.991864622 seconds)
  done (took 22.885744159 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.992484511 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.996910314 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.994216039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.996862785 seconds)
  done (took 9.89109737 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.97344731 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.679333301 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.972884783 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.990631493 seconds)
  done (took 21.526533855 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.739683554 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.116396146 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.736448236 seconds)
  done (took 9.503188229 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.676657711 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.202670165 seconds)
  done (took 9.790751909 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.151377004 seconds)
  done (took 4.062203851 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.021281836 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.264683902 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.512516692 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.550889889 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.613642071 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.809832662 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.28894306 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.216161327 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.434689841 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.448393456 seconds)
  done (took 26.072527178 seconds)
done (took 143.441828161 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.328983824 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.009968401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.186093489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.337667925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.217016284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.187699692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.20279651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.327839761 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.022313858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.007876037 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.344024363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.217152103 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.14781858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.008504383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.157197841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.014430911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.212714662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.345916352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.027328573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.257627272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.214107383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.990989558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.187496182 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.007050068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.217297601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.139344924 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.535720047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.013420613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.167599539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.547906384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.143305878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.409978511 seconds)
  done (took 172.047147151 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.9939791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.99252082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.992286219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.991746369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.537766352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.994063221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.993409354 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.992802863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.409308483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.403838922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.993574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.531220494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.994447983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.992931109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.993340373 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.992275663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.567583956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.993611801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.993732827 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.992678627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.994028745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.368946712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.993977338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.398500286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.584833174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.003484793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.993392218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.007839072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.014665878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.011916659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.013002676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.995217407 seconds)
  done (took 213.642670311 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.993402918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.994619068 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995148876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.995015412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.995425928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995987731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.996006076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.993815999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.727335755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.742436818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.006604397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.009897003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.009514176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.994463536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.014435159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.994484276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.019031156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.009382681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.014279997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.015136503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.019194425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.770330143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.018246019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.761552137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.004838655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.008567003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.996123465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.012913187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.018543506 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.0140749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.020897483 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.995812898 seconds)
  done (took 225.097063784 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.255184016 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.003121752 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.00325672 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.911133059 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.004318074 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.002589702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.01050236 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.251525162 seconds)
  done (took 20.385182841 seconds)
done (took 633.0911255 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.478307772 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.327991558 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.183026742 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.026785611 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.261056319 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.057636426 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.023144864 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.088771012 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.640110179 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.092909004 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.69144857 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.042747277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.774454061 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.051323109 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.152381068 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.081925838 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.566658155 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.657421097 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.201787903 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.070645087 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.195229493 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.947423776 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.106633273 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.67774988 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.79297511 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.993744277 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.098062107 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.578038183 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.035487645 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.188024434 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.768218528 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.320203493 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.035303434 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.019842668 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.079943591 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.056156836 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.301150475 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.032997088 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.143414816 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.749363374 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.092862537 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.55320091 seconds)
  done (took 108.155021435 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.992801886 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.991243015 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.990397961 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.990999551 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.99096126 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.991561246 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.989858389 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.990748055 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.990981207 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.990553894 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.990222787 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.991302495 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.990739216 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.991015011 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.991545069 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.99130929 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.993258481 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.993068194 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.990173983 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.990368648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.991664244 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.99260647 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.008645671 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.991274112 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.993878663 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.992699829 seconds)
  done (took 53.723760165 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.008131585 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.154536248 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.247003652 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025553242 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.006057559 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.008569509 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.024138226 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.012294752 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.007525934 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.00710117 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.112584497 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.013910764 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.024928642 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.240746558 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.023788256 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.009382724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.007572278 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.006026723 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.159617975 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.022774896 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.024891906 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.01311855 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.024688823 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.018742311 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.00885841 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.006900421 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.009051388 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.497387645 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.0159116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.109785444 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.049033117 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.029479478 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.414503124 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.253597554 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.061403436 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.01688877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.009088536 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.11426986 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.013433683 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.006346063 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.025992675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.012328625 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.241891184 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.49813264 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.021995056 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.009777874 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.507641405 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.124852798 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.049671309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.019721178 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.246134395 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.026584395 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.012267345 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.008473696 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.045576839 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.015301283 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.008919851 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.360173894 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.019213074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.026506864 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.016269539 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.008863247 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.1675855 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.016993508 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.155418242 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.018804958 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.016485671 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.009564884 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.245961515 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.02642327 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.5001883 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.023470397 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.011085953 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.115349785 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.161764843 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.535707018 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.021568792 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.167381495 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.430180596 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.033535013 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.017170068 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.489210993 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.036911461 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.017186858 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.012359493 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.013388113 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.01285989 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.059736409 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.025879878 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.439288266 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.510277806 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.376336529 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.037045262 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.023726742 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.010977438 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.358591411 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.020839505 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.013488628 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.243440872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.511626638 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.025877893 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.018847404 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.489675033 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.027234846 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.02984967 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.019535451 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.251373337 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.02801455 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.058510849 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.014107541 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.017788949 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.014150443 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.029769991 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.017664254 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.013132966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.484412989 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.136405139 seconds)
  done (took 248.615635341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.006582872 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.010206597 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.0065689 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.011062227 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.006337569 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.011380841 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.006121662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.006276579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.011550837 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.006258416 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.00703402 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.006940346 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.008917211 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.012773827 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.632350293 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.013986577 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.613456522 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.008924348 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.008725487 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.01173045 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.694196942 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.014706805 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.00882488 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.007134018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.007826701 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.010745637 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.011958075 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.014953473 seconds)
  done (took 172.10771095 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.017847305 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.194175255 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.039365054 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.054908349 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.026164319 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.014297226 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.03750122 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.036302863 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.019977255 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.014264501 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.013826358 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.076426453 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.028549724 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.154424061 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.04850074 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.047274908 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.116339041 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.026224684 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.015714647 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.014729681 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.043616541 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.010147121 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.076985598 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.142443377 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.038045843 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.131585424 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.025111735 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.01976316 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.014265846 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.132482618 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.036191188 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.079353592 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.04829304 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.034206653 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.136320655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.135934679 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.123782071 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.0502504 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.021058422 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.016807127 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.017134519 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.004299262 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.132894256 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.041482749 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.01757797 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.120837585 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.041245708 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.019587837 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.028211976 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.018525519 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.030870603 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.035139016 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.083709062 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.148251439 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.053123083 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.045040437 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.039972936 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.303874778 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.028383995 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.115806335 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.012490734 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.13464278 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.040797201 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.004521606 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.017912016 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.023528292 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.047276346 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.049504153 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.12034796 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.02587009 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.114738295 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.055822885 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.024789102 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.018784588 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.020772103 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.133765426 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.138150768 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.055534583 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.054193448 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.04917126 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.013531125 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.017315522 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.006587938 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.035162016 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.022600617 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.133929401 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.137841096 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.029361283 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.020833168 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.020265847 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.02086829 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.043151521 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.14075742 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.056616686 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.111066342 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.088308843 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.091538623 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.034603964 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.033201224 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.023453492 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.082362181 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.036028355 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.031566464 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.35433691 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.08972558 seconds)
  done (took 218.390422535 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.477249582 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.073933808 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.075453485 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.347379272 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.36285252 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.935468681 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.068629417 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.069522121 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.092377426 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.256741604 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.144253821 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.091090161 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.054300614 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.0415594 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.067803801 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.091528905 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.075883524 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.37728569 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.171726138 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.224576012 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.050828634 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.378991117 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.344965178 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.453555498 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.103934268 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.421779401 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.723292015 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.219147049 seconds)
  done (took 65.739288083 seconds)
done (took 868.65083825 seconds)
SAVING RESULT...
DONE!
