cset: moving following pidspec: 15145
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.626085579 seconds)
loading group "shootout"... done (took 1.178077355 seconds)
loading group "string"... done (took 0.479470781 seconds)
loading group "linalg"... done (took 7.965751697 seconds)
loading group "parallel"... done (took 0.153873382 seconds)
loading group "find"... done (took 1.337535437 seconds)
loading group "tuple"... done (took 1.933092248 seconds)
loading group "union"... done (took 12.649647443 seconds)
loading group "dates"... done (took 1.330495919 seconds)
loading group "micro"... done (took 0.20262559 seconds)
loading group "simd"... done (took 4.426794465 seconds)
loading group "io"... done (took 1.049992233 seconds)
loading group "random"... done (took 8.831531952 seconds)
loading group "problem"... done (took 1.589348855 seconds)
loading group "array"... done (took 19.58119864 seconds)
loading group "misc"... done (took 1.581850056 seconds)
loading group "scalar"... done (took 39.895368153 seconds)
loading group "sort"... done (took 3.052144952 seconds)
loading group "sparse"... done (took 11.879598744 seconds)
loading group "collection"... done (took 17.369416415 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.499475802 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126056537 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128656544 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119943867 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148989088 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124125733 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126913118 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085224394 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.894128984 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142581554 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115455499 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420339997 seconds)
done (took 5.267018062 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164012332 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086786087 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079998598 seconds)
  done (took 1.287048791 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064636911 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133198162 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066171172 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066801957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066380689 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065672114 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065973763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065838353 seconds)
  done (took 1.650399789 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070798763 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067207844 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064975635 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067215936 seconds)
  done (took 1.395432131 seconds)
done (took 5.701244273 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.241363895 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.102769999 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.285599553 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.391502733 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.462049716 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091937644 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07383356 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069357177 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129119425 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318921356 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102693158 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183979719 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090755222 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175455849 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.022213631 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.121908528 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08539038 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.1248294 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093906667 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13392465 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.395064414 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078174671 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073892815 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070119884 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067193832 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.637831149 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663380312 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132197101 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084591204 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099922177 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115328955 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.634168734 seconds)
  done (took 10.5105618 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091920539 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.091762024 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068368648 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123697619 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09370319 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069216196 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07422273 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066670682 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08871699 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125937524 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090686839 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099466448 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066003782 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068615147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.075184049 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197840655 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080696952 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080617263 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066925288 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080260859 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106916422 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078952256 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07870625 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078480244 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129241444 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17428347 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099723883 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098094966 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066115739 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08334734 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114842259 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12641906 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066636865 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064587579 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120061216 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094438746 seconds)
  done (took 4.55450535 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.967131789 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092335479 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.102867861 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.630072597 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065639043 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.153187881 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2423855 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072585193 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.410574613 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147356188 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13847789 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147674237 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117041906 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069371175 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.212308448 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115820146 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501254426 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067336102 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066592426 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064895921 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068336201 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067263668 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06262966 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.073750727 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094498153 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088002828 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.167492724 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.921249429 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.245121604 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066772736 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162554339 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086052047 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.359193506 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06989217 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083180748 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.417327824 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123968528 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065355228 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16636711 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116934704 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064432716 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085580872 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117659045 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078121226 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068454326 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06833718 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067855457 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071032572 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07837272 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101509516 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065625298 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064510581 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064754314 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164458165 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064636569 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065698995 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.0673305 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063988614 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149532324 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064918116 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141749957 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064120985 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068135979 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.100823978 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068091692 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.091891144 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.100995406 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.332691907 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031029754 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065928768 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.17780629 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077883685 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065564938 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070536199 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065495571 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067595082 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066923654 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073324514 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069914686 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068556002 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108441693 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066971936 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.07142269 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067007342 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071234455 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097426757 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065232317 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.489497591 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097479629 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066116089 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076748524 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105776972 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067076653 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071846631 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067049054 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066396762 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065460789 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066556833 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.179951813 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096096097 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069374198 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113046442 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.021278554 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071524213 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066118924 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071256945 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069385101 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068995939 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06461399 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065385041 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069752314 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067629391 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06434274 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.111212904 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067367182 seconds)
  done (took 21.877130446 seconds)
done (took 39.031483685 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.258396424 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080327074 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081031132 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080867525 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081426338 seconds)
  done (took 1.798193257 seconds)
done (took 3.005087086 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108409902 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063155261 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.099226427 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099445986 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063293467 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063384004 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096894241 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063569253 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.100073769 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099364511 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101515336 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100580182 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063566913 seconds)
  done (took 2.338840764 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069846339 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080741523 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082407945 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061686002 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071744373 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080664997 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061811564 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080313074 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086158604 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084768882 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080875899 seconds)
  done (took 2.046937694 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069702851 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08095674 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082398618 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061416603 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071919916 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081196613 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061478776 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080577732 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08381736 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080944068 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080867662 seconds)
  done (took 2.030411756 seconds)
done (took 7.615881012 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.067497462 seconds)
  done (took 1.247937321 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.525344634 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.545369998 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067055681 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085463576 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189429925 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097452925 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.221190696 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072896822 seconds)
  done (took 8.167914944 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097094578 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072485709 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068046132 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06944234 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067643324 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067306325 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069046335 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068648711 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068350796 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068873647 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068184376 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069079192 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069530798 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067621122 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067759546 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067548256 seconds)
  done (took 2.414974797 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09846433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096786676 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07255069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073366264 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071419693 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070857932 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073252505 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072615369 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069687817 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071292745 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073023858 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07168374 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071575391 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062798008 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072773959 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074648879 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06985883 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072282856 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073415347 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074020962 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073153526 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062278318 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071592853 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072703505 seconds)
  done (took 3.078431133 seconds)
done (took 16.104893643 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114605915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07599929 seconds)
  done (took 1.381824927 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.070402082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070174251 seconds)
  done (took 1.343098122 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076611677 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060693533 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081949837 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071647175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061153299 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061211343 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079991334 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061449943 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060882581 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061537295 seconds)
  done (took 1.881101588 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064220863 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07072005 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067537739 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.070274217 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068166987 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062370973 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065911132 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062407036 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070244101 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061520202 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066188001 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081892573 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066136429 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083956667 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065551357 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066502975 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068495818 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065350403 seconds)
  done (took 2.43719391 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059732585 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061855791 seconds)
  done (took 1.332949818 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064011182 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062204577 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064849279 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064303557 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062051396 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061185958 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061929294 seconds)
  done (took 1.642318993 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.419070269 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121680944 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.344058114 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068882414 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078086856 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24928965 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06265075 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067589872 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067694756 seconds)
  done (took 2.729031802 seconds)
done (took 13.968119615 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081046742 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083462651 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089776577 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41757073 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091468858 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066248027 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112542557 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177618461 seconds)
done (took 2.351301026 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213097531 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.311890586 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.895442796 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066184235 seconds)
  done (took 3.486300848 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338188873 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079320679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077447728 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066931069 seconds)
  done (took 1.786339253 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065367015 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070809037 seconds)
  done (took 1.35853143 seconds)
done (took 8.068269981 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064230292 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063482567 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090063416 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063511122 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063115933 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062492627 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062988779 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063070078 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063126819 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063050835 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062971448 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.063083589 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063280721 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062877376 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063740491 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063221987 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063120647 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063029878 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063312909 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063321408 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063456194 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06290611 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063310063 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063353362 seconds)
  done (took 2.78876008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08121969 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06565394 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067111222 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066854029 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067098443 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066979584 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066794541 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065454624 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066900018 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065380845 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066988797 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067408215 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06479784 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067194819 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065128575 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06715681 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067301837 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065613204 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064941195 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06730802 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066627839 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065311286 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067050741 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066696157 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067267622 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067538289 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065101412 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065281276 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06658967 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067537999 seconds)
  done (took 3.24759518 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065947836 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059513541 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060418068 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069100019 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060098618 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060442512 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060478745 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059486067 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060196375 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061121303 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060464318 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059373955 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060485316 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059679145 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059470737 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060504265 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06407773 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07785687 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06050712 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060430149 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063531281 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059583676 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.05967726 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059750118 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059895591 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059499518 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059254806 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06017193 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059728842 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060838992 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059948387 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063416848 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073118993 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060139956 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06935612 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064419398 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059822295 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063492984 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.0611819 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059657608 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059377003 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059370443 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059539312 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059568724 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069285011 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059992957 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060880812 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060524168 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060154915 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059293319 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060048641 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062318272 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065337052 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061565217 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059384202 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061002504 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059360534 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060573987 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059785472 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.05959287 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059635942 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062976999 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.062020761 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060571697 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077788596 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061245476 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068955279 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059746067 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06073966 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063008891 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060405801 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076300724 seconds)
  done (took 5.697933998 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089129745 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088229089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065227192 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064702304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060683372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060298431 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068206928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060316629 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064427829 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079834586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060422958 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064410828 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064253218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063947956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060451695 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065019282 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068735671 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060734549 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060294109 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064026488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060824058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067891623 seconds)
  done (took 2.711525108 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141818832 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066480912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103724946 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076626773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068650526 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076655725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06617116 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065969659 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065900092 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066369658 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066487956 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066093055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068631062 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066405277 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066330957 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066210736 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066226287 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066489757 seconds)
  done (took 2.569243496 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077388914 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066083439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087970675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065664528 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065614088 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065175191 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069770123 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070533947 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065449167 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065753321 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070383504 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06555346 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065038091 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06563119 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065298283 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065701273 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065245605 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065441202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070635766 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06960721 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069502186 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070166631 seconds)
  done (took 2.753235088 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075946331 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065061942 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078471763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066524359 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060221899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060330659 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066150104 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06485048 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065447851 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063868086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064973534 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060252804 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066427142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064944267 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066573411 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065034848 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064257663 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064866147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06448876 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06014952 seconds)
  done (took 2.551507432 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087092997 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063702144 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06296832 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082009727 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063354102 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062910931 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0816829 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063237915 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063331715 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084963002 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063391247 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063133582 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082100346 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082374247 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063216565 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081572757 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081755976 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081631158 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063077541 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063188095 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084872009 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063286435 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081735593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063339974 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063223827 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063065287 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063234901 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081966592 seconds)
  done (took 3.252471105 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063918779 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063250908 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063000353 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063106637 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063103965 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063387097 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063624379 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063386803 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062857924 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063025016 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062954099 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063179806 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062766668 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062608994 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063346739 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063005886 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062744721 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063374746 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063118798 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063047059 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062765293 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062831827 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063295465 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063152067 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063437611 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062987218 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063202768 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063413577 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063344217 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063571539 seconds)
  done (took 3.146257536 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073913654 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072293718 seconds)
  done (took 1.397185527 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063147727 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076816105 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059895089 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07077468 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069159405 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064057136 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069941552 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069047254 seconds)
  done (took 1.787239724 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.068536106 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.091020182 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.0627987 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062623422 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065856462 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121578863 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.076792048 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073444911 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074719892 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063871909 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062055333 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074504648 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063882451 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073900116 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063854794 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07017597 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06804923 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073254016 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073956118 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060190286 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073068273 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062539833 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060766379 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062685854 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061604121 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067869487 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076538029 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073381019 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069520684 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059825057 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.08064806 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060440758 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06198365 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069979997 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065610106 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060599396 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097316114 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061154916 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066678521 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060503811 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072215082 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080622099 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074470176 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078344836 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062417709 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062724344 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0605988 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062845257 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063598623 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06959692 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060356537 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067245453 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060090278 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062345264 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07092574 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061095433 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067257581 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0696036 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072795546 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070514575 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06861264 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075484162 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069172265 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070004537 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061438491 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079294669 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062646042 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073205178 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074577073 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062059113 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074758156 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0601881 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0593397 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060377769 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092838676 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062537657 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061621892 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.06086715 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06061407 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061758277 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06932438 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06649368 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067174567 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064426793 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075638122 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069385797 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.06026116 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068384746 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078513035 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063556533 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060527414 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076611088 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063526791 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06013841 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077559443 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069658389 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062124908 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060929843 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063517752 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073551156 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061762615 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058773677 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068218744 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061682576 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063246081 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065135723 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067377674 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059804429 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06968238 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.066007602 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062067413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058871937 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064308253 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061534366 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05896728 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068907532 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059851602 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07497867 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06641224 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073901281 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074232743 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070361242 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075823594 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059782125 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058462653 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076827072 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.202209675 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.064139851 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080138531 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06171096 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072213372 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061016113 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063530144 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070960991 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060156441 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062867557 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061201787 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067432399 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062855747 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063394462 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065841606 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068807084 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073354268 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06238474 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069145994 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061348397 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076208696 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070357585 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065719759 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065710825 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062021044 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072546981 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067065256 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069775748 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062109152 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062224412 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061102069 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070757957 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070257691 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063452439 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069951193 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065304579 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061643567 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061331166 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062366003 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064592273 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065275257 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06239156 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067840895 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069041734 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075353372 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070156074 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069023239 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059841615 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060226909 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064693604 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060194656 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065136595 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069983713 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075565486 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072156918 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081241212 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060929517 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070060511 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062464586 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077315437 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072949107 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061672559 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06623377 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059640409 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062852968 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069785795 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072229476 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075019908 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075329 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06496699 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064946136 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06076744 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075074708 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061257078 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068632219 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070001078 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065856915 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060931757 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062816615 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069482061 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065024663 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061056343 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075831085 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068242585 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060508557 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07451796 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060943896 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071634555 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060710887 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064256411 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065575057 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062918377 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069637311 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075962882 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059838545 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061244715 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076061819 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063288191 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062833863 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067492842 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074488952 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064457244 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067443579 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071100085 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069772458 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064415856 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070141874 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061477497 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068994129 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063764516 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07135283 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060345707 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077911871 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058992239 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074495548 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060998434 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070679554 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060325259 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068958361 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060826031 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076479298 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061927284 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.06076184 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071553005 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059466616 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069000751 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059751489 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065047958 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066482484 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068681414 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061668818 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.205452247 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064366908 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070491098 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066552525 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069849184 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070387186 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065477701 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06118359 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068756188 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072115708 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069032066 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062938997 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062433456 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062226112 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069947736 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063006969 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062666849 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068557231 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065187701 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066433798 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062506406 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.0631496 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063341712 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069536972 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071012284 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078397904 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069559591 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068082323 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069857562 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060215582 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076274121 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060705012 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06771738 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060117513 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068224682 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069888843 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060673508 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07989507 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062345326 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06861187 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073823503 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068872418 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064234712 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079120809 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.067035181 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069217081 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068394851 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065079509 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066579085 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063011983 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068804512 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069900399 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071509765 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061734355 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067666096 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068888187 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062736706 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069927985 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062642323 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068218128 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062414396 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059921027 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065008933 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072014185 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065359072 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065762503 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060862988 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059548751 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061235822 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068771229 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065225163 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068976062 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075503729 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059492975 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061855477 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060418918 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06381567 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078638052 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070698842 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06792401 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065115502 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062392784 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062850147 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06313469 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061148945 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065322902 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059866067 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060616139 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071258249 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062636476 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065145353 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060901143 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061737306 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069612951 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066339112 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06127497 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066863484 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060406534 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065453 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059857902 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062749236 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06492752 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059731469 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063702773 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070267405 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.0762886 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066690881 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068573781 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061608488 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067691137 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075245134 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069102256 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061982144 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069182605 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059404229 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077864352 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068942984 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068548018 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069736599 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061092583 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076298941 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064359887 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069583149 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075397877 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061207307 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06769097 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059524477 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074630401 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06381805 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059553198 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067536573 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067191415 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.206298681 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073990588 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062770881 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070599834 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0674751 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064935478 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063136106 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063207792 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069553409 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077382377 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062311701 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066584842 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06889315 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06866932 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065306363 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072964235 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069091609 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062546644 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063625371 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064354511 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06218538 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072994164 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061444914 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065046593 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065247249 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060818 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067280629 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076667525 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069714302 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070111721 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060699767 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060195038 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078163743 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06403 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064687319 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069131344 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069646257 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07320327 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069688589 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076912259 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060590312 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066169551 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073595468 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061566923 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061237837 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064072311 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062277911 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070000649 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070826666 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067735467 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063179325 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067103588 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073004115 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062327971 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064928916 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06652408 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061635755 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070850614 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068378269 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068989281 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063124536 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063694698 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063759674 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069324245 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067383723 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06985045 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061847807 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068928353 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074525236 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067618687 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065008631 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060682548 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06472193 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069703676 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.0664937 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060922732 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065078398 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064036458 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069304881 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070416492 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065337176 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060807344 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077570494 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06908553 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069680646 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063136281 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062983102 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061560738 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060657452 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07210815 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060854989 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063093308 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065168639 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063077837 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078002869 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068481121 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076562471 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061787719 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064919873 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060655609 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070284907 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064678401 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.06103231 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070637353 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060270095 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075684712 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072066677 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067056663 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060616926 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065478586 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068126586 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074846438 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072047789 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069106106 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064143198 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069553383 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062240938 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070755432 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060113871 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058856799 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06974471 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068229678 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072604432 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059632703 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069942125 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.0621954 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067695092 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06777899 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061625331 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0614864 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061468198 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.207515735 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066370262 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072309187 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066258294 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078017484 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062427453 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072154561 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069522909 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072601759 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074336926 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074056523 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069738537 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061399873 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068274183 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068690816 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062806778 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065252798 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065326455 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083331314 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063411272 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063290711 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075656518 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068463317 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060992156 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0688172 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065078422 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070640818 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062032946 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071096993 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065826793 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061892661 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065293248 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065441917 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059544117 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060537817 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061239969 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071172502 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06524385 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0613864 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080241841 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062830376 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06906223 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071961822 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067291882 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062730148 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060379497 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062001968 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073142113 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075981692 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063243991 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068754883 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062324585 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070003311 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059583646 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069040842 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068428485 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08510325 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06079029 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06131042 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074604939 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075499904 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064731505 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070432844 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06950282 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062514269 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082386518 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068571478 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063718606 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071497175 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063620251 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060013638 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059958241 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062699145 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072399867 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06088053 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063705706 seconds)
  done (took 41.756716624 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100897888 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062465706 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06124028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060649528 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073048049 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06180499 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060923254 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061817981 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061606532 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063566593 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06097092 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061436318 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072889491 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075395187 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071954561 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065195627 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060710547 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062166078 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060551624 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061391039 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071609707 seconds)
  done (took 2.75214131 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068759462 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076172723 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073121446 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077821511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06953995 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065877735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073557777 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065557896 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073364448 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071179121 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073293525 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066005776 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070881517 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071007765 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070880719 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065479708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073319831 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069206841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065764912 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073170167 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065473101 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073254579 seconds)
  done (took 2.886246902 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063274929 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061436996 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068699903 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060244838 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060102132 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064328568 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060579729 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064606883 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063989458 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064016771 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068933717 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061520167 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.05960261 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065574211 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059966435 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061254272 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103715677 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061307301 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061335478 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060337302 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06360511 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069479042 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060031443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060249907 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06663331 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064540837 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060021892 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062997951 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060961965 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064396617 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061219083 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060121278 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069269657 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067813109 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064405367 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064313988 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062037821 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06189015 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060571592 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060617947 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06829469 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061744435 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060507039 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061978176 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068637635 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060453374 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060045711 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068767669 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062877237 seconds)
  done (took 4.470205853 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072450839 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111624213 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066408647 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091898567 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074154037 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067799949 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066133411 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092410852 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061773042 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062913585 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075609334 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07614503 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063843593 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065812308 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065925679 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063771147 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064509272 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062661384 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066653316 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063149115 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066971321 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067614911 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075112524 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075288323 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064848461 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06287676 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063382764 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065082938 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075186822 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069758518 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065762588 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066381069 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075486192 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068263373 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063533495 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063435057 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075787761 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064090769 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064232358 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061797941 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063338208 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065449024 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067632348 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07606888 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064276897 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068903529 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064085001 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061449687 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074996661 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063768491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068436949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076158794 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064997352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064946029 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065832797 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075199658 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064226998 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062609538 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064652646 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074989145 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061870386 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064878316 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075635684 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063094256 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068043715 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076406834 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068573593 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065252304 seconds)
  done (took 6.168230787 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071327232 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093469844 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072947434 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072858027 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072259868 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072389835 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071934184 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071727651 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07173499 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072614798 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071886677 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111870898 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067788368 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077184793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072241987 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071782232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071550846 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071438336 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071602818 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071651735 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071529357 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072461534 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072273136 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07255724 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075079876 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067147609 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071452881 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071981118 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072295801 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071565819 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074585949 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071458159 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071519465 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073699863 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074637163 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071981744 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06171723 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071672327 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071664241 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071510663 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067585298 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072352907 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07185958 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067301116 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071800119 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071504179 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072731618 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075090618 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080352611 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072471687 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071937641 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072645345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071906657 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071895483 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073222972 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080883409 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072959182 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072532925 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07215852 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072981701 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072582308 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08048691 seconds)
  done (took 5.919321119 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078364115 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069134838 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081386716 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060814758 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060735761 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070673084 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060575885 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060693012 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071029445 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068499946 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07080174 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070725828 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072803369 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070625909 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070496898 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072952918 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070636232 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070854707 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068604122 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070633479 seconds)
  done (took 2.757651909 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07409147 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07925961 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066575879 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070903229 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066068168 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070525611 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064890554 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066298668 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067067484 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066482549 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072078607 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072009883 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067222199 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070552452 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071782155 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070470769 seconds)
  done (took 2.47081473 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068063862 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06914261 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069212383 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062376827 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065530403 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061208137 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062006721 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060045371 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06088751 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075110206 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061783293 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073076577 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061503739 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060548788 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061398136 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06732601 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061030003 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061417891 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061486009 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067018955 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071196144 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062858798 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065635708 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061535171 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066737905 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069113223 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063239014 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065259114 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06185526 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062029302 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067147854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069038783 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061193831 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06231083 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060786292 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061704961 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061612623 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062465145 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067520607 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062071596 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059987697 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066353948 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061772554 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063066814 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06109901 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062240125 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060880164 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06734638 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061934679 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066873476 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06168137 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063636152 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062256046 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069424488 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064550015 seconds)
  done (took 4.883843491 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076665386 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066024675 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060485005 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060302111 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065476508 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066788968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065946098 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065746937 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06608539 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060383919 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066087041 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065093909 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066268307 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065706485 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066312996 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065828172 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059960227 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065847646 seconds)
  done (took 2.546258175 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072764755 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06537133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070463243 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065909967 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065505763 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064912624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060773793 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060564605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060884684 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064960207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065307183 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064500165 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060819935 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06487675 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065405575 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065040738 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065009587 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060717751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065596236 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060817068 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065021998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06067513 seconds)
  done (took 2.775567498 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.0899034 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08397687 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125381394 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078603127 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087385056 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071113932 seconds)
  done (took 1.896021563 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090105693 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10375763 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065806243 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065160415 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075824903 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068959335 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068942405 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069382529 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075857329 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073842187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068776261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075784016 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075831121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07120372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075924446 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079027196 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069149817 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069226174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065632274 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078923739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069437707 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075635712 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06917423 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06899314 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069207221 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070984433 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079328841 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073670479 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06900046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075877272 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079187765 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069238388 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075876508 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076050782 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065637952 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076266784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06929893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079042551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076077905 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071457224 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065907801 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076440242 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076340685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071490959 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079162255 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069614234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071621875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069594466 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069661015 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081885151 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07662016 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072010115 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076390986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07936181 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079534866 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081991673 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074525829 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071676324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076244027 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074498775 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071706622 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076350267 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071464502 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074145643 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078753786 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071636946 seconds)
  done (took 6.248768849 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097325933 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066280448 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069853474 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074404145 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071574009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069372507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06972777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069838711 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069565764 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066087425 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10413722 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069616111 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071511377 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071317491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06968358 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069064567 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069606494 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071487597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066457278 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081528891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069492942 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071410864 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071491195 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071253196 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074024298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078763824 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069184119 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069177184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06914693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069034088 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071303913 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069482549 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071156948 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065666579 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071414132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069673004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069370516 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071684034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069164702 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07627399 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073119966 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0793953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069283579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069440685 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074064495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06924903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069449233 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065995972 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069398931 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066076438 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074405105 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074302818 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074540878 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071714177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069905652 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069579792 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069489659 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069469989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069800898 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079345106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072068582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069686083 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081729842 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069534412 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069464306 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071235718 seconds)
  done (took 6.128389677 seconds)
done (took 126.786055127 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20709078 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18102276 seconds)
  done (took 1.725840338 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072594922 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097657742 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075518645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133270664 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069350272 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10571262 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102393801 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073575453 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070494821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070370409 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070739202 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073432592 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136502627 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06915858 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070247923 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073435849 seconds)
  done (took 2.720580888 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104675894 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.182271141 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112440428 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068930476 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105693669 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075864357 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068507822 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079430033 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072329186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072081865 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078727813 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074369539 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07169999 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07456702 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072421122 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076064563 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071234249 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076165045 seconds)
  done (took 2.89953233 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09225572 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084462093 seconds)
  done (took 1.541790696 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153397738 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103097745 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142568158 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.321055598 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.136424306 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.131013813 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13380002 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129504757 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11259337 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122903089 seconds)
  done (took 2.845887165 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100644126 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17531438 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308470659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120123073 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075314477 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.102639568 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122301392 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080409654 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080120992 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079762477 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079605465 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076526505 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097927192 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076097751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075611068 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07836192 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101746478 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074985944 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075439997 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07563336 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100839464 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069316732 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076243655 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074822708 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077662325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077610384 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07056291 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069338526 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075583638 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075192325 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078562455 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.099851063 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077444047 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102775427 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073594113 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103564292 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074669513 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074215022 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075202474 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073917553 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081093118 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077374717 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078358583 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076679713 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070600819 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074508673 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0702598 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069140887 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079072162 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070077747 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078931901 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07807439 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1025026 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070203739 seconds)
  done (took 6.120893524 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106293448 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104830249 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070383796 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113395177 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104785577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069805797 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104896958 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09935301 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109476847 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06912359 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068450329 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068745823 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077546074 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08124559 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114749513 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106031144 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06955852 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068124238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1055057 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108360711 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068317549 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100565667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099322587 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107411708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067127534 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069228386 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067737725 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068670118 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075094239 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075232553 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068290083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076720472 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085512404 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073956264 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067347916 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067376158 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067606803 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076370502 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077279602 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076881235 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075406422 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067011132 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068112209 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06814358 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069106198 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067231171 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075643681 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076879554 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07587399 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067968351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068376766 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067495463 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068143651 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075914825 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075251026 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077474425 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076689583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067784176 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068276196 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069653708 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077421246 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077567216 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077674977 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068796177 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077468583 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067922189 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078097885 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080979662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068489392 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068394281 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068069877 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067611089 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068456739 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074878444 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075111819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068554581 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067994831 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067691653 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077462085 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075292044 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067665883 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074870759 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06754776 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068054821 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069046648 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068608472 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075221696 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076923764 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068778302 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067718466 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068031366 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067604463 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06691162 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074965126 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076502808 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076296157 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075433707 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068556689 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077094706 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075595481 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068436359 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074852452 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067873316 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067501682 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068193921 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075314003 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074175437 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075585941 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06733633 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066227483 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07364108 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210954566 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069929022 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076805519 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079179735 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077050126 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068433076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079533647 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06946325 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078457574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068960192 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078989925 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071934585 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076531371 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068528888 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067585416 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068476942 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076572049 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068876866 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068587094 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069081457 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068232022 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07641586 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079574194 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069725829 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075624135 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076184538 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069286163 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075961373 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068154085 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07690208 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068548998 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068430198 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067229035 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078748101 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068328438 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068086688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068114155 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078882835 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069170326 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077578368 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075150115 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067697335 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082162368 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077530085 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075441191 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078250764 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069359487 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068300389 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067987547 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068152573 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075193038 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076560017 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068703774 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068420492 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075112559 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077806827 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06772156 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075528452 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075435868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075969846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068573833 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067869273 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078952846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078434747 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076298101 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07588736 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077252957 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068949275 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075364281 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076062836 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068291011 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081662963 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068702204 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08022876 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076244351 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074898813 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076967916 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077414839 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078253042 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078359275 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08063 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068799122 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068474398 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076320041 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068643003 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068345459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075536379 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069019279 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068757942 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081511791 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066979089 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078544919 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067867488 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076695729 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067723476 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068803931 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080401878 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068846276 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068686858 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075646425 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068188826 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075316775 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078409514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074691919 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067555381 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06767616 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075572042 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075784584 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0679412 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067822012 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068287962 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073666147 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073338803 seconds)
  done (took 18.238938798 seconds)
done (took 37.471351793 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206019339 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160309371 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.196320209 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115715331 seconds)
  done (took 2.148444196 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.09511891 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098497493 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.079228907 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065299751 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.084455187 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065212995 seconds)
  done (took 1.898578059 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27348692 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195015843 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176533212 seconds)
  done (took 2.04795995 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218635852 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199282069 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.482227018 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296896047 seconds)
  done (took 2.701393639 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.133550007 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080896974 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06336853 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.074731771 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112169336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.1454528 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.090373878 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.114132644 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074977956 seconds)
  done (took 2.353715586 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133109971 seconds)
done (took 12.721185941 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.196930747 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.222756842 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.264492376 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098233372 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.119093471 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067676284 seconds)
    (7/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071180129 seconds)
    (8/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.241400653 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065815181 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081623499 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076216843 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076769003 seconds)
    (13/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.20136844 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085014777 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.119614266 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06680792 seconds)
    (17/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.1490431 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074181234 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073503902 seconds)
    (20/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.186004881 seconds)
    (21/309) benchmarking ("sort", BigInt, false)...
    done (took 0.466136008 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065421804 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073122617 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067466817 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106788651 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.183337066 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07370632 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085892022 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211785264 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160545062 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065916748 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.095405402 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065159578 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174277377 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072712964 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.168393955 seconds)
    (37/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.188107832 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153322565 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166659426 seconds)
    (40/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.074513207 seconds)
    (41/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065989906 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081594842 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095049341 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073704565 seconds)
    (45/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143922908 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.20196645 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068380149 seconds)
    (48/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.17673862 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073862282 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072921966 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063713654 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164011451 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.188125387 seconds)
    (54/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.064393886 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065699117 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091790993 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090101938 seconds)
    (58/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072525465 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064992306 seconds)
    (60/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078167452 seconds)
    (61/309) benchmarking ("sort", Bool, false)...
    done (took 0.146632974 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12353789 seconds)
    (63/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.19083249 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074589164 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077134844 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119138747 seconds)
    (67/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075582183 seconds)
    (68/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.064286974 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190451539 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076416079 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 0.065983009 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065999602 seconds)
    (73/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076784942 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.228588585 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123814608 seconds)
    (76/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064082243 seconds)
    (77/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073551006 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063318822 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088678688 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0633567 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17312935 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074609876 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071354791 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086542841 seconds)
    (85/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062235552 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.346682686 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086179463 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079046752 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087539712 seconds)
    (90/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077258966 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066062301 seconds)
    (92/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066130051 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.222749531 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064903615 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176167209 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.202418372 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064350908 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174540394 seconds)
    (99/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.083742508 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070528216 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149184044 seconds)
    (102/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.072495522 seconds)
    (103/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065769361 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077328734 seconds)
    (105/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.143271562 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 0.13559044 seconds)
    (107/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096170227 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0678893 seconds)
    (109/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065109545 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087479166 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132988396 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073092362 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.136624146 seconds)
    (114/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075339342 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064730714 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.142896009 seconds)
    (117/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07779152 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072073431 seconds)
    (119/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064990498 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.208913001 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073844402 seconds)
    (122/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143694251 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077754806 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121684209 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064368061 seconds)
    (126/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.217350169 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.202515691 seconds)
    (128/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.148662381 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.213531924 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163496804 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08777335 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072258653 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076942061 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161045504 seconds)
    (135/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.149292612 seconds)
    (136/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073628082 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064379712 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065626232 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073932052 seconds)
    (140/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076313239 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081090302 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083486771 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071608388 seconds)
    (144/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064799743 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065360775 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065022994 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145197105 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092303841 seconds)
    (149/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075142556 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201801698 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170392736 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070030028 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075879814 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176855319 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06438383 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075507891 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163299108 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066514906 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072513178 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064145923 seconds)
    (161/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064346618 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065248684 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06350523 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065258281 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165079066 seconds)
    (166/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075597447 seconds)
    (167/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06923025 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066065895 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064397679 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063594041 seconds)
    (171/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067072342 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077989985 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125190567 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152677441 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068158773 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094608601 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.0927887 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064358414 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065299168 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086814233 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064349862 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124950837 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087819666 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068243786 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136165452 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146905994 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.143283858 seconds)
    (188/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.171987012 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066816148 seconds)
    (190/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065393342 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13582771 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 0.333345688 seconds)
    (193/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068296452 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146538401 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065800144 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.100380817 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065946443 seconds)
    (198/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072858837 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065805347 seconds)
    (200/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066334861 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068632958 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074004049 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064793934 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087195449 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072707332 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065392933 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 0.135001591 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065809172 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22786968 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072964091 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.067442141 seconds)
    (212/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065476902 seconds)
    (213/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.0697345 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.191992459 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06717106 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072641901 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090275403 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066199896 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073274558 seconds)
    (220/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064544539 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065255 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115640814 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076021525 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076649407 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213212537 seconds)
    (226/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074238429 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06533429 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143328453 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064462923 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127506057 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066195118 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072864069 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065798868 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073032458 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064468698 seconds)
    (236/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.149195524 seconds)
    (237/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066806798 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087468265 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064661896 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072518502 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066489899 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076081771 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074758216 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087790486 seconds)
    (245/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066720209 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168475005 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065911972 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073258638 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08899842 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063626333 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177297673 seconds)
    (252/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.096061622 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065543498 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065544519 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06501717 seconds)
    (256/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064719366 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06439121 seconds)
    (258/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.066474071 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066457008 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064247614 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066452484 seconds)
    (262/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066304065 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114712276 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067243985 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064345103 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072839588 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065329314 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06364096 seconds)
    (269/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067024306 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159511257 seconds)
    (271/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07692654 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066395998 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072052232 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064482606 seconds)
    (275/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065799196 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066035945 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119879697 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065379264 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142688003 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064287033 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065523431 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063534833 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.191398597 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07683308 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150105947 seconds)
    (286/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065671191 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071890119 seconds)
    (288/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067711225 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067760134 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126408606 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065496849 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06435258 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.063830216 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07555889 seconds)
    (295/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065369184 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064982479 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067866543 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142614112 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06438251 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072404487 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071536975 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065843581 seconds)
    (303/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073125123 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071600676 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064756066 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064476657 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066028109 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078446514 seconds)
    (309/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077942959 seconds)
  done (took 32.907204911 seconds)
done (took 34.327830332 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086128398 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092111327 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074615462 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.086869869 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082506385 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098193294 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074910749 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079836511 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082816738 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080535533 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080142345 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073029275 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07580397 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076039087 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073593069 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090593915 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080609728 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074293957 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074264493 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064551332 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074062625 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065125546 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064300267 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07220641 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077144346 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072360478 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07504901 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075283816 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065590303 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065764273 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06978758 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074599591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064885929 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077436941 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073401669 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074575738 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07752335 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07804823 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064193688 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065524338 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075826849 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065094002 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073883548 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071913127 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070084738 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072581916 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074301826 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078082826 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089435583 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069988613 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076501211 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076845582 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077504803 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070945512 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070745557 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074006266 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07179012 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088943054 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074585214 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070316901 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07612745 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074571873 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072101107 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07392933 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074303429 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07656638 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077825977 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072500394 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076620176 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07250967 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065590782 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074147348 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070176852 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065353902 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076703581 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078847951 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064124581 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069552836 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073685886 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074232808 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064763598 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06981655 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064134589 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07035366 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069429072 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072029296 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070228059 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072413229 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064132542 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073920861 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072647511 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072929336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063956982 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077995805 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064544938 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071335907 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065059501 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065071358 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063861022 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070313627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064852855 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069514889 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073103889 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063920062 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070278519 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079116893 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065066438 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072489553 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064460165 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064668561 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075965299 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076097675 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065678466 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070550285 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06428046 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070380437 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064329997 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065352325 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064886057 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065407223 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069685804 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065707383 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069823107 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070456147 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077601255 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064785739 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069953756 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070120188 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065104123 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07149348 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065584403 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064755087 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06397808 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078463376 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069269964 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064913784 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070881311 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069110515 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072637567 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062954197 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073428695 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070558326 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.209765758 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073364687 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065034081 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078139163 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070532089 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07010986 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064145065 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065172631 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063935397 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065289603 seconds)
done (took 12.646285857 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064649985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.094735298 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.07379743 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.08218091 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.078546507 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066756139 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070300382 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.084215356 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068777795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.085726452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08847758 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086424332 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.093526167 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064437488 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065651563 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066218662 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064314474 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072889002 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.081349612 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08776666 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095926873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06501732 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.075003904 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081664948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076778017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084998499 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066651139 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066425879 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06853953 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082141964 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090687657 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065480414 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066495724 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080705285 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079821395 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073257252 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066735238 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.06996 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066744446 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065659917 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067826953 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.081129835 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069911506 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069992304 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066399222 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066999226 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066722969 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.071403422 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079526031 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070477491 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074112551 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.078684813 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067944718 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065469759 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06386916 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069870034 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065549803 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066490244 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065837413 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065415091 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065710682 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067863096 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066537731 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066203927 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069695777 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068867572 seconds)
  done (took 6.302996835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082728806 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094595314 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083080314 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083078309 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066049874 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066219154 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067061696 seconds)
  done (took 2.062522777 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065053672 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079150312 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082419581 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08286105 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.075021463 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084212442 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066251502 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096802849 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06512998 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078109676 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.113238697 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084034207 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069339274 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077899814 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066354273 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.074150005 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066090558 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07405191 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074982007 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082487842 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070393426 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094413093 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080083121 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066476348 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.087378077 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07091069 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065699023 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066484737 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067660549 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067246069 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067387088 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106026275 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0707342 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08045914 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067143981 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065306748 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072043547 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069596843 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068978773 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072868405 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071981778 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067375262 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064707815 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067450342 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069066128 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070325255 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06473636 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06759425 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067121757 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077958681 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065201069 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.070479126 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069593287 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07130726 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07283924 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070966951 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074212278 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067478142 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.078489916 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074681559 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067478895 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075201102 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106760516 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072013883 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074641367 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070574679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07038824 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.072095401 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067293994 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068418081 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067813535 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074853479 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065477057 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068209558 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069888431 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068035262 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.070369392 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.083459724 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.083331924 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078723054 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06815857 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067374914 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070915105 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.083569148 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070886116 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067094049 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06957663 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065095175 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070732551 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067602138 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072254514 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067429698 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074408067 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068336763 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069649382 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074933002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065731539 seconds)
  done (took 8.613037628 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067358707 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067877832 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069318248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067659244 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067994758 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068254005 seconds)
  done (took 1.963854263 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088803416 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066198187 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081265486 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067079762 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103289288 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.074379984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074434574 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075955328 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079870095 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079624784 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.074357842 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.077507898 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073685759 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06915522 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074188106 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074289919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070780489 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079349081 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068915688 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08079407 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068542609 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068576878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079388417 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069925838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067830443 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067147526 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078863305 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078781155 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075712932 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068224824 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069812981 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075318534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07779771 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.074477603 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074925389 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066490707 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072824743 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068961796 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070336127 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.076311813 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068666569 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068987845 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072526178 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075765384 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075187952 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072500402 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070765791 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073753661 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07259382 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072902229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067548311 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069558024 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072552414 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075142945 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075712979 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072663487 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07412643 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0687711 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074917286 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06696809 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069979659 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075588832 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.06969429 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070692734 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072583017 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074738454 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068358022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068710539 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066979525 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072660363 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066828947 seconds)
  done (took 6.786425279 seconds)
done (took 27.236052437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.988410506 seconds)
  done (took 2.487645876 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.563853982 seconds)
  done (took 2.102928984 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.64975277 seconds)
  done (took 8.183218726 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.296163336 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.3407772 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731027824 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131539293 seconds)
  done (took 3.069867188 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.729316785 seconds)
  done (took 2.273424879 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234549728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229251022 seconds)
  done (took 2.019069264 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34763941 seconds)
  done (took 1.883033785 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.146100423 seconds)
  done (took 2.682482275 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225575493 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163736923 seconds)
  done (took 1.931499765 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474356962 seconds)
  done (took 2.011584854 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.447982731 seconds)
  done (took 5.989878922 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232741506 seconds)
  done (took 1.814675042 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238886575 seconds)
  done (took 1.782408777 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.703193539 seconds)
  done (took 3.239149983 seconds)
done (took 43.017408822 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081223546 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08682865 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085806141 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081805152 seconds)
  done (took 1.848653607 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071776603 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069692513 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073475714 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073492615 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071783146 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073529931 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072653034 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069296259 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071219517 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06942886 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067732845 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069486401 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072987656 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069525411 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072148813 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073758445 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069337041 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069005579 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072465635 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069623088 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072229339 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069304604 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067930243 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069207207 seconds)
  done (took 3.238718512 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076714225 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071929842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074571492 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071330157 seconds)
  done (took 1.838258378 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073959784 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084527862 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086012958 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09394509 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075386462 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075619411 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083340485 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083751812 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065589921 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088778883 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067746797 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066032135 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066383357 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086537757 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082540932 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06291174 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064336566 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074969749 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07435177 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076650598 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067858908 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064891315 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074708078 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075147438 seconds)
  done (took 3.357782177 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077574772 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065540991 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079366058 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092414197 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094142557 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065343965 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080317106 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093803207 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127315505 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065135167 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071197924 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065099291 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107521009 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065388565 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08145245 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10743202 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110855005 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069421496 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098805221 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065364425 seconds)
  done (took 3.233356652 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075386913 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068929768 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069905059 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065812762 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077575844 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073315079 seconds)
  done (took 1.986177708 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066465359 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067591678 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067103347 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066611214 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072014511 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066621227 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065500198 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067626042 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067241666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067196917 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066618398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066028101 seconds)
  done (took 2.353803919 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161780516 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069926812 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070710972 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06645891 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071315272 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06596746 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081707195 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06836031 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087871065 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066550046 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066780766 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06919935 seconds)
  done (took 2.495084101 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097782998 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130731725 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096788837 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073516515 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185907776 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094823061 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.0926211 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.123668831 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093745894 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069288266 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091703052 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136964308 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099319329 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.098486177 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082203385 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133095312 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111208626 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089527255 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11447387 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084235232 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071368424 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133093856 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070686721 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092801244 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101749284 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09923646 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113037489 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135533155 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08517297 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090988881 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082092034 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075502938 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107439673 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.086575583 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.098980329 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094816631 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099421315 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085728339 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.087718327 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126649465 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15526891 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101944694 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101671963 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136142496 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079967043 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116238208 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083404375 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099363776 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104676941 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09364751 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076421168 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095886412 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.106386677 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102562703 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.082797853 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082650001 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118631949 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.099509206 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097166368 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081685988 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108752085 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.087094269 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108293585 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267538268 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142310478 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10510155 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139141966 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128650719 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097505649 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091832508 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093137851 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077198732 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11192637 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098673148 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136925394 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110710607 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100037693 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.099153288 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084192609 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108911908 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124673996 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09479286 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095151491 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149488991 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110174105 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091313402 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091855879 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.148288329 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072949702 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148909449 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090499964 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124351314 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097568552 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139570078 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096054948 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087532975 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108612056 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104614235 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090978978 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104084559 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087381068 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114991597 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093797931 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101894374 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082901026 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095823191 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088155526 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.099257175 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076166699 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105114155 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116899714 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115149586 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075993797 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10921705 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088252403 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079267604 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093674794 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14069444 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085328769 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077139718 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152857468 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092976666 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118393345 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110000021 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085070676 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274668453 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140199663 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094415113 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091355099 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078557187 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157419502 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078125661 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121607455 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084619536 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106519809 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108905364 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132879343 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139620004 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096909802 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080368239 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096611684 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.107323922 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091567551 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086569167 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078367287 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109744742 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135687111 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.107694188 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084036475 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095197636 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070627297 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116075114 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077500303 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083719476 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097540885 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.088645926 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090939558 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14292777 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.087992246 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109129232 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100944519 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069004963 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093114094 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155728118 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084486854 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.115059936 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126344838 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086916152 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069331317 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.097199125 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074557931 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110388458 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.095242032 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110377807 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079560055 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10936772 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06978148 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075308151 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130279512 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102772947 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093603205 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.134368288 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10806636 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089911208 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103742047 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097997546 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095752163 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102375581 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.112996746 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260027238 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.076150085 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134923575 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093033783 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079685008 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089104823 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082138288 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.080711439 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101602786 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116937856 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09031684 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104744546 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105589613 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092752248 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.112728758 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091398668 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080910816 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13515261 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077823033 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076548677 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089779041 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.105351682 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089533403 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.135603243 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082159606 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138061491 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097366369 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083884439 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116057578 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069729344 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07113134 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082868762 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093937184 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11752978 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081454502 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080545654 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127888028 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135366286 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102465587 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10426386 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069601514 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092784923 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139143598 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.118939806 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082828245 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112004146 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08657256 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131510251 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098170954 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123564686 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107764876 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111632643 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092715764 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.085321828 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075762326 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092057195 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113586506 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090272304 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08368278 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068935394 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076298394 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094837903 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091585712 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112016611 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089250292 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135379575 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074561793 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10067654 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105493099 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259278088 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092968303 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102153547 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09494253 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094648124 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097749295 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099329818 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075609149 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136971159 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109158069 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081167687 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094458636 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097087736 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111018164 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11131179 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120545192 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09816882 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108983466 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127818297 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10196632 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084707311 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08675033 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094745451 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087802542 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082595168 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.105071599 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113971479 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102184319 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111000986 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.098859913 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.094214507 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109013423 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094946101 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090375182 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.13193157 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156620152 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.10500291 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107148815 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087345275 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109412652 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107214063 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116097961 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.113081042 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110923942 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073017558 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077800314 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071726226 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108765467 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080874977 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119202979 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078615098 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110351565 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09925779 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083489547 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068044198 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104359885 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093057179 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.084722444 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132943266 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.118131802 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075363757 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090786308 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11044032 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08723642 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139394469 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.103635522 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10251995 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073188549 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095400192 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07429291 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271394721 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105257994 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08085444 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.079047951 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.07186023 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10956892 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086470179 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120441867 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090475984 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104693281 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124263497 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132324878 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08872754 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102411026 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127779844 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117488737 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.084434436 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115222392 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138366336 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122294196 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081932255 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.08577145 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106856935 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10715729 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102716775 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077477406 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081686387 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110995951 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115284355 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069610953 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086136193 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071807619 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.089052627 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115452045 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097753519 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084233167 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1277346 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076759437 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110142783 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09744952 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12387048 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124630054 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147523544 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100665898 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090748107 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078711798 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134266765 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072572351 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127683801 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114071177 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089423043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072515122 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086973062 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102231852 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.627432287 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110373132 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078339941 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137760386 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089602581 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119004616 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087602737 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.120134282 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090432362 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104175447 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091882705 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127234182 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239598333 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113358357 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.184226237 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112986336 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109157655 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07631756 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088942525 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07673706 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.081078132 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083390217 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089815873 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109778391 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086484094 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107510281 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.081504006 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108874631 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092576768 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090722887 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102630491 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085215795 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140421385 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090508545 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124015136 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10978943 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081546691 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076460546 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.089127227 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103749066 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082539522 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097105308 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080783947 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.078032593 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155581285 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103049856 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090667242 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10545656 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.094974226 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088126067 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098941285 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119312414 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112872212 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074926266 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089981116 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107603631 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081627081 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076795683 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098781804 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071440764 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08985164 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100720849 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099113186 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091672492 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104356055 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081250178 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089992129 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112777227 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088192099 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079237058 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078487564 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078395024 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.081474564 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107864736 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110971324 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116851049 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110749972 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095685691 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094283927 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.080697245 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.235692614 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082469092 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250410545 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109290761 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.0785257 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13578386 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090389009 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09185096 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099471434 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105107049 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155163738 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076225642 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112593325 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094446371 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12093764 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089280986 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108225064 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099657834 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094255893 seconds)
  done (took 51.731686343 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.09513346 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.149189624 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.160031931 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080477998 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093312828 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118700305 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208687965 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192843366 seconds)
  done (took 2.77348232 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068731357 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083069836 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10298914 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084326507 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067288828 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068308656 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.20304039 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083325082 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067240842 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107916382 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.0762825 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068801849 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.370381032 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066121469 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067034295 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07577183 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067689688 seconds)
  done (took 3.384213041 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.359956003 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599195602 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.32567268 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075298586 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.944833436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089624072 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.258299382 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136837688 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079332758 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557515311 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367870693 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130374494 seconds)
  done (took 18.587444532 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076454851 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075606299 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079325995 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07890588 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074419142 seconds)
  done (took 2.04046122 seconds)
done (took 100.44999071 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082966681 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.171607903 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068099977 seconds)
  done (took 1.935952538 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.083627629 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081928466 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082222359 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.080135188 seconds)
  done (took 1.991197863 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07532391 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076716094 seconds)
  done (took 1.809180875 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24855309 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165197949 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093595066 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082630553 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080668224 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081141592 seconds)
  done (took 1.920057734 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070430205 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071677738 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072828041 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073179021 seconds)
  done (took 1.948489598 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068964083 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066659431 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06857457 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071627798 seconds)
  done (took 1.940934585 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08283167 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085156228 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079175172 seconds)
  done (took 1.911087254 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101239434 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095995201 seconds)
  done (took 1.85898905 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078587322 seconds)
  done (took 1.742784741 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087369165 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095093967 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155033377 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112811681 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.153299184 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136268533 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.078274492 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.079951984 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074291562 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.073227311 seconds)
  done (took 2.707835151 seconds)
done (took 22.015638389 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077116171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36850007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360796576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087561208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67263045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357247648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965564894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092187923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.100391 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068727897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085995764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649164745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961615842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326992334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944847987 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322510295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65476766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068897531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06840946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069202846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95012406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068108886 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068985088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068650842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650012184 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375834063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069786088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323962511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068930611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071564975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356777611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070801396 seconds)
  done (took 16.08178269 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068765341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123030734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073866856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085140713 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071447747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070480344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072263932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069572478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110440479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069324732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086090353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068414418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072666044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070918716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090147176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069407551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070791585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070406589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069627184 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070699772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087761104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069274003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070809183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072046161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07034425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082615976 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070862092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069878542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069840882 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072197756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073282576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071804782 seconds)
  done (took 4.109713971 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12263643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128035998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074469077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109266291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120889593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070986765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152426663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092198828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115711212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069364224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086773789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069092292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104981401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071307379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090788275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069828805 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071070421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070217126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069774185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070519354 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088972334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069768205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070353502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070386153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070320571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085068412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071116136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069592709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069661261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072388914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074057059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070889807 seconds)
  done (took 4.394981227 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069983132 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071641642 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080000825 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081238116 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068097003 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069337715 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069916712 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06752699 seconds)
  done (took 2.267920086 seconds)
done (took 28.533507943 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079434476 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067956224 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071391412 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087934944 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073991855 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071133921 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065566205 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074166202 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071282203 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071388784 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.0729864 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067381583 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070031641 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065347236 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071982166 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066831009 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.073805337 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07144528 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.072350777 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.072833372 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0690923 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072124413 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075047899 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.072285057 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.072450783 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.072008899 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076166757 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07221572 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067537187 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070238066 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069411835 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078212603 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074779458 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.074093475 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067121945 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067009836 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071030831 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069010014 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.073732536 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075607374 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068898505 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076368896 seconds)
  done (took 4.669669097 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084230315 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091563844 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083300115 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08302237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10161096 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083797909 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087604646 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080059623 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078059195 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087145172 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074418557 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082412304 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079764692 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072867555 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079285434 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075226112 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080304283 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074753047 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078964662 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079184669 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088223807 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073362357 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08043493 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081011228 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074909383 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081025675 seconds)
  done (took 3.810097901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072779615 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087803398 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092111377 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14862534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111464761 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082174936 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082414142 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096249178 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100389055 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068160671 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072331492 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093693414 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095577185 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075105507 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108138705 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08583396 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079279682 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069823008 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075452343 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100878883 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090005805 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08648089 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100005093 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.0873455 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067205547 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069828531 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074312253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082719226 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075119874 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080018163 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072573093 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071233904 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06860723 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079115257 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071696516 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066332131 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088680684 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079638526 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081134829 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107548056 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077134023 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068857376 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097068821 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132434373 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067053372 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070676723 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071459307 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079998113 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068996342 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09626757 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082921969 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067261878 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068029248 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068791421 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069350766 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08378361 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069073719 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069669934 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07935666 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073876103 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08742819 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072039643 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088052304 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067579215 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078640571 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068921151 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068954245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066329613 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101717995 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074691659 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118653785 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068558068 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06553327 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079956739 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078471516 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074064022 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067418016 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086408252 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079580897 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071424715 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078640075 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070390805 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070413967 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101390566 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06736924 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066451253 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065678383 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070265562 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070675846 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068224216 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081565472 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066857549 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071361172 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082645812 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067649781 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068213975 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07071105 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069260203 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066901801 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08248439 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071515837 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068994153 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079766924 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068425684 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070832708 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082116021 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074919961 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06730787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069281972 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070558918 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069027917 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072031615 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071037585 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069516504 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073366909 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074967311 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073489992 seconds)
  done (took 10.90298072 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161695373 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153904838 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070111197 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147586335 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076290176 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073067551 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147964832 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08797914 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068248918 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069192075 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068068908 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.096860868 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.093301637 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105895986 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.072839232 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068367396 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09134994 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.101076649 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150677562 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145716109 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091255505 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075353172 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070702855 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069746893 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069903049 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07652772 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08618557 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074379199 seconds)
  done (took 4.391469884 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077535495 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093694609 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072460324 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.080073815 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088348018 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068610008 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070170387 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070196588 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082434311 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077053427 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068537393 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073263405 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07146995 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070869974 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068973612 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074575056 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075253079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066697499 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071924004 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073552019 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078616085 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09385555 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072565092 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068092585 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070392001 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067638772 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077093202 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079663749 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068231016 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.083871607 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065155304 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072569386 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08318648 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068819859 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068820523 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06858351 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068153783 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068433089 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068642136 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066614319 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066074703 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073119923 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067008035 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076002558 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081777408 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074948401 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069630146 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070409046 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070080351 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064769893 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070981556 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071235832 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070532401 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075764339 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071513563 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070324978 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069271907 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093315982 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074619775 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067512446 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067592558 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0686269 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069526899 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078329209 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084276624 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069439987 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066442467 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068119483 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073730861 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082182871 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067581322 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07336444 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065675758 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068354398 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070671248 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070769862 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069361759 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066360937 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067682056 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06787176 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068812885 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068135289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067420813 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070688114 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065682543 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066417683 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068481015 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.06942839 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076281476 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066912656 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072034531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068944896 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067212953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070896557 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074274618 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071318056 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082330879 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07845367 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068786381 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065827482 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082203817 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070371202 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067279263 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07468692 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072594933 seconds)
  done (took 9.313586339 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091767969 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070100428 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087446612 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093867585 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078636916 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073431604 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07933635 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069225869 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084789179 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067593903 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07712787 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066965183 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079141488 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077862041 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069472488 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078766343 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071144608 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087455947 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083038935 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067168636 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076556356 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080202932 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080797173 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085103496 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085135048 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085265654 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079860443 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070808959 seconds)
  done (took 3.929651232 seconds)
done (took 38.695241922 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.75258449 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.923392785 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.747716084 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.928979589 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.799874657 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.881755675 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.861678512 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.741656068 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.988276077 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.799545647 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.992732385 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.100839386 seconds)
done (took 65.260500191 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.821095413 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.905733438 seconds)
    (2/2) benchmarking "String"...
    done (took 1.967608599 seconds)
  done (took 5.550525289 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.914291134 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.382698094 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.013959079 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.745585253 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.748187545 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.20493277 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.534815762 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199545703 seconds)
  done (took 30.508438041 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.831191126 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.967618477 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.38037913 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.417973474 seconds)
  done (took 15.321721751 seconds)
done (took 62.885713498 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.748465539 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.740964302 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.807964693 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.774559216 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.749271357 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.746279619 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.74569419 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.74414965 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.749335255 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.767823851 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.744572567 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.750482213 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.741567191 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.754366905 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.428208176 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.810240026 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.762011689 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.753886206 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.751523091 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.802416353 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.754572053 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.752740766 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.221565575 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.931928107 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.353614668 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.132857962 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.370655898 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.129315835 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.7634661 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.750749232 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.785576139 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.130482074 seconds)
  done (took 203.626648181 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.749316642 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.689921419 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.730334894 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.793526558 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.087927041 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927038223 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.847461585 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.115387694 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.754185015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.751015558 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.962234351 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.748959102 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.962068404 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.694252801 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.793697049 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.775767373 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.92694872 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.976180411 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.7946271 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.899217767 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761437729 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.789955482 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.749285488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.933116019 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.78345834 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.81872562 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.76560302 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.760492557 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.9349358 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.903729145 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.758422694 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766951008 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908512293 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.619960527 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.766916392 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.771989489 seconds)
  done (took 168.45826371 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.943841011 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.757970319 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.752559596 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.807478101 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.873138229 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.753989777 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.375521884 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.758569398 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.522950818 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.754643278 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.749902549 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.750092961 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.753069462 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.76770557 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.835836894 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.752457385 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.764615259 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.753401107 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.776552091 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.751269877 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.750556708 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.751490159 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.752844006 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.753030816 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.754692593 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.754484083 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.217423628 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.997612782 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.753738691 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.753488502 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.715160178 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.766668314 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.131307434 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.75591343 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.843877752 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.806721005 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.874578112 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.754151572 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.973940518 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.826623057 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.753971904 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.753000177 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.751319987 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.817947885 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.765416495 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.753175653 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.755463207 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.759640024 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.821040168 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.02213612 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.755975081 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.877647335 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.755299185 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.246988802 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.754300767 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.753574159 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.754679006 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.753646691 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.356316712 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.757019767 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.752172111 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.759403094 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.759504934 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.754302124 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.754540261 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.14048008 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.824256678 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.84226352 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.095051537 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.757711383 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.922880752 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.942543781 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.753368506 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.752665485 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.7539863 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.756022169 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.755662248 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.75625288 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.878539943 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.759428678 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.884942288 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836552584 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.877144553 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.758223951 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.764318945 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.584459457 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.824629133 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.793276532 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.592108 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.756996067 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.126479637 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.548028502 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.758364222 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.75622937 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.771480947 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.757205789 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.755008977 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.753728865 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.835932345 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.755414474 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.879768348 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.488071906 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.988095609 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.75688065 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.753377716 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.75960454 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.840274756 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.875242408 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.76275001 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.756326917 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.821755361 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.760393409 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.754249774 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.849287432 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.75298786 seconds)
  done (took 398.886276424 seconds)
done (took 774.657446308 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.333058652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.50928085 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.426531911 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.328196752 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.299033475 seconds)
  done (took 13.585779269 seconds)
done (took 15.275522242 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.771066319 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.765008087 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.825988586 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.847590756 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.777201506 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.778665072 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.84077372 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.779438131 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.811182177 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.812842076 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.839603523 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.845232379 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.785827095 seconds)
  done (took 25.171643429 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.766251147 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.914743577 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.997426861 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.79837632 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.768338299 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.989155633 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.820723342 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.910384428 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.909170164 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.013407669 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.006557507 seconds)
  done (took 22.58640303 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.768992085 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.916272165 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.992545265 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.80333131 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.769266912 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.001238777 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.833020519 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.910509686 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.911818637 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.001760221 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.014808177 seconds)
  done (took 22.625477633 seconds)
done (took 72.074691923 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.768797522 seconds)
  done (took 3.45766715 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783620099 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.925973419 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.762658711 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761588118 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.770793939 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.762424035 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.762357431 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.761066926 seconds)
  done (took 15.979491939 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.761625283 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.766084236 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.762738728 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.761753414 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.758700235 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.762809483 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.763575642 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.763973688 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.761989963 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764273156 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.762632247 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763774338 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.761773873 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.762257478 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.763460582 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.763758295 seconds)
  done (took 29.897566829 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.762854617 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764662 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.76201516 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.764514052 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.763606529 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.762768783 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.763468572 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.763524272 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.762556841 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764784915 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.762696043 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.761886994 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.764971884 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.762214076 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.76501396 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.764957183 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.763896512 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764394875 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.769306952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.761704724 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.767738469 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.764914801 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.766442089 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.763669705 seconds)
  done (took 44.031408344 seconds)
done (took 95.071716095 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.557048533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.602670358 seconds)
  done (took 9.848906687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763131577 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.765015681 seconds)
  done (took 5.223654039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.76448648 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.765532871 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.765667862 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.764373177 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768610694 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.76566338 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.764490455 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.76420936 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766803201 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.765283903 seconds)
  done (took 19.346322474 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.764818717 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.766589867 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.764464556 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.764938524 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.764231638 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.762473571 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.765090602 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.764044364 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.761789149 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.763382645 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.765873011 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767821953 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.764143366 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.764386654 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.76363332 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.765213522 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.769417583 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766221236 seconds)
  done (took 33.462294295 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.765384575 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.764914408 seconds)
  done (took 5.224121065 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.765099505 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766037446 seconds)
    (3/7) benchmarking "month"...
    done (took 1.76763945 seconds)
    (4/7) benchmarking "year"...
    done (took 1.76465526 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.767122711 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.766928104 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.767823362 seconds)
  done (took 14.059642762 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.767751908 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.927162538 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.985925394 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.564856322 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.76962241 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.768686355 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.084781694 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.769642554 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.775281331 seconds)
  done (took 20.108107922 seconds)
done (took 108.968101463 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.571136615 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.768993263 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.016839785 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.856208087 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.786347343 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.105534564 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.794977617 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.416021682 seconds)
done (took 42.015304885 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.863748421 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.767542202 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.796649067 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.799858041 seconds)
  done (took 22.058802902 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.767982948 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.108791387 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.787669821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.619242747 seconds)
  done (took 22.000200204 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.145230615 seconds)
    (2/2) benchmarking "read"...
    done (took 2.119205216 seconds)
  done (took 5.966724804 seconds)
done (took 58.589543329 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769827299 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.768324034 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.769016074 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.76922845 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.770657302 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.767779593 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.76594471 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770970284 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.770495654 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.768407634 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.770306831 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.769749018 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.766745778 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769065683 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770108397 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767173895 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770163422 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.7663744 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76947219 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769882296 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.768828018 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767785553 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.770444371 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771502529 seconds)
  done (took 44.152926502 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.76992364 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772161025 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.769044435 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.771133704 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.770655993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.769331455 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.771012384 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.770342148 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772217281 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.770474876 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769353158 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.769851351 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.77144297 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.771207556 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77020045 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.770931285 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772401478 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767551962 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771372803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.771359343 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.768768848 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767509916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.768799604 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768816543 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.772222572 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767429322 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.768090243 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.771731394 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768769413 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.770561082 seconds)
  done (took 54.803351279 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.771166171 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.773222133 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.770677107 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.77307047 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.770530156 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.771129772 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.773880549 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.770648834 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.768064468 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.768835715 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.769460068 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.769539757 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.770028509 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.769114993 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.771748005 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.76879658 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.770757733 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.771453023 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.770819997 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.776480419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.776016877 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.773054238 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.771769875 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.774025528 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.771829552 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773078272 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.772697264 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.770435722 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.772897937 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.771048175 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.774163537 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.771807141 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.769554578 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.775211869 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.773542474 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.772019416 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.774187629 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.770458476 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.774954797 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.774718634 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776545084 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.773788701 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.771566473 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.772577308 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.771920504 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.772928321 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.774159686 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.770770214 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.767863072 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.773474328 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.774976131 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.77311073 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.771233842 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.771293765 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.775351374 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.774446012 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.777229317 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.774306233 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.776567896 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.77488828 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.769528383 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.774493561 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.773634624 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777425154 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.775478537 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.771203488 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.770667644 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.773448116 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.774271382 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.771808022 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.772728785 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.771258083 seconds)
  done (took 129.321893163 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.773101973 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.777539007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.775117565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773732906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773967862 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.772043931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770696458 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776635301 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776303836 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.772894503 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771215166 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774115452 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776796635 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772048971 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773093087 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773933787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.777067037 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769904031 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.774729204 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772885958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774636213 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773126127 seconds)
  done (took 40.727563873 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772418213 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775237045 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.772551694 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770587887 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771699018 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770608205 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.774855005 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771362188 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771369959 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77188841 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771098868 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771066465 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778506335 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77117781 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772030354 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774220813 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772477822 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772162431 seconds)
  done (took 33.6078987 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.774797597 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.775578881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.770609687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773830587 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777430899 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772562916 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775589331 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.772703128 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.77473604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.772023029 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.775129234 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772165135 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.777293154 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771305373 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772171302 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.773502643 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.775258345 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775346348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772192669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775449023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772603013 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775762354 seconds)
  done (took 40.730732157 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775378809 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.772085741 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.77240631 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777461287 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.776291332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.772453625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.773545656 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.774970441 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77107256 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.772931561 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773678631 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771687694 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.773578798 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.773195548 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.773747009 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775701003 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.772810671 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.774251931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774074805 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.777471637 seconds)
  done (took 37.180353979 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774391494 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773913829 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773824778 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775465064 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773767881 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.775025059 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775703417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.772504299 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776822704 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776810396 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.774999779 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776798392 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777284228 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774732893 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774954286 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777498023 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775958411 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778581695 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776271951 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774086175 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776525804 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775151023 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775877723 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776595984 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.775390275 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776434276 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776844643 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777473649 seconds)
  done (took 51.422748336 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777309626 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77503796 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.777140016 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.777371678 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.776909524 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.777838801 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.77689963 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.776618497 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773423407 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77652937 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.776973774 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.776028562 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.774831371 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.775807915 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774869871 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.776813613 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777005211 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.774619533 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778954203 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775076346 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.776988186 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776154691 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.77614901 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776608087 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777334915 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.777885035 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776662523 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777150211 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776561698 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776246165 seconds)
  done (took 54.997659111 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.797361113 seconds)
    (2/2) benchmarking "in"...
    done (took 1.798114342 seconds)
  done (took 5.299840641 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.776872143 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777380624 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.778259574 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.77697214 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.778345012 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775500135 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776757153 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778688224 seconds)
  done (took 15.924908759 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.777946568 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.784103636 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.778725997 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.777696075 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.783651991 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787678275 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.779544839 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.782003427 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.778899086 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.780061882 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.78807659 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.781624266 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.795852648 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.782009564 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.777998928 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.779543427 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779775633 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780492761 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78103246 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.778628363 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781321088 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786760565 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.778216226 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.784976614 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.780600731 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.781197239 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.78816129 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779732149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782950057 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.778236133 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.787865951 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.781444233 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.784684018 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779996168 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.784581335 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.779457157 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.786713645 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.786549348 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.783533682 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.779923079 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.783031276 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786447599 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.782632039 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.788650859 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.786674882 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.783379221 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.780754997 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.785909295 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.781627866 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783587933 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.788168052 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780076534 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.781993176 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.781379007 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.783731774 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.789322367 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.78595184 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.784719914 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788387538 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.789204353 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.785135255 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.801752132 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.791935907 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.787745472 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.787428261 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792451178 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.810091816 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.785714129 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.783668216 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.781832085 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790317468 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.784006798 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.781805837 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.782761692 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796576458 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.795506575 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.786361679 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.781949097 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.783934467 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.78921146 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785154828 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.788040659 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782904529 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.789243704 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790397103 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.808111718 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.787329343 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.787233158 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.785251844 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.783991364 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.793354115 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.789761227 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.782280756 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.783161477 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.78646619 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.788127168 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.79013209 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.790459846 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.78328025 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.792819069 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.784991246 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.783006465 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789982091 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.798043916 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.783436098 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.78973109 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784840019 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.788394415 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.792643026 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.791284277 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.79057178 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.78523509 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.78753613 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.797063083 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.785664139 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789160974 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.797991259 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.793915342 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.78657468 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.790946305 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.787426747 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.786443557 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796831992 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.815253041 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.785183889 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.789191954 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.789392815 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.804035157 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.788946928 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.785103966 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.788245051 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.785955226 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.785921713 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.788022573 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.784742645 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.79172699 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.782331647 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.790292982 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.785331051 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.791142598 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.788888709 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.785923253 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.788305898 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.790823814 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.789606932 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.790511638 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.789985112 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.796635251 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.786492859 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.790941561 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.786159451 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.789078381 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.788918175 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.786850934 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.784746155 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.787270835 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.790907741 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.787251315 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.790063593 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.792149003 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.789427145 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.788260961 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.790413201 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.792792232 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.791973804 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.786977283 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.792767277 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.792125136 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788784626 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.788727013 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.791249037 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792888954 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.792796866 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.78695331 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.787041789 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.7935706 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.788573212 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.787638393 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790513245 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.801123502 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.792461638 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.800504308 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.788903147 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.796637338 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.788989634 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.790422336 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.79019624 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.795149059 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.793469275 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.788868914 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.789339066 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.793056797 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808506141 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.800021446 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.78993356 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.790862095 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.79387707 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.792922119 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.794426134 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.790922117 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788713457 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.792258789 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.794971225 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.794528583 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.790673399 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.791674765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.78859982 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.790107614 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.795519475 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796529832 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.791056634 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.791142717 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.788296068 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.791463516 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.791998737 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.790414329 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.790309582 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788819855 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.800705967 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793957121 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.789770676 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.795297047 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793031383 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.797196318 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.790512841 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.791377422 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.796326347 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.791742178 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.792249055 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798502126 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.791623957 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790972298 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.791951777 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.791769698 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.795074808 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.793410785 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.795505052 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.798596309 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.796026924 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.792313595 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.79604431 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.79107145 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.795808787 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.79634819 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792651842 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.797151021 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.794746846 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.798231576 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.793059654 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.800770429 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.796081251 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.792387247 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.791358416 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.794425807 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.796421162 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.793969319 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.796111159 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795206843 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.808058874 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.801195359 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.793466907 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.795273753 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.793477947 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.792815825 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.795356072 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.791379561 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807172616 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.803237419 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.79324945 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.794316824 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.799087328 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.79472361 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.79368382 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799958012 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801405723 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.797558155 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.794961234 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.798863551 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.802016745 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.800803218 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801316253 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797081316 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.799934859 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796161023 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.796403196 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.794138274 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.795204275 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.795568817 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.799782934 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.796489173 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.799436638 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798158157 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.797458646 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.794526543 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.806528396 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.799642458 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.798037621 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803470632 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799202147 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.796702036 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.795518957 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.794370561 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.79808144 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.79900217 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.796368963 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.802656724 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.804973789 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802412134 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.806537919 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.803842711 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.808747832 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.797265223 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8060325 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.802735914 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.79840162 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.804087835 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.801485507 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.815796056 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.795012454 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.797457881 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.809714693 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.800817615 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.801504355 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.806908258 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.796783857 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.805201954 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.804729656 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.801250248 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.800540829 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.801325254 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.797766665 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.804924522 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.794374703 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.799694032 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.802720317 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.804035123 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.802498432 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.798159657 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.799134267 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.805514132 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.802876782 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.804540974 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.803003213 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.804429076 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.796702649 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80954633 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.804087562 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.801842034 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810930416 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.804124701 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.807585631 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.804816761 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.808954846 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804325828 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.800216696 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.803359974 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.797695397 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.805872413 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.804737209 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.801965294 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.800951226 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.811518205 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.809934986 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.804137405 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.806202212 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.80518252 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.800772694 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809614138 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826511133 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809968818 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.805407704 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.804944239 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.808183851 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.801422188 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807233787 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805217495 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.813924282 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.801477725 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.800341163 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.804906871 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.814077159 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807544486 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.804810919 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.802056202 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.803634885 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805367489 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.804556475 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.802962182 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806588704 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.805767228 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.815387763 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.806961852 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.804381249 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805443434 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.801757304 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.809431112 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.800329685 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.803222444 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.800141932 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.811792168 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.811035843 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.804362963 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.806921517 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.804311836 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80658916 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.811894227 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808798597 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.807924216 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.807682878 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.80947501 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.807668571 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80777955 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.803444509 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.804416701 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.802996335 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.80270634 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809374948 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.813621231 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808185467 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.804515502 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.801892094 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.806175842 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.803831444 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.810794742 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.801327512 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.812769511 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808085121 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.813994325 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.815716738 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.811528567 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.80803779 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813504972 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.816582447 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.810188324 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.805422777 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808659447 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.806928045 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.807731341 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.807744606 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.8107636 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.807678473 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.813109398 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.808035194 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.80541351 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.812714071 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.80541873 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.812307932 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.810033021 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.812889217 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.806137649 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.808076131 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80542912 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.81186042 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.809741323 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.811365515 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.810336798 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.809029763 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.810007907 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.810881925 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.812595899 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.81022194 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.809946703 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.806732348 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.808446324 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.811561918 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.810830822 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.808375762 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.807177343 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.814215909 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.816742572 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.81104549 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.806578088 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.812023115 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.813305303 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.814934416 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.816798497 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819298637 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.811069385 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817911126 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.814283751 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.818072469 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.811823654 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.806078646 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.817258912 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.810313516 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.818583592 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.819126768 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.808617037 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.809309971 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814803353 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.818475198 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.821484331 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.817173256 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.816918781 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.814119578 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.810998693 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.813517495 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810057651 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.810265494 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.813726734 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.818292191 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81383886 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.815538444 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.814226015 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.814139614 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.8173898 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.813606653 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.811144593 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811823289 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.818425921 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.823017681 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.819389631 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.813772016 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.814233924 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.820447006 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.814468492 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.821528234 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.8200269 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.821470383 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.82162117 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814700861 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.81422945 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.822564145 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.822210991 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.810930027 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.819031788 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.820789748 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.834867262 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.815167221 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8263357 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844796136 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.816158116 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.818574422 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813609943 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.814093783 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.819025013 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.817932052 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.821861591 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.819181173 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.821309826 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.815645153 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.824625851 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.815965986 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.812885086 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.819957349 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.814356171 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.821368549 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.825214023 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.822974058 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.820448222 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.817428585 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.813823062 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.815525252 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.817928042 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.815159827 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.814049798 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.818660721 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.816008546 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.824499149 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.825967065 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.82145 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.817900971 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828213414 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.825442226 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.821503997 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.813465648 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.822456544 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.820890448 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.817900798 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.820091775 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817661865 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.825062878 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.815967197 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822241948 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.81115931 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.818256978 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815865154 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.814143654 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816050911 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.831846742 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.825888952 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.813945667 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.818824263 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.820864002 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.819644052 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.825417426 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.825717361 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.826590531 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.818911437 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825068307 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.816450051 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.814835446 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.81559827 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.821272356 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823467217 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.822311118 seconds)
  done (took 1074.959480827 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815601303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81608383 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818174241 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813352141 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819072727 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815609654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815836711 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813634615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817828474 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816831902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816443964 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811909303 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818261186 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816908796 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814529784 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814542614 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815279791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822708932 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.822433319 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815173896 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816547981 seconds)
  done (took 39.887530608 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.815717987 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.819979083 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819874856 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818439506 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81987372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.820635574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.818812245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814161038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82044184 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818728253 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.817682069 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819746492 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.817457499 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.818868676 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819632091 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817642384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.820542723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816668733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.818538235 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822296112 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820897992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.823177497 seconds)
  done (took 41.761702718 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.822115528 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.825543446 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.82097725 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818815433 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.821170207 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.826348069 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.818799027 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.822588437 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.819455339 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.819752244 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.82800203 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.830954705 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.820955342 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.822921971 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.82056242 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.826787291 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965283311 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.827879059 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.825272597 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.823780087 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.82269478 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.828558069 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.818779007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.823120027 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.820441522 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.825429427 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.822426269 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.818535588 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.821844592 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.823321883 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.829449696 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.821232678 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.821937314 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823771653 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.822534808 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.823623819 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.833954156 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.829090019 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.814601497 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.821602175 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.83021552 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.846154656 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.821836802 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.831118703 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.832391418 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.819514386 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.824631447 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.824661686 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.83249551 seconds)
  done (took 91.28034841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821159529 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.824030458 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824170648 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823437918 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.823820185 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.818237579 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.821886984 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.824599149 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.823172148 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.823622259 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822261649 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.821763541 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822178356 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.829238047 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.819523151 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823613793 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823456621 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.823534522 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.826950354 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821829796 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.824386721 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.817947779 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.824163075 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.82518243 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822066434 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.823429868 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.825090043 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.825183502 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820662947 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.822001348 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.827547514 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822479821 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.825204746 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822039035 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822189459 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.826796917 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.825206004 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.81892712 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823181458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.825892376 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.822794239 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.828045014 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.826161677 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.826484336 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828686191 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.824246742 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.824638726 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.826263158 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.827261901 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.827308794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.824492126 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824966932 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822284189 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.822303426 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826037282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.823771556 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.826957996 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.821802862 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.822474331 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823134243 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.828493864 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825598305 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.82712207 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.825458283 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.825116066 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.828360886 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.827559391 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824414189 seconds)
  done (took 125.794917615 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832223725 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.836060583 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832848319 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829724954 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83411325 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.833875094 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832891053 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.832845631 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833850875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834885429 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834851856 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824397001 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.835058938 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826486252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.833033327 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835091615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.827449645 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.834666257 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.832658543 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82914007 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.834521336 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.83708187 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.832628865 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.831672147 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831569208 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830943173 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.83153838 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831209653 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830643446 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830833107 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.833001389 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.832751502 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.832391919 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830207892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.830755825 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.830786239 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830905511 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833332642 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.831882247 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.828523201 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835029671 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831986881 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831285963 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.833100621 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83067961 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831760947 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830708903 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.830968787 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.823642948 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832609818 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.833724167 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831289647 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832395339 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834387986 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829083418 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.82595302 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833255484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832725601 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836927686 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833990711 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836746992 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.82737945 seconds)
  done (took 115.337205299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830130361 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.828905744 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.825954396 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.8258127 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827899495 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825506161 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830000329 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.825280044 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828797217 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.828807327 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82639049 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829081391 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830435326 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826156297 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827812545 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83296095 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827756069 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829299407 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829390296 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.826390173 seconds)
  done (took 38.315113497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.829121402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829454936 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.825071478 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828151827 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.831734994 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828989425 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828509978 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828609815 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829190537 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826998674 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829243878 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.830463019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828346985 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829152844 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832399147 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.826762926 seconds)
  done (took 31.016464518 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.832080619 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.832267659 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.832568052 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.83688687 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.826866614 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.831165347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.831378983 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828485537 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.831324802 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831816848 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.829138051 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830982061 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.831282756 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.840208117 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828677414 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.830822475 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.831917863 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.830028051 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.82966093 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83299282 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.837644761 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.832529909 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.830120263 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.830139543 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830342372 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.832828934 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.830500249 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.830216731 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.83069868 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.835271471 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.833102186 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.83187445 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.829394402 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.832972286 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.83740053 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.836049305 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.830809167 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.831045786 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.830997639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.835067807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.831649555 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831201465 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831164357 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.831617891 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.832597999 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.82995894 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828514264 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.836925317 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.8284995 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.83582955 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.832283101 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.838453284 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833645329 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834831931 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835394025 seconds)
  done (took 102.528150888 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830190206 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832873539 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830847799 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83125328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833574284 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.827859508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.830736564 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.831873233 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831445483 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.833731631 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83243087 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832848751 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83596598 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832980996 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835605665 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833713142 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.834089722 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.834455439 seconds)
  done (took 34.74352909 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.834430731 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831907522 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.829096377 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834110958 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832868368 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833382885 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834379106 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835384098 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834530212 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.835079558 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834616399 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.831412499 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830677684 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.83330835 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830537069 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834483167 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.830589549 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830876452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832691915 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83358635 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.834512223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83508593 seconds)
  done (took 42.084227751 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.833966452 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.834300283 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.846751385 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.854109743 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.853798163 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.867290001 seconds)
  done (took 12.847874546 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831029411 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832931992 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829596774 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837728208 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834765233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832407797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834372077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833761442 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835488409 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831705036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833793223 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837252795 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833676237 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836719163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835861447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838105933 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835530376 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836596829 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833137574 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833544023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834887424 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835630968 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832172427 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834312707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833110114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834225873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835973837 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832305239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835515767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83293253 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835204574 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838062235 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834539628 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833414122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834942853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835732694 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838195141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834864139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835995103 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833658456 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.834489153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831388775 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836658194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83483075 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838275798 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837223274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836156501 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835661738 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837001593 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837291053 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836206262 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836641217 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837784416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834667943 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837264467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837013584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835479957 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837848402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834250045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837745572 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841621498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835531328 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836847507 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835273333 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837367772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834425389 seconds)
  done (took 122.88873136 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836459869 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835855635 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83582541 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83875304 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835832568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833429149 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836039227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836270007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836429389 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834381002 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834635401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83730162 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835397548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837254033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83800896 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834944057 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837355586 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83800083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835666085 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836000351 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837215862 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838790234 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836657304 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838734755 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841381917 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837885883 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835400111 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834469871 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834835807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837695484 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834598158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836586297 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840373264 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836675896 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834818165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836442618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838461505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839311942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837771936 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838456602 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836828224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838417725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836500507 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836839954 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83774495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842388829 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836155001 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841453033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837998973 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83925125 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835940838 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839686759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838239614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838734633 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837134769 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835964171 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839418035 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8392457 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840027593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838236607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839055236 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840697466 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839198756 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837705699 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838940982 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837929048 seconds)
  done (took 123.034811743 seconds)
done (took 2506.356858333 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.853270606 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.937763172 seconds)
  done (took 15.552272737 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.001713237 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.954094481 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.838974635 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.862507581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.836169807 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.86854098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.859229226 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.841638027 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.839212409 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843153814 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.837180848 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.027478331 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.891809183 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.836634251 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.83997007 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.930651347 seconds)
  done (took 51.876239133 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.845032419 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.847856721 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.854816016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.843342605 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.845012213 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.861070732 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.875764252 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.849014112 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.883106414 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.857886205 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.914967596 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.857114916 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.847146092 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.896625591 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.855937647 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.858457201 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.940935878 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.928127292 seconds)
  done (took 35.425667757 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.921823387 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.847248839 seconds)
  done (took 10.53957199 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871743522 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.852452039 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.860476767 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.865969467 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.845053388 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.845448148 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.857829305 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.86273341 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.848185209 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.85634648 seconds)
  done (took 70.334645838 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.847030549 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.844797597 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.847024469 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.844188346 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.841234751 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.841248612 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.843325623 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.835758202 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.519431684 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.873231175 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.847763775 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.847085133 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.839151526 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.83991454 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.837528225 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.865037161 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.948304533 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.836064839 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.835863332 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.844331217 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.838537801 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.889007375 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.852460059 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.842860469 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.870505444 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.525615789 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.845630194 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.843087606 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.950378301 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.837454364 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837403329 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.02310031 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.841588363 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.307572101 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.156217684 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.84334887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.847037043 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.846237489 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.837763365 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.955360999 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.840628018 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.8464231 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.770912245 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.124985647 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.942942083 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.886035411 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.194137589 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.839960412 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.841807135 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.872599113 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.839460732 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.840268836 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.856837687 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.35758592 seconds)
  done (took 131.292080995 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838711786 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.181731191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004028365 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840145121 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119598482 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048120394 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844969733 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884905154 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842187845 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.069526367 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.095204733 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944283866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842074078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.844978795 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837531592 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836949267 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981040551 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911772455 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845862884 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.841450586 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867808102 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078140774 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.959146222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84399434 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.864389647 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04554947 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.958183077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943499432 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.608734797 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.841144443 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901840778 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84316919 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.838668168 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840046544 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99496809 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934115231 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917732537 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.841812703 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838611641 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840139319 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.496105039 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041674429 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.933000665 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.958302504 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092435428 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04466892 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.615521681 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.841104156 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.574956605 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004114836 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.063940869 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.075533463 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.955864519 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.844919126 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.10026629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.840738143 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838647597 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082729783 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057076833 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.935371044 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840354164 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838522472 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835530864 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076408533 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840509394 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931284617 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839850765 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.835783354 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935017787 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.93458163 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065266462 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050679013 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.865527221 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.175750445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.346007043 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084566903 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.901769085 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084977349 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.839288284 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838842352 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916869423 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.676305627 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092254955 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081853025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082541463 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870779841 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.557709687 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.840058553 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.06642348 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.056788942 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.096412371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08529989 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.082764817 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.151711288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840142915 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.840400826 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.062879967 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952008078 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843708422 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187800396 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06829041 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.382586068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866929523 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145118177 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966893785 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843156205 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.466940945 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842614903 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062791341 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879373801 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.840949305 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843417737 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.055912905 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.811867948 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841820911 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.797386954 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.899702642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840839992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.073301816 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.834238026 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09765932 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832008349 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060024794 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.862614856 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.859811766 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.005186134 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.076525342 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.831772029 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071110201 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.063163649 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939924188 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102532547 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.706664368 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825930192 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113996259 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.824921723 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.826634184 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993777181 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.825895437 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969821847 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.833556074 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116771304 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852653586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064718226 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839217433 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.083596761 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.860465908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877212135 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823427889 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940434896 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827220893 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.652387531 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981630559 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825835816 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829347846 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.379614066 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.824013634 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.973790008 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04334688 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839086357 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.889637866 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.481131658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823768884 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893583695 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839942693 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.198850197 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.812802194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.063287902 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.811672541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.80920886 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.818615315 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.042982026 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04515944 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.814352671 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.806217855 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.701782164 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.803622607 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804906887 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981154338 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.114264901 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.800506079 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004837107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80178391 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926539066 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804928206 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.872367142 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.130731228 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.796059105 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.796963385 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.795245133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.795742974 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794427606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000518105 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.816185847 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.304362116 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.924443856 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054860506 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.099495724 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.03122325 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830032722 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.790853334 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037081161 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.784657313 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.838305929 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.784016831 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.801323204 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014614142 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778488092 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.989971641 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048627406 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.63066223 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827887687 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.782630652 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775778473 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.778108772 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.928232689 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864509049 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.784347336 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.780387474 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.891348313 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.896237384 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99008411 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.779232441 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.855999779 seconds)
  done (took 893.269254612 seconds)
done (took 1210.055861269 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.776542791 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.773415616 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.783566535 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778522617 seconds)
  done (took 28.81554578 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.774410268 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.774533723 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.775562213 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.775553833 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.774624644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.774994903 seconds)
  done (took 12.351968524 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.843392817 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.771226785 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.775667864 seconds)
  done (took 21.091073052 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.85124148 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.17765149 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.916977621 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.20587587 seconds)
  done (took 9.852313959 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.776068949 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.775531213 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.775227472 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.780707224 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.774679251 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.775700635 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.777365746 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.776620094 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.777535568 seconds)
  done (took 17.693837039 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.811736085 seconds)
done (took 95.322800722 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.011075125 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.323512628 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.860428454 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.944108303 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.792061601 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.967082379 seconds)
    (7/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.938861058 seconds)
    (8/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.246128431 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.8774814 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.868386471 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.876268924 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065586175 seconds)
    (13/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.313052192 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193475911 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.876274331 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.250893304 seconds)
    (17/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.099008006 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940798688 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.967624479 seconds)
    (20/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.075458546 seconds)
    (21/309) benchmarking ("sort", BigInt, false)...
    done (took 6.864980128 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.088952853 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.019907189 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.957327031 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.428804896 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.978098179 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.88591916 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.189647238 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.732727603 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.028212333 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.097361707 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.165960771 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.150511141 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348869658 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.948408044 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.117808878 seconds)
    (37/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.313516062 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.888453591 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952078536 seconds)
    (40/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.948364963 seconds)
    (41/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.057346673 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.251131037 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.458056146 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.968635397 seconds)
    (45/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.336087176 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.188798953 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.929528773 seconds)
    (48/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.377215737 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.363362239 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.122168494 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.962189445 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.974994466 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.167555833 seconds)
    (54/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.071258044 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.197117095 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.878685806 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.5171109 seconds)
    (58/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.040867004 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.243621298 seconds)
    (60/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.290360187 seconds)
    (61/309) benchmarking ("sort", Bool, false)...
    done (took 2.078719624 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.479516902 seconds)
    (63/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.337993129 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.881231526 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.498827568 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.438492436 seconds)
    (67/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.868758785 seconds)
    (68/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.390550717 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045953588 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.113131755 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 5.479534747 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.199207583 seconds)
    (73/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.127764012 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.080521839 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.871919899 seconds)
    (76/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.097788684 seconds)
    (77/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.882624814 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.96354296 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.620926581 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.192737105 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.018922069 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.467747887 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.106836868 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.736046058 seconds)
    (85/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.96543335 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.860454923 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.865376427 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.45450341 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.707359194 seconds)
    (90/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.893021617 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.96124861 seconds)
    (92/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.974258389 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.161996215 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.113652334 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.014824223 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.037970613 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.077154327 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.86584467 seconds)
    (99/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.553349602 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.995014418 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.90285524 seconds)
    (102/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.256484234 seconds)
    (103/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.554552344 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.52105351 seconds)
    (105/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.333924668 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 5.531127095 seconds)
    (107/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.900178979 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.943902063 seconds)
    (109/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.616347985 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.972154741 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.969827415 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.883959041 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.987750795 seconds)
    (114/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.864085223 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.241083439 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.942306733 seconds)
    (117/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.031340271 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.877644507 seconds)
    (119/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.251538775 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.860448522 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.959453568 seconds)
    (122/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.107194163 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.970828096 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.861715293 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.235403225 seconds)
    (126/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.181724141 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.085527494 seconds)
    (128/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.955316753 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.206048483 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123539121 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.727535181 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.876993789 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.162863328 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.960164092 seconds)
    (135/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.984138032 seconds)
    (136/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.890438424 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049195344 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.444839378 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.605673898 seconds)
    (140/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.974771559 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.246452031 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.129579332 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.948611678 seconds)
    (144/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.497499886 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.867855451 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.164330545 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.985386911 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.872113578 seconds)
    (149/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.983163409 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.172255688 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.873439757 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.882183436 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.117279126 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.866019709 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.042830072 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.117433532 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.938181737 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.260021093 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.887578318 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.336311197 seconds)
    (161/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.618169522 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.170303786 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.884236148 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.120397861 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.865027256 seconds)
    (166/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.001744425 seconds)
    (167/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.994463976 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.859646021 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.016200258 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.940228731 seconds)
    (171/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.756878218 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.049241847 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.866586435 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.855854603 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.917074797 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.448430125 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.4887666 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.056656331 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.851418776 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.727290483 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.046647362 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.959917612 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.999808048 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.851112702 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.435851777 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.849038381 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.000746548 seconds)
    (188/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.058059508 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.904706744 seconds)
    (190/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.610168468 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.843430507 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 4.802564139 seconds)
    (193/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.443985656 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.119115866 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178241166 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.807062737 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.157660292 seconds)
    (198/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.840462775 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.22769964 seconds)
    (200/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.004596565 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.903787585 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.966580876 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.937587215 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.69625918 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.851759007 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.144303745 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 5.542803486 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220724914 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.832082101 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.580510199 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.660155779 seconds)
    (212/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.968199715 seconds)
    (213/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.922221334 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.223183107 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.227776949 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.063497343 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.593803405 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.893678495 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.858389247 seconds)
    (220/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.908330059 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.212911654 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.956166138 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.509425211 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.137923499 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.830039396 seconds)
    (226/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.897844967 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.126972298 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.835984215 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.022362923 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.967781382 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.831240774 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.560467517 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.092449021 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.856392474 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.994662786 seconds)
    (236/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.962312938 seconds)
    (237/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.140434085 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.853738469 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.029799119 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.151429865 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.145039286 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.376700556 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.033036179 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.87907456 seconds)
    (245/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.974708973 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.146709725 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.144358067 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.895454676 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.782313203 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.019036405 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.869134465 seconds)
    (252/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.916845953 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.87001299 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.872514634 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.228586913 seconds)
    (256/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.009263402 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.193387094 seconds)
    (258/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.358085317 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.118877586 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.876968164 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.917322914 seconds)
    (262/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.955013911 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.002865642 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.410409968 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.277634343 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.890571054 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.211747491 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.958779533 seconds)
    (269/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.869228913 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 4.209886117 seconds)
    (271/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.34224371 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.096470161 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.900429669 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.8770457 seconds)
    (275/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.03547104 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.164500835 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.620478896 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.720112493 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.129289185 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.178645093 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.878282194 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.045029932 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.92248132 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.34640224 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.874911979 seconds)
    (286/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.200083078 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.959159586 seconds)
    (288/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.875363902 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.369510791 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.997821361 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.862148586 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.366283117 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.014151479 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.748290382 seconds)
    (295/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.869564877 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.24104002 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.874978424 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.881143687 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.978779552 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.907140428 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.893049572 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.057511817 seconds)
    (303/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.90906166 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.891933705 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08340043 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.028319173 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.180504644 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.6616227 seconds)
    (309/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.760212853 seconds)
  done (took 1008.148076716 seconds)
done (took 1010.01842925 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.906917421 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89070886 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.876081019 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.896460986 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.99504489 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.921200401 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.897118475 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.878987253 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.931140781 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.929460858 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.873225651 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.918603343 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.881189538 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.878287723 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.880049467 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892526377 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.183297163 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.902259987 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.894988563 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.887245353 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.896864608 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.876877892 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.929220756 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.92115552 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.886451348 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.880715851 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.881263897 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.896205514 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.986659226 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.877500907 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.882029558 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.887888377 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.187820077 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.901318938 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.872471578 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.895946882 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.89323494 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.890827232 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.884077976 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.911472244 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.321015364 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.882699064 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.879732554 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.873979204 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.878286075 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.887595995 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.880973375 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.889114832 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895460843 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893621652 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.323453361 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.896629492 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.883215293 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.880672451 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.895295486 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.881183703 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.884035403 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898148962 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.894410505 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896452349 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.170442266 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.913073388 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.888645161 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.889522349 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.880626746 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.346594517 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.872781846 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.881213849 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.313502062 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.879329821 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.342325458 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.880987772 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.873586543 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.882630587 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899790815 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.171570994 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.88902441 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.871546052 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.874996243 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.861889032 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.879785163 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88293641 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.869357912 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.866251754 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.88821268 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.914392078 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.883031044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.870668268 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.886429219 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.889318024 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.877462013 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.881602812 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.872061368 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.868264457 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.880057637 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.876042264 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.870608367 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.869581669 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.872404346 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.877858948 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.307805537 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887436178 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.865862219 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.86577614 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.868339782 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.88243222 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.306727704 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.87096298 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.887510391 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.916635691 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.859913596 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.154327865 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.891621425 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877903065 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.879955896 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.860678329 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.856492335 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.148439104 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.320184119 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.882140695 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.856670692 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.854892921 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872479179 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.85835116 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.8574844 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.160015779 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.885616588 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873763476 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.977699602 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.871142325 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.89018421 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.854797868 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.858413098 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.900182908 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874320318 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.888391044 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.859274181 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873740836 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.875056836 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.852705589 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.870225962 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.870662179 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.85685608 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.862684364 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.85248598 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.902851136 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871165941 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872131571 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.878746927 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.981614075 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.856303857 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.150825648 seconds)
done (took 294.156186248 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.938234423 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.853006388 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.975744902 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.85545781 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.945515253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.944314167 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.854986001 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.857838994 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.857109549 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.354974038 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.854818724 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.85979284 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.856418372 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.856723182 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92655356 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.855329695 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.854375055 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.342171387 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.864559858 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.93692081 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.856302404 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.85407768 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.85432891 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.358741095 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.854994082 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.853170904 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.928278367 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.84779349 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.298707413 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.850976783 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.846559749 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.291603665 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923049062 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.873312067 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.851740893 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.84755859 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.944907499 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.853402559 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.923686706 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.912158803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.987877581 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.88463156 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.844109062 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.843261654 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.847795598 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.851202221 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.843124185 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.87681977 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.844279783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.849203967 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.290171181 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.853342932 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.847906028 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.846110023 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.846158494 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.879554528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.845423507 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.85263641 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.924218943 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.855336903 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.91182732 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.3476819 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.39149684 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.843569203 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.846918254 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.846114157 seconds)
  done (took 184.154150426 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.912644004 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.912383384 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.90417573 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.843809926 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.888367675 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.906565752 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.840734138 seconds)
  done (took 14.977910987 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.843068031 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.835991928 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.885305405 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887411775 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.839875789 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.018113805 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.845807049 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.8377983 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.862876085 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.832490911 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.498298855 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881806132 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.839091994 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.83073742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.843641502 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.887758632 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.835200149 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.839059567 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.940836723 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.980083304 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838392108 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.841513488 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.85778252 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.843874093 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.834284744 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833572215 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.83961035 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.841162911 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832324908 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.833539624 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832431827 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.884396947 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.832738675 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.833851474 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.833408355 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.834933453 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.840829938 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83316857 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.834042829 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.831226471 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.832821552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.834515306 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.834171787 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.83391621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.834178719 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.858021211 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.834336066 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.834180847 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.833329078 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.83347037 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.860847704 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.834910039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.834638399 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.838882579 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.878076093 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842514768 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.841041594 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.833648207 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.835104718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.835124942 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835254176 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.983749441 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.884132047 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.834723894 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884850597 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.985584168 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.835208009 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.835553912 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.834481452 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.923664939 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.834739245 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.884947104 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.835550443 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.948794752 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.835508028 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.015207121 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.858339528 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.838281252 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.840177639 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835412658 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.843919206 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.836230127 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.83711019 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.842652551 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.841125222 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836343548 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.836978685 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.838329966 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.842365924 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.834837364 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.886858429 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.834925917 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.843760408 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.969931394 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.835401741 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.94525633 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.863236984 seconds)
  done (took 202.553540229 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.843646447 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.843739072 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.838729603 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.852032723 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.83788125 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.837635225 seconds)
  done (took 12.819994425 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.839185162 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.841342175 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.83660352 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.837512231 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.844095643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.845172792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.837101658 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839442195 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.847972961 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.836801612 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.845254329 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.837665155 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.839011892 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.845255463 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.839155756 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.837084054 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.838381898 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.83826977 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.836831869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844836907 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.040672164 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.843730935 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845236324 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.839462314 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.849692996 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.838268995 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.850579772 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.837364162 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.837377149 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.845461528 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.84885289 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.846683128 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.841529877 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.844606093 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.841835563 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.840541412 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842748421 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.837837419 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.838624328 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.845082223 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.837767421 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845161093 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.83842763 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.839080613 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.840524387 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.845042459 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.841749008 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.851887804 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.839341603 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.840014509 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.839268478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.839494042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.845942462 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.839818314 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.842330798 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.8466726 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.843699259 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.841690807 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.846212323 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.843634687 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.844067002 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.847220854 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.841686203 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.844601311 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.848075236 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.840008181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.843156073 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.851458062 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.847108686 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.84035632 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.84000757 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.841502387 seconds)
  done (took 135.609316619 seconds)
done (took 551.913957488 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.154935974 seconds)
  done (took 8.924404561 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.003537594 seconds)
  done (took 8.868144346 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.452367784 seconds)
  done (took 10.222074825 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.854326548 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.875257051 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.850079728 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.840452985 seconds)
  done (took 29.202491867 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.163989192 seconds)
  done (took 8.934488122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.852969241 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.846788952 seconds)
  done (took 15.545746381 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.858293107 seconds)
  done (took 8.629235878 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.023463761 seconds)
  done (took 8.810284611 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.862710872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.85041443 seconds)
  done (took 15.50702244 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.843357978 seconds)
  done (took 8.614420342 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.326890569 seconds)
  done (took 10.182511262 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.849721084 seconds)
  done (took 8.668758035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.848905619 seconds)
  done (took 8.619134278 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.139501131 seconds)
  done (took 9.911568785 seconds)
done (took 162.413503566 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.84601478 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.842376091 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.839572774 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.841377618 seconds)
  done (took 29.1393175 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.877984815 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.877245112 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.885828179 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.877400528 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.868857817 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.881278728 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.878636384 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.879274032 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.869294157 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.875240203 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.877676507 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.874078845 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.876599749 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.886850758 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.886711906 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.875385716 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.877695317 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.877778927 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.867825376 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.885798771 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.875043928 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.877628581 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.844338024 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.843187144 seconds)
  done (took 46.769956416 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.033523703 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.909842295 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.998182064 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.889415427 seconds)
  done (took 9.603860609 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.843192705 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.908098486 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.895266443 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.88832711 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.893391914 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.946262735 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.896058164 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.982395953 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.971443612 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.021232961 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.850907095 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.864026793 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.865111937 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.89774314 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.946882784 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.844475343 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.844198642 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.959911192 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.90568813 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.024529917 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.844548949 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.899093684 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.895681411 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.896652406 seconds)
  done (took 47.558974582 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.846685842 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.852694506 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.852209263 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.846112716 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.847431922 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.847264031 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.852891738 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.846644712 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.867454961 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.848028999 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.845635995 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.846341079 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.851976204 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.845861053 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.8464699 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.859873727 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.86037019 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.845744048 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.848252816 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.852845292 seconds)
  done (took 38.784861561 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.844588707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.692413902 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.188817613 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.096565151 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.843966422 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.847788817 seconds)
  done (took 31.288007155 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.859270176 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.851837511 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.846323639 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.903249701 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.982462526 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.852365256 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.846261715 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.857052989 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.892570242 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.910465103 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.869107758 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.873442327 seconds)
  done (took 24.319144044 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.845876776 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.847384777 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.848510772 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.861512744 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.856586329 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.853346339 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.854301996 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.844532138 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.86177288 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.864162319 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.853739457 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.858569683 seconds)
  done (took 44.030134948 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.550980131 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921728893 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846577522 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.721562688 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297871651 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.403842837 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.740405579 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.550195298 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.318247317 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.772493935 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049697077 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.844835084 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930562286 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.849184602 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118091525 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.203340304 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049393877 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088334905 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280952944 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882223328 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.049512978 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071094461 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.139206398 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847492431 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850166024 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.893307401 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.210293053 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.598294998 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885514911 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.902123069 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093736792 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.796436165 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906883306 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.849029304 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.85994517 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850227586 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852850093 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119662507 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.898872066 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98138824 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922680667 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088455097 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852747418 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281622184 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.553500654 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.127507748 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.962808346 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848564158 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851171284 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848146351 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773251599 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931204776 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.850125204 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853550168 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.548479959 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84921149 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922566315 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.849682865 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050802397 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.654946279 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53573279 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.8498867 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852180227 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406613799 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939456729 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.96072761 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.607153528 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214639162 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.268936062 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.947660894 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.8508573 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851751855 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.91061113 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817401444 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.609065678 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89282028 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987049116 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.866483186 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489448511 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136607609 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.25465628 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408194733 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.777138909 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128933771 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.336820158 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837876197 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064029552 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.716025462 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777060219 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068825587 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886472794 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853487404 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11412743 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557058594 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962370717 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.863256474 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286374866 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868803557 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85737017 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85484333 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064945246 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917017964 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884791966 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968011359 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868831431 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952318357 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777806246 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.86400714 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.853216939 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.755392353 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853242508 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811329895 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.901807692 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.25270252 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894191389 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.790956911 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855128391 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936491658 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893840357 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.806216297 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103494269 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.161993951 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.525294902 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857949413 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.98753316 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.20651161 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078398367 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85825394 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066903849 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389159755 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.256390567 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898190688 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137246665 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911968385 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138410075 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286111855 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930817747 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618649899 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47914107 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.069616128 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866865151 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.856775562 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85835476 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858598583 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789464543 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.502694741 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.204064993 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.017608544 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068294893 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.274785332 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.84016354 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.830060082 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165572898 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991985043 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.84918 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.505241259 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.005265112 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660543147 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.884739196 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.923535493 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.952669809 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.818462854 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868026226 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930690134 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871573723 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.856751553 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.200741145 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216528571 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.855925761 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.855811604 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.80415477 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864113579 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.858364906 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.390339264 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.825807489 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863763758 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.866191132 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.729534216 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929536137 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858101445 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859207064 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391370892 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.363396995 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.861846567 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.452038549 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.916807774 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940936547 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132312406 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.202594088 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984497338 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.556023216 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.263502909 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967268088 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.556610848 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78165358 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857281553 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.794947624 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859577043 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860311249 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862694755 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.046259247 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128865312 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154269822 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.301322044 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92289487 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062000572 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.615682552 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811679757 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.858610741 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862732263 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.860077204 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857570591 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.369331531 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.098566716 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949582782 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888521616 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.864492543 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985059727 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.86867419 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.784169 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.858151898 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860119717 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.221380615 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887912432 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.802058477 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.152013658 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.683338544 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976148191 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905462563 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.869290206 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863465959 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.556715029 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.901152848 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784666302 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267563792 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896446766 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.564326392 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347993887 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420975393 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151801915 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173647159 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.181249676 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.930153665 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.074103437 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942013179 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914374581 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95500589 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796216068 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.785645748 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.510386656 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185276689 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126930684 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867764067 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072934092 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.614718675 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088749855 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889863393 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.225896299 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169785997 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838560839 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875140047 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.282614931 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968889946 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950654044 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864897959 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814285751 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20201132 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902183533 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.561233591 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874678529 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.212163822 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.223638615 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.93199977 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.218444089 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06852084 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870365538 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198506645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.99015164 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.902017664 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86716947 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.852141279 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.077837333 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440077853 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.731516946 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868233815 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.930045785 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153979562 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.764618721 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.865140164 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.922927581 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123400923 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86286654 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.193991104 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227659615 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.970564172 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923842273 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088149102 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.31116139 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164673759 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.413739976 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.348579342 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866937333 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.789624059 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.563868366 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.066213707 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870019335 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.829003704 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076199163 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104465531 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.546426092 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080127048 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104783149 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.87552068 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134904419 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935761249 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.960630247 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.153577038 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.300534222 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.111156565 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090096844 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402280827 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081298401 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327033652 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.034959397 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.8655045 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068862845 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078229581 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.077490628 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.226378798 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034209971 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.575231453 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.869451821 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.071761879 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160157804 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925815447 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.217041528 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034115969 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.948294199 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872313548 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929476206 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870861519 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872488695 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.230592953 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.397439549 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.880187716 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941742951 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964456774 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.373470296 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.868402036 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.869834032 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139425062 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211573873 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199611282 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849672308 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86540022 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867055201 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993667533 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.791352638 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871745807 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137638876 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.86954456 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938356047 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.012162504 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883095563 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.175163496 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25566838 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307513868 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954597513 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872122467 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089438463 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179425079 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98079882 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985604529 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141290325 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207292128 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.907499162 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.232778135 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110871027 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872132423 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.072706846 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.872340019 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997935797 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.072449478 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141715254 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.439239263 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587356287 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13596176 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719004491 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872676295 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.586349368 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14077991 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.145583279 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921169688 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934818096 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875415061 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.24270425 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.59214185 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001966214 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.722743187 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799619496 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.001868782 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09239484 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.112082505 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.581776566 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874034177 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146979144 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169839494 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143063721 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.92604925 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.726559064 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086055162 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873526827 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.881796892 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13845296 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090178607 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121864156 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874510198 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878239793 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.678330767 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798146955 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.873534527 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925533191 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097997519 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891483682 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.386428245 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.571486545 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155456657 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926236027 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875408129 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140206721 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.379616024 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426035867 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878318658 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086769056 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.899117907 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17531584 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.873825829 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.240668355 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178745238 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.874889154 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.939527102 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.12085118 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129499482 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805418818 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881875113 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086685941 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.742158063 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874489324 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.861218418 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.246454878 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107386523 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.609653453 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429658008 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.875688505 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.875877514 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.236755569 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907774759 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.246936554 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908773127 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89024463 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394484098 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.587159914 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.160163725 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11708392 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.940369997 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.466455931 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.875838457 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.875406891 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877332286 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792789195 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057545914 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.064114454 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159528432 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912693343 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227906578 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909820767 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.228717036 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310078321 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.306980456 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925757896 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397637752 seconds)
  done (took 1633.008354334 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896549006 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.879894414 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.911700526 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.880946932 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.882143121 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901887489 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945739872 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.981630489 seconds)
  done (took 57.087825646 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.878210911 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.893694314 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.881431501 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.891438593 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.883361847 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.878125539 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.040760375 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.891669025 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.882640058 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.88294876 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.877325672 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.877734425 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.144707528 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.89931936 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.879988896 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.880804542 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.883699349 seconds)
  done (took 74.256897469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.87961191 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.23339665 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.904949401 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.881391673 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.78678917 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.889469806 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.859195154 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.883262185 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.887079699 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.087161849 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.181739511 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.936014388 seconds)
  done (took 90.21931277 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.885830747 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.880777364 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.880188578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.881122323 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.880295334 seconds)
  done (took 11.22175071 seconds)
done (took 2139.099947985 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.123882295 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.938426738 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.981193413 seconds)
  done (took 5.72902421 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.028684882 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.078818862 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.186557543 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.946605025 seconds)
  done (took 10.055999534 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.175225232 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.247198917 seconds)
  done (took 6.231648445 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.268818157 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.883761503 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.257384076 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.884015209 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.885878297 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.888209192 seconds)
  done (took 22.470926301 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.881110866 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.882238258 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.881671853 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.882681073 seconds)
  done (took 9.336685193 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.879448585 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.597834827 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.880920442 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.893482539 seconds)
  done (took 21.05986463 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.035938979 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.996359726 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.024570958 seconds)
  done (took 7.866891541 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.036308067 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.089254171 seconds)
  done (took 6.935462963 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.026859014 seconds)
  done (took 3.837307471 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.910898176 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.153343389 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.377032005 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.423725252 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.533375823 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.656754259 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.209598968 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.129010931 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.301570072 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.323667269 seconds)
  done (took 24.82997238 seconds)
done (took 133.698296953 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.238337794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.906942915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.089057523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.249535933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.115210581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.087190659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.090636555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.240737212 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.928314002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.91274604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.24770283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.112986622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.037876294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.902530821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.043741448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.901350163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.109401029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.254421178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.933783821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.174284794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.095403097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.895135002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.092241368 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.908364335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.112860314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.036386194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.43860622 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906844849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.081378214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.451106132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.039104265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.311526615 seconds)
  done (took 168.757689037 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.883594865 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899277853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.885722737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884818682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.184670182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884436496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.886012983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884977497 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.084698221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.075167662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.882899113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.173479337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.887674679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885631283 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.886148861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885655406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.218454675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.886830187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.88601159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.886416098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.886659309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.023374319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.886425639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.044460256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.209837116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.885696847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.885585416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.884913537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.886592672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.886432114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886277332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.886916967 seconds)
  done (took 208.099596943 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.885367127 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887892225 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886537815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.887639658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887790615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890520575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889727702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886745067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.609340544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.599790676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885972723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.886814199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.887120524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887397026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.892856415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88736734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.891923153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888878127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.887454554 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891237711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.88954087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.558023741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.886297167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.581668995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.891226062 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.89080421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887255225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.889369708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.892068139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.893038832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.891011399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887644806 seconds)
  done (took 221.052568281 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.13076904 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.888827594 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.890114063 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.915764109 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.890027081 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.888294428 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.895625175 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.139833089 seconds)
  done (took 19.460965195 seconds)
done (took 619.198409888 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.284911539 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.119879702 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.066037218 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.912761756 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.158017876 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.955242924 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.908100697 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.972748613 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.759428852 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.983989964 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.562914471 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.932881128 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.658208894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.937765459 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.035325713 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.964311109 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.475157693 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.569282111 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.054441441 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.970501367 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.089897526 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.86301384 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.991738162 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.802851342 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.582293727 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.90308318 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.974399216 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.478325746 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.92177092 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.069396971 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.577760983 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.21414421 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.925549793 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.910131434 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.963824721 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.941691778 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.170625758 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.922392099 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.032752959 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.649812191 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.978351387 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.662580537 seconds)
  done (took 103.724782557 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.899787977 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.895658231 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.896888677 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.896324901 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.904038553 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.895099734 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.896473842 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.896649626 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.895760603 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.895267021 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.896664971 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.906019596 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.896476138 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.906212342 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.895697822 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.895933859 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.895799368 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.904975756 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.896647765 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.897178076 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.89687837 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.897683191 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.893870746 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.898461846 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.897672471 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.897377036 seconds)
  done (took 51.179022579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.892549691 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064725556 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.141929623 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.913445717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.895047024 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.896940091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.912470822 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.898452428 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.896630486 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.896386588 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.998169446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.900318157 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.9123697 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.140048556 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.911629443 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.893350894 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.89405599 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.895510144 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.072035719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909985026 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.912640825 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.898591486 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.911997667 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.908459846 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.896530167 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895260729 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.897780861 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.338521838 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.90420396 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.000643533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.95228373 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.916991494 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.282365851 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.153037725 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.949533493 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.903541791 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.894870868 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.003952056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.900604397 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896467784 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.913139513 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.901012783 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.14516748 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.414067103 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.909538899 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.894963634 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.350419366 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.013096986 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.937046886 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.905169314 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.149780425 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.912637995 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.89647136 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.896682462 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.932052736 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90668109 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.895865986 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.215858167 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.909752803 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.912141955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.901006878 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.897155676 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.082803329 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.905535155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.07057427 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.905638822 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.901733255 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.89756802 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.148117497 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.913643332 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.429693166 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.912173792 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.896169374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.001201207 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.073625688 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.375376623 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.909382074 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.081702499 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.300186004 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.92174857 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.905665814 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.327739197 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925028316 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.90521433 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.898699529 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.898323615 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.897922759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.946454499 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.913236382 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.345041938 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.422465307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.233331071 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.924816158 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.908126853 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.898607078 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.218233397 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.907597266 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.898906266 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.137521951 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.436173808 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.914128101 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.905882629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.40414024 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.914143529 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.91690133 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.908222523 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.156005752 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.915266396 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.9446344 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.89958502 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.90563298 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.900952167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.917702097 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.907020528 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.898653869 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.398099961 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.023234874 seconds)
  done (took 235.493948007 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.899137133 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.89921033 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.898681313 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.89987824 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.89661409 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.898252858 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.897675847 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.897476096 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900253698 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.898828063 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.898845336 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.90076515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.899904867 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.90210387 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.941439737 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.900520691 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.387165579 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.898845588 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.898837143 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.900483331 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.46097921 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.907174125 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.898339978 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.899564148 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.899105634 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.900696597 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.902242477 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.942129027 seconds)
  done (took 168.155606442 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.900125642 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012571576 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.926844409 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.929325556 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.909039325 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.901913425 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.998302044 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.918340784 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.907224918 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.901079415 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.901034353 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.960903421 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.911671521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999563784 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.931203266 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.009250062 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.005138271 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.905904285 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.901337988 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.902286081 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.930265734 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.910676392 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.961814946 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.024103295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.919750041 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.014952888 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.920701499 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.901177331 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.900971671 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.014374593 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.918802084 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.96159814 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.930777551 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.919035789 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.017984979 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.017656465 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.005153046 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.006522114 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.906919507 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.902211224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.902929341 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.904056893 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.014822127 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.920768363 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.90427397 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.018141151 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.921502607 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.904149986 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.904029896 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.903840809 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.918008028 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.923855374 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.967709996 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.032513443 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.938227852 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.927535626 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.001507785 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.02300894 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.911939559 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.001000719 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.91053696 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015967771 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.923651412 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.903274359 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.906753654 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.906182851 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.933661825 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.009161011 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.008645942 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.91001805 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.00118939 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938164498 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.911522021 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.905463593 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.904495038 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017423291 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.021759727 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.93914502 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.940452619 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.933347905 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.914195869 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.904854891 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.904770999 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.921991942 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.909977806 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.017197179 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.02051641 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.909906241 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.906320986 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.905710923 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.906135555 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928667059 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.024266761 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.940203665 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.011501385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.971922784 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.978428694 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.919234023 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.918003625 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.910201809 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.967416873 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.919338125 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.916664061 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.189642035 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.96468239 seconds)
  done (took 206.315467793 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.307106009 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.950146512 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.963205017 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.225703541 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.274190953 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.873093586 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949430363 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.954376614 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.985358867 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.177068997 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.025228023 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.972934723 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.940368017 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.927003986 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.949316807 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.987575083 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.963703631 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.301447801 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.175739915 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.440070727 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.942868075 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.222278722 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.300612853 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.543716459 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.00793801 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.3737105 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.581823771 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.12123838 seconds)
  done (took 64.276269607 seconds)
done (took 830.963702907 seconds)
SAVING RESULT...
DONE!
