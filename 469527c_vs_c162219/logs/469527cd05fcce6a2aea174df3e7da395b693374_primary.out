cset: moving following pidspec: 2098
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.24320426 seconds)
loading group "string"... done (took 0.466982113 seconds)
loading group "linalg"... done (took 7.631964777 seconds)
loading group "parallel"... done (took 0.173639563 seconds)
loading group "find"... done (took 1.189116048 seconds)
loading group "tuple"... done (took 2.125799717 seconds)
loading group "dates"... done (took 1.337270843 seconds)
loading group "micro"... done (took 0.250638311 seconds)
loading group "io"... done (took 0.660654475 seconds)
loading group "scalar"... done (took 41.921777111 seconds)
loading group "sparse"... done (took 12.597463383 seconds)
loading group "broadcast"... done (took 1.111551777 seconds)
loading group "union"... done (took 14.15539989 seconds)
loading group "simd"... done (took 4.747811373 seconds)
loading group "random"... done (took 9.568273879 seconds)
loading group "problem"... done (took 1.948900315 seconds)
loading group "array"... done (took 22.33301328 seconds)
loading group "misc"... done (took 1.411458995 seconds)
loading group "sort"... done (took 3.564861462 seconds)
loading group "collection"... done (took 19.295588217 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510170285 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135889602 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131875141 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146031577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200783742 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14223385 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155383215 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112976033 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.930856525 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17949813 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153253124 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510311998 seconds)
done (took 5.051315181 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221982975 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09296021 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101687162 seconds)
  done (took 0.863566466 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076643441 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146196364 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093477544 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077781902 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093758476 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078132216 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094429965 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077254629 seconds)
  done (took 1.3351036 seconds)
done (took 3.176937537 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730509446 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276131959 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203276047 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458339076 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192994803 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212372794 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673285963 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36354934 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25242625 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099588539 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14215127 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387521865 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134909046 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682541394 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090904604 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122550149 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178677542 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442308349 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082326048 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108935128 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115907674 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141875483 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12788445 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090244135 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183566515 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081082656 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191967336 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107052878 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079827213 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288560646 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199959787 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683686173 seconds)
  done (took 10.836132974 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110733736 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132625171 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096358789 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137732843 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132737103 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098033132 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083903203 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09555922 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121470532 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175375268 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128501856 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120696905 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094105139 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082673763 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113780047 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242052842 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119300313 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10348405 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099435921 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102885906 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121705894 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111688725 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108061943 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092371797 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165723914 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21952434 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110431092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124880254 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095008732 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112144215 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143658606 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141828678 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093125575 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079642012 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170515119 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12315966 seconds)
  done (took 5.09360439 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11016965 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185826616 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101421012 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.182893773 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161338932 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138496654 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158516028 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112020881 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228746947 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.098589178 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162054575 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138946536 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11406865 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079984436 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097837932 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094398946 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.659973963 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122345696 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154155108 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113886834 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102275538 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083612025 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375224689 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104899172 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080470453 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096967199 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0651364 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15855694 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098003258 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138634217 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119141973 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081477262 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133356587 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207162468 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112028891 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134215428 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094680867 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079097212 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176877386 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104503328 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081261032 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119992195 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121022145 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132525774 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117139675 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097643557 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094958486 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203128258 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094519551 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096896563 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.955657336 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182007685 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089373909 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095884668 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322544041 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098086638 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096857403 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077169445 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094766272 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0769373 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267435348 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180957691 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09688939 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079722628 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095976081 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085244786 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.408942786 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083554357 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.778574851 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084939023 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107083631 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082778586 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095918336 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10244254 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08781471 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113410389 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079934052 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098147604 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078249382 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095914888 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080992171 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108253568 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101608664 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082537092 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163797377 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07985456 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113984662 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126224048 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082973603 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095193698 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130354566 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083667473 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096796152 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132014156 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081030769 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108091106 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09834445 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141308547 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08123168 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171379353 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081268214 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126227758 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098067862 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114039303 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112366284 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097877363 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083604292 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094065077 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077413293 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163187062 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079156423 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096736746 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081036179 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109436324 seconds)
  done (took 22.534234409 seconds)
done (took 39.138053304 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327578757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102309471 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102550935 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101452433 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099546523 seconds)
  done (took 1.482432898 seconds)
done (took 2.207011888 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286769571 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172336716 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093496674 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166566104 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092545331 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172570049 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158296119 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111201911 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218776623 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07672951 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162769642 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093306262 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076836573 seconds)
  done (took 2.629049884 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094119897 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11338082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082098208 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109980564 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07628718 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110408546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091779503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116065009 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1078359 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084984711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092317601 seconds)
  done (took 1.801953227 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093522041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114217729 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081495372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109672959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076205502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10929224 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091779641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114680318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108179176 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085347289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092864454 seconds)
  done (took 1.798795867 seconds)
done (took 6.942637817 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090251905 seconds)
  done (took 0.806587385 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.913099131 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.874939694 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111712019 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147972928 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298643603 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193105631 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472314911 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124446913 seconds)
  done (took 11.062908807 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.14378575 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083461576 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103540141 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082848476 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0998251 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08497327 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09938161 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098226548 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085760813 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100580359 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083001668 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10122673 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099189813 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085503252 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098286949 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083378201 seconds)
  done (took 2.317184814 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119539689 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118422126 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106505063 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108206109 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08636988 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103313163 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106216778 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088793105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101481398 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102595646 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090086519 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105163731 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103328937 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079349364 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105459242 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107059161 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086290973 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10446258 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106140985 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091273581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105616074 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095285839 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086324648 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105386823 seconds)
  done (took 3.241432464 seconds)
done (took 18.150657001 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159357178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108379624 seconds)
  done (took 0.993506815 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094701048 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111753328 seconds)
  done (took 0.937493739 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097211472 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094933557 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119621123 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10818914 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079824401 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094798278 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118953973 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08023879 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095201658 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080718496 seconds)
  done (took 1.704775357 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081808339 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.1088275 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101044869 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094907832 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104292338 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09390465 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087064784 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097834458 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108891671 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077392244 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101570477 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113513008 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084976256 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114871476 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103370158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083389018 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100855792 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097580545 seconds)
  done (took 2.487619861 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080051863 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096799634 seconds)
  done (took 0.907150367 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08045261 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092990698 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081619972 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096288094 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093359682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076865624 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093280199 seconds)
  done (took 1.344227677 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.466779159 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134576207 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251713516 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083908171 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119256888 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300912934 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097331633 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084329615 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101595691 seconds)
  done (took 2.426341298 seconds)
done (took 11.532005221 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093268285 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11660518 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112784405 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463358091 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106263135 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096512197 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158442625 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247882163 seconds)
done (took 2.131269887 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149455353 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323871752 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112826892 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066678624 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094645268 seconds)
  done (took 1.336908364 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079250982 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098877779 seconds)
  done (took 0.915852293 seconds)
done (took 3.143007008 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080614162 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128512104 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07946183 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09733452 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079997939 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.09486054 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080308874 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.094838828 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077277574 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095401055 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095726228 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079874956 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096165256 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079058303 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093937241 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077173599 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095930748 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07746669 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093758009 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076999453 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092967658 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079969544 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093240853 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077980898 seconds)
  done (took 2.891358527 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099524022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096947321 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101530706 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085331546 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100786566 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086500672 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101116786 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096242543 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085367226 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0985348 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100068151 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083831507 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098848986 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083944029 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09946021 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099941865 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086152774 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097099654 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08226925 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09956694 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101390334 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080423352 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10023985 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10180463 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084189205 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100360231 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082314472 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096811795 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101714596 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083294487 seconds)
  done (took 3.558176644 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08486112 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092979858 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077543707 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101428265 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077457861 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096090351 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076868271 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094500745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078336093 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093713079 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07917225 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093916467 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077654121 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094891523 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079392779 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09759334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106227497 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078284572 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094205159 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078169149 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098126542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077323663 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094578801 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07801065 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094257918 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077709734 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094530826 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077795757 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095301313 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077061308 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096644314 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081119548 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093684315 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084991991 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09776806 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077667482 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096919311 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094082599 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078840737 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093494798 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077089526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093969202 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077695913 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102240389 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078146514 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096306354 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077834554 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095452954 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077974516 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097728041 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077746919 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094032327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079602201 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095795199 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098034457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077933804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095348311 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077807929 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095132281 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07767489 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093948596 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077838277 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096622585 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079021773 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10915375 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085386487 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094072443 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07957436 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094816714 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080422095 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09542002 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108896592 seconds)
  done (took 7.097547641 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08276434 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105176361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08121819 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096738299 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076323327 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095053592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0990362 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077898407 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096106768 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085743936 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095235163 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079942311 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095595865 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107318789 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078350243 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096317119 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085393175 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092687639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079162564 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097583967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07875756 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098326223 seconds)
  done (took 2.73045451 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20836969 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103543794 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140472354 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106462865 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083921467 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10457292 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10108471 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087064521 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102194523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083201234 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099693818 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101792607 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083423613 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100282039 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099813357 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084707809 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101890401 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084707676 seconds)
  done (took 2.630843635 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09171379 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098768781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102533759 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097830333 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097826395 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083675332 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103231088 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107415814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082987341 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097429245 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09048744 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099549932 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099624441 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080571572 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10000066 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081616036 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099805774 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081677306 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107148617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103624896 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10316201 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089921179 seconds)
  done (took 2.855797379 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096896008 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099749076 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117213475 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083899009 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093708131 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080222424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104740675 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081065076 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105497736 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099608805 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08176816 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097283476 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086848096 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097058271 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102012591 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080602914 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099582549 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080945633 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099815124 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077023585 seconds)
  done (took 2.622656063 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102501924 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09841661 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098932565 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091344793 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098918722 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082581602 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10809159 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09861104 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083569009 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123945553 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098932102 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082500401 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107445743 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104370518 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098550758 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091577597 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108360933 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109131912 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083101073 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099038642 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124414062 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083059556 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108213 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.205331784 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082934808 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099380857 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099758119 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088797569 seconds)
  done (took 3.620290916 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081502359 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097884266 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078571948 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096315757 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078118819 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095561677 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078224932 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095583981 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081488638 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095248913 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081240405 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097846061 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081065341 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097331691 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081302611 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097772967 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083536238 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095448719 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079476822 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096016997 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081521714 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098001881 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080816407 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095441376 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079221258 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097752281 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079260991 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095594697 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081062646 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094976927 seconds)
  done (took 3.414468338 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090418278 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10515478 seconds)
  done (took 0.956976373 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078842114 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11364903 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078610572 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102124248 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086246652 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098335718 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10754278 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086010806 seconds)
  done (took 1.511793144 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097022287 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109178835 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082749809 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111244103 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10980721 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094902064 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159318677 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09968114 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087730214 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09682427 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111731043 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079650446 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105685769 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081210389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103921739 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087194968 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096162505 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087055039 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101828525 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09700067 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083524091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1093799 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084506702 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095540091 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083293997 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109253179 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107836156 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083067781 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101984812 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108108551 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088062448 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092738678 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081255016 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100008922 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080179092 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107747265 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111654862 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085335214 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107299164 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082685066 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110217598 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094298512 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087758491 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104427355 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092334739 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099860792 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083647735 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094483753 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096306079 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084785112 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094957954 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082115825 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093124657 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089976775 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10256063 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112016267 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080618088 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100430707 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084324446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101482568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088067853 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100750295 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083892541 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098033132 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106047404 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086088633 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105949628 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07758712 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092195493 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079930619 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107063894 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121743798 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090413657 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099664919 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083766038 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096711643 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102552721 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083737214 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10622717 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089877157 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098734587 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106341956 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089844941 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098964877 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084130818 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107101414 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097659675 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084276685 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096639525 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096977115 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09846931 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079533787 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096035585 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10753512 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085369379 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098738294 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079450072 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108935774 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07613817 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099985447 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084095754 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099948711 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107897923 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088447 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105619837 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106690286 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089063105 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099446497 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08626109 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095671401 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08392265 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101571914 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106379509 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076191728 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103612612 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084007494 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100548748 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088686567 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097372968 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081947216 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107385215 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10695669 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080815628 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095605106 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085302378 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099616958 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085803905 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106233932 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098682142 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077672848 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094232995 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086253835 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099735506 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086709839 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10520552 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101702985 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076376408 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097424079 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086884288 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106677746 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098993914 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082305087 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103908794 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082610781 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098640503 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088413318 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10112992 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080945965 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103550314 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10093025 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077557414 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104159423 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084676571 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098978019 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086267942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103996079 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101936518 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083142098 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098382332 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088208537 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100362945 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080726961 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099289916 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098325344 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091689775 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.1017749 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077524918 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097086083 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089809187 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097137324 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081676739 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098877902 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10181143 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082998806 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097522755 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081465958 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100659582 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111032073 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087436465 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101623343 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088530716 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10962698 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082339109 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101869403 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099496861 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083911719 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10135944 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08955368 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104968713 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105529737 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084937361 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095995616 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088826804 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107271336 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081262149 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098024423 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081384272 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103677208 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105889751 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086677354 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100271173 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080943422 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100672013 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103676985 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084907747 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099665675 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082212634 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104632962 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081677254 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10692038 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101123334 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091312494 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1037832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078230527 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103676873 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098125975 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089207604 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095753291 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080607507 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098878246 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084834186 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098931636 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085163713 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094805447 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107154422 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091862049 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100323164 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082840735 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100572082 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091782624 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102085648 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104158925 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085900652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10505407 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095992753 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099350577 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086528508 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109088733 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100866906 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076246823 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10605882 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082210953 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099321522 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082115818 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098023183 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085517187 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110241646 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105189232 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077014638 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102912724 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080937024 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099598091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078218997 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106595409 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104189937 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085045768 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109428496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084451712 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.1010875 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103407471 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082408125 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100991271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083473807 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103816576 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083922741 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103004013 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081450114 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103037539 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099131048 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081163895 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101540426 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083262488 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100108902 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088912698 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101561396 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081929653 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102767648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101494609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084055992 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100499773 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082135839 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103792716 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083584915 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100388319 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085165243 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095502995 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107490227 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08262028 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107866098 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083469112 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097007369 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088229754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103148153 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105265709 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084166447 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101718176 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083735618 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099928568 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085940804 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109005638 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098576092 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091901427 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106323781 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084056376 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103364812 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082429001 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102179294 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100672853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084800926 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101687064 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083251467 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10028489 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087943572 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103557632 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083290907 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102735332 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102105339 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082449298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101780538 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077840177 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100064071 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082656383 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101655012 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108491657 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084528392 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103340707 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081516543 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102222982 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08245913 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097066432 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109872072 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092904693 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101990515 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091071448 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099892436 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102651478 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092425928 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094790631 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081550257 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098452845 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081109945 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108842688 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084366243 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108561664 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100489695 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082536668 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097985649 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083927803 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099901515 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078185019 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098982166 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086718322 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104127156 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082167845 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102008315 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103755734 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084775319 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108536947 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08262206 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102863438 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084002258 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097712776 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082278026 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100189871 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104103672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085041994 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098561227 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081021985 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101481032 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092929645 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101419032 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083172195 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103026804 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108160336 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082855478 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104954931 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088343895 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095628224 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086163141 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101517519 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08355306 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101031653 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104780308 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087049239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102333614 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091015579 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101829679 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084028777 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102190608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099442346 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083740982 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101403139 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083684068 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100542642 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084402228 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110123285 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081583292 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104168699 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100781308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084007105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106334868 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085325883 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103425156 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110055267 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086731321 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102468813 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090798361 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106390808 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086546527 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103190543 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102509432 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09008052 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101104915 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092095492 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101815749 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085251683 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103110981 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081577491 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101061576 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101686224 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083242378 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106725264 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084283747 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100896319 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083336353 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099296597 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084640324 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105315332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110210507 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086906816 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104723012 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078943846 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09863422 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08522983 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099633981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103889899 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086707224 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107742095 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086539651 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101981712 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08299772 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110580329 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107978101 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088788634 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09937765 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088649055 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102636487 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085984816 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103158825 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083624976 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10423811 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10658926 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085696294 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101141856 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092463754 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106272822 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103597351 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085867508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102212493 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083992617 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096975673 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084728679 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104354809 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091080304 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104448041 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101927801 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09422154 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101285083 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083940066 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10556101 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083117911 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108994336 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096647926 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085844867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103536856 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085808681 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097015588 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083355518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099808974 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08648722 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100963944 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07936684 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111229871 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109541015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086661812 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100672065 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082540655 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097824379 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078981171 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101494853 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103984858 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086454131 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110514865 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083189307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100825118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07892777 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101944281 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087240965 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105220261 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09929821 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080194447 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100262213 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086469571 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109078977 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082836851 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101734217 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087193316 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104952244 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100076619 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088667046 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098794107 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089051269 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112765877 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085081478 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103616341 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107621976 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092294277 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103056785 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079228142 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103448154 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086072063 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102663861 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103364543 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085612866 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116179436 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087038204 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101851012 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083123573 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105237273 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101063638 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090727084 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103883393 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085838581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107775428 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085810313 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111998005 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105556879 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089325428 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105093631 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086734786 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102461809 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102226447 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082538531 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100838104 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085210847 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103291567 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089368432 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110586738 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101907585 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094051244 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110805387 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089171068 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100445363 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083370323 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102330427 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079849389 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104067129 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100444259 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082721634 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10017923 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083183628 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102438919 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090299544 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10487243 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08510754 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102846569 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096325356 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086133794 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104942577 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085223783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099537322 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084483134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103803147 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090604294 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109127426 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102323578 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086359182 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104081934 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085340945 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097978581 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091705545 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101628247 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086624826 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101949065 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102457388 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085094189 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105925467 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091001506 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104278734 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086394594 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115085045 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105417931 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082323082 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100480341 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089549327 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100812397 seconds)
  done (took 57.503528496 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148635894 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081486562 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09766709 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079422223 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112229406 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098203602 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079317576 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099631352 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081345865 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10168384 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079603247 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098457105 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109032119 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124223007 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093958534 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103464955 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097778951 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081175736 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098223332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081178125 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108735874 seconds)
  done (took 2.870981791 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105459527 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115985416 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114386389 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119109744 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090023006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114754916 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114557126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115134247 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100126262 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110184662 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119644817 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114535381 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09210817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110688698 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109787242 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094421868 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11829678 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108530024 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116308477 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094998303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112610207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114555823 seconds)
  done (took 3.216561873 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086934625 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101279203 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086517316 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097241178 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084166521 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097195821 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088059929 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099888382 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087833828 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10190242 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082268609 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101802011 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104009034 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080099771 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10167179 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081349716 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150627511 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106646954 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083328015 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10379799 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098704185 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086516129 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098218001 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080924271 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101669337 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088798892 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103688038 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082704578 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102311433 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08316089 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10290659 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081617179 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104445641 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102690808 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083907703 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101467464 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084423451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102719462 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.08017899 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100434549 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085025876 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098103733 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085419179 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103557659 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081970268 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10074356 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085031117 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103432645 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097668173 seconds)
  done (took 5.457578952 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107717183 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161457453 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08619262 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142315176 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120530986 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112279773 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088026931 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142848786 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101291536 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082906547 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123154725 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118927963 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103075198 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089479787 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106710518 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103548144 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085967208 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101854725 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088833302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102775955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108343753 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09105205 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118559967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116989564 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107073035 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08458947 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102437943 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107745565 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098106743 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10868908 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108696385 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09070749 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120098111 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104620904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083572327 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105681576 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120743546 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085218615 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106561088 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100283921 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086936338 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108581319 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109504527 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101838754 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104193226 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107854873 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084392509 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10023026 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11620296 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088024682 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112584524 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118837986 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089370533 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104271156 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108323445 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119193248 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085739457 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101607046 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088147816 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116570847 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100537445 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088853646 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118573517 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105646383 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111687338 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099847709 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107979918 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107434924 seconds)
  done (took 8.088347565 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09406602 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110073331 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120468989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120197597 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092244989 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109734082 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110004783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091454053 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110664677 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116743111 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109860506 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133691612 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087252044 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115171089 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111388938 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09240659 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111321725 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110694947 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091874411 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111055437 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11032073 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120875089 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092115531 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11958884 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140504928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105306368 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091510966 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11023395 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120246998 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109905961 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123760703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092118986 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111875712 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119948105 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123840457 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092374052 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103133944 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110426007 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092191352 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111306577 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104577555 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120440828 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091948633 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105782244 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110601728 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092246758 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120336502 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123458578 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114106487 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097707697 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110759886 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120387689 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110837262 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092572805 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1200949 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14699012 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120144368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120756168 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109879247 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119574426 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101470893 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128638202 seconds)
  done (took 7.657045729 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108285362 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114714179 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117287933 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099358233 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082687821 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108252057 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082742095 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10228987 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112961092 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095368654 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116657965 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108389064 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111141412 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098241776 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109448521 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111799789 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090007331 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1084254 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114075631 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107921161 seconds)
  done (took 2.926278794 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093551508 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123331987 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085384722 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111569174 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107003697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091333902 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106812607 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107951047 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086764807 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106730003 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096426368 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116095305 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104641003 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091815266 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115756066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110823109 seconds)
  done (took 2.482418791 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096461391 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117079314 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120175299 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085026616 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104078062 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081594294 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104748263 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100078126 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08190901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12066382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087010042 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108671396 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104001509 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083630573 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10061916 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088264268 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100492356 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082514685 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105518076 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120302616 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097070067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103926598 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104634268 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087354337 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104063134 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090019055 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105697289 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101715561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083930334 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104255869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085348108 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111953169 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100960732 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0843947 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102745046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083907624 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104537411 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085288352 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107799906 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10401493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084658955 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104187117 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084734309 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106131362 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081246375 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105078344 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100148135 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09105933 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102317112 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085629438 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105095413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106670567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086817884 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115481548 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090243871 seconds)
  done (took 6.226392185 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099566602 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108210695 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081188194 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102346532 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088659312 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107019598 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108749067 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089213429 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105966461 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083191814 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106763053 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090054565 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106472252 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107620142 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088513486 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107752372 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080735144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105907938 seconds)
  done (took 2.604152979 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09144535 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104181287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093326755 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104799661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084706991 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107281949 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0813159 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104300368 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10250886 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086251271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104699624 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08878186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102955704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088603368 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104444879 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08502468 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108100989 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102952105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085807651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100471045 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088314371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103524686 seconds)
  done (took 2.957291486 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118889489 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123935153 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093363845 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.226837971 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104722905 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131528551 seconds)
  done (took 1.634456492 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109543936 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119667176 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105596409 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107227187 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114075457 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106747187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08828626 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106837331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117408172 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102320601 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107511606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117379664 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117002676 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097599554 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114412076 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113789653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106567917 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087699401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1057983 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128095593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08869447 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117349397 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107220243 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087563408 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107388171 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11713563 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116859774 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121962744 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088471382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117851244 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113190814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088454702 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118001017 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121005288 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108325112 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098159065 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108315811 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128399001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113393533 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097115053 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108742797 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114013891 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098645824 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113746001 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118251972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107208136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093382911 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107340515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106903291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134611564 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094332434 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117951891 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114588813 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117552349 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117725619 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134788963 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102117671 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11741688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11564229 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121592595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116450818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095808077 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116820219 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122164089 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114195789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116531076 seconds)
  done (took 8.115959457 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102460542 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125135822 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107569579 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122839056 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098038466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108155239 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10757115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087696431 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108577232 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106204589 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151669929 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088305933 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117327978 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117142535 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107168698 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088117283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107796704 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116722779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087410656 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133913313 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108187171 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117599156 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117917703 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097110522 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122258936 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114541108 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107900325 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087715321 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107735723 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107003107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094620927 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107881184 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117500153 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086983437 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117626559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107580544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088029751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114433651 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107188857 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114523994 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097209871 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127720258 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107799832 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107566851 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1224916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089356126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107262403 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087123535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108087281 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106795257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122800812 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103293296 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123433536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117760652 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108163667 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089013241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108113244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107239363 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088389544 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11523262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117222944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107611779 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135913913 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088379911 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108615866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117673639 seconds)
  done (took 7.996810962 seconds)
done (took 154.365632298 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099178363 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135380614 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096731094 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167871956 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105555196 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120259215 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136719936 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09732977 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105399057 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086329714 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106368889 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087477739 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171219485 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085156025 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106865225 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107453122 seconds)
  done (took 2.65674023 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198946933 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254311303 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104256116 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105198245 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088927139 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109347217 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104566899 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091376491 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109332231 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086589537 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107808565 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086308715 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10561686 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08663033 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10970719 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088158098 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106451977 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088942995 seconds)
  done (took 2.879915904 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113047746 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15024754 seconds)
  done (took 1.122432025 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119102383 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17895128 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31636749 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155195014 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107655093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12681202 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156453557 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129574805 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19728367 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122933576 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121781299 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09819147 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139953053 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114972935 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094432915 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117545191 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140761884 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093504042 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11525219 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11635215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116779033 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106783135 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114843575 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093967055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180249892 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118811888 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084730649 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105688377 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115494056 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094602136 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113362792 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124196575 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098053298 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173924052 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102139094 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175818993 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098803115 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11238811 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114117386 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091941706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117970835 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117590388 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105256176 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117916841 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086826089 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118188286 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105526646 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086153447 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114654657 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097789296 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114750141 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113199206 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155648486 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118050088 seconds)
  done (took 7.519885086 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793190566 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162823837 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090655254 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880660194 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138427899 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104293481 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777253834 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132496859 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233190481 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757524953 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133778281 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122865869 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225534541 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240043795 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.942912394 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315262616 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672180387 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102055724 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149760803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153827981 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119210972 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13670226 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129913385 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.457036299 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096182569 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113138362 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116547403 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100035963 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158581927 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124734035 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114722361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178257822 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267343652 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183561081 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116193573 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090355282 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111506089 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168675162 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266891498 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214071735 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181474235 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08692676 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111664291 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121738065 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110951895 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108849047 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163162669 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194945782 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172660588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092744477 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121949448 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120374868 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121595689 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165918799 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120476762 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288882167 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321627049 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112015443 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120778098 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106267202 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263059507 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122488245 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223004307 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117112587 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211035033 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111548867 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779194552 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19015334 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090389293 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118083823 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119578168 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096154623 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121741452 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170316734 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391976934 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124971773 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093758395 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112101602 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204085711 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125032644 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111107849 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162257973 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115612051 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099231267 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12620071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123014725 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171148234 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231316502 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12390897 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119910874 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09465565 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126274669 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117051453 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210932862 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21757844 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162155061 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208896036 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122644482 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184650971 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167876488 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098803349 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19355435 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097856444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126620784 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123519378 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216325153 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146190518 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122354581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095433745 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1193781 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148728992 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126156166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098021814 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191504594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483829903 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166197032 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109447255 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12724855 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099109504 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182284758 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097133027 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258548811 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121831597 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170229211 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119014029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087621835 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120119427 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164725386 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122706719 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121089946 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101128099 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118919508 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236576441 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218848166 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123747496 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221880625 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184423488 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119907469 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173179699 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122232263 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166399243 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12056501 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12096796 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095326342 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795823398 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123840059 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099051551 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116960476 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196229301 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111269047 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102834922 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125665685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108207327 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753674066 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128216661 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121791802 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.122731188 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097780598 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120640835 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117903813 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094727705 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161350739 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229627225 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122470975 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119793054 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102862422 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181857318 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096279164 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125902828 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125097863 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124941767 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100925827 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11483247 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124316617 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170139589 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162321114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221342316 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595674547 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091213827 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125871201 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22780775 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090892607 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289724401 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1194014 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224800278 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165645251 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121100352 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317270704 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166836227 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198693973 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126833378 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17337153 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087479508 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118154505 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163438455 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112259038 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118520671 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163729321 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1253333 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102151681 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969039985 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112527082 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225867392 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108718584 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172477189 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116770245 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099678177 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288467949 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111805738 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107823711 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18614709 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094565703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125140918 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.72122455 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104008536 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12206995 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118890258 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22084622 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164487864 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118325784 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099022328 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121674821 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163798937 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206654842 seconds)
  done (took 44.090860276 seconds)
done (took 59.117352031 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280236778 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213488673 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257236794 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168939287 seconds)
  done (took 1.874489034 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174245803 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147866445 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120549369 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107193694 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14948397 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085082058 seconds)
  done (took 1.665040858 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352563671 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270724335 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238530605 seconds)
  done (took 1.74157278 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290004826 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25103627 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354131403 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417070753 seconds)
  done (took 2.31774813 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209194968 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131598714 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110487853 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104601068 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195833645 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249638278 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141044367 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201594103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121813129 seconds)
  done (took 2.395349721 seconds)
done (took 10.876372537 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.291881939 seconds)
    (2/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.161632151 seconds)
    (3/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.22830294 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.2278521 seconds)
    (5/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102391063 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125665376 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 0.232430085 seconds)
    (8/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224932721 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098949222 seconds)
    (10/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116037278 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115960902 seconds)
    (12/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17536597 seconds)
    (13/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126959867 seconds)
    (14/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094218262 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.208406932 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.22799275 seconds)
    (17/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173334668 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.182273779 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148743056 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123839637 seconds)
    (21/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.197902654 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127187158 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 0.224873058 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086033675 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116474748 seconds)
    (26/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100654627 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.167528948 seconds)
    (28/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.187594589 seconds)
    (29/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.13188587 seconds)
    (30/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091909887 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.205653695 seconds)
    (32/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09094983 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119615258 seconds)
    (34/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137425537 seconds)
    (35/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218235186 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067276197 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.08778139 seconds)
    (38/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.183834566 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168562011 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117548779 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094566699 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172889287 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13293863 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101993661 seconds)
    (45/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232006772 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.200258057 seconds)
    (47/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118083228 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088968767 seconds)
    (49/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20860135 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.225892381 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20060699 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139705483 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.169201073 seconds)
    (54/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116864653 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103380926 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184846254 seconds)
    (57/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.152252526 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.147797544 seconds)
    (59/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.087781813 seconds)
    (60/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177289635 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100419807 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.150893463 seconds)
    (63/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093050929 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109614602 seconds)
    (65/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087910906 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137607956 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124976587 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 0.087758103 seconds)
    (69/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.103367289 seconds)
    (70/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.167175754 seconds)
    (71/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171187819 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108974929 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116319624 seconds)
    (74/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110993273 seconds)
    (75/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095143834 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11624416 seconds)
    (77/286) benchmarking ("sort", Float32, false)...
    done (took 0.173977209 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.183466807 seconds)
    (79/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149392643 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090561037 seconds)
    (81/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.129941886 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135709896 seconds)
    (83/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132748734 seconds)
    (84/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.225415693 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113115968 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116722366 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066787719 seconds)
    (88/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120784664 seconds)
    (89/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095137829 seconds)
    (90/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.213073809 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088972768 seconds)
    (92/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100216185 seconds)
    (93/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107573567 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092593905 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.166323651 seconds)
    (96/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121307397 seconds)
    (97/286) benchmarking ("sort", Bool, false)...
    done (took 0.179912223 seconds)
    (98/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.217431095 seconds)
    (99/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09625704 seconds)
    (100/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.222535887 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118787493 seconds)
    (102/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134119211 seconds)
    (103/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119049136 seconds)
    (104/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088316183 seconds)
    (105/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109635347 seconds)
    (106/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095899977 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140490729 seconds)
    (108/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091308594 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116442007 seconds)
    (110/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09214759 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110057984 seconds)
    (112/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118990326 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09460849 seconds)
    (114/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.117635308 seconds)
    (115/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.151416813 seconds)
    (116/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.099374578 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120357379 seconds)
    (118/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117157714 seconds)
    (119/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068162275 seconds)
    (120/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121121332 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087406698 seconds)
    (122/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.144187836 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108641356 seconds)
    (124/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087608232 seconds)
    (125/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075083352 seconds)
    (126/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140671025 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067237817 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120737755 seconds)
    (129/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067019902 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109142183 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0944122 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186024293 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114988296 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136550056 seconds)
    (135/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093134829 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162307971 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.18628986 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.116508137 seconds)
    (139/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.098693755 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098003138 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115103221 seconds)
    (142/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.134395184 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117863442 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119311912 seconds)
    (145/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067836402 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06701517 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109899126 seconds)
    (148/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097149272 seconds)
    (149/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090540017 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066557099 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086291985 seconds)
    (152/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089426241 seconds)
    (153/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193471224 seconds)
    (154/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068742929 seconds)
    (155/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068244365 seconds)
    (156/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.09967832 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067373868 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122303854 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11573809 seconds)
    (160/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231553974 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138303199 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066576802 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0906609 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087561817 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123457503 seconds)
    (166/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067462672 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18319506 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072160937 seconds)
    (169/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114682063 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068843712 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117268844 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078447912 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146776506 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097143591 seconds)
    (175/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100116518 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111241729 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.150028232 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067525112 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091244304 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100330974 seconds)
    (181/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109667268 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191093313 seconds)
    (183/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094204457 seconds)
    (184/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.153686466 seconds)
    (185/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114669767 seconds)
    (186/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090404601 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092913005 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.223566861 seconds)
    (189/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174672603 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085471458 seconds)
    (191/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.144098958 seconds)
    (192/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088662861 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117467826 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067091624 seconds)
    (195/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172212285 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134820222 seconds)
    (197/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087184753 seconds)
    (198/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.144734119 seconds)
    (199/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068154234 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133571458 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097148943 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118270924 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087595038 seconds)
    (204/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120226892 seconds)
    (205/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078022736 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089699873 seconds)
    (207/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088358225 seconds)
    (208/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111665932 seconds)
    (209/286) benchmarking ("sort", Float64, false)...
    done (took 0.17219829 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092482947 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067093909 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108267968 seconds)
    (213/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095790384 seconds)
    (214/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090278703 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.310289207 seconds)
    (216/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102955737 seconds)
    (217/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077196829 seconds)
    (218/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068366811 seconds)
    (219/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162553789 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088380342 seconds)
    (221/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158386864 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09004038 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087092937 seconds)
    (224/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07715172 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128327946 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068590432 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13618512 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06770434 seconds)
    (229/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117631177 seconds)
    (230/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088952859 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091748434 seconds)
    (232/286) benchmarking ("sort", Int8, false)...
    done (took 0.188577608 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109693868 seconds)
    (234/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067071478 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086246743 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109109071 seconds)
    (237/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.180550179 seconds)
    (238/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085946298 seconds)
    (239/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127719427 seconds)
    (240/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088990357 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116548269 seconds)
    (242/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067736917 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109240327 seconds)
    (244/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089883362 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1182912 seconds)
    (246/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066689823 seconds)
    (247/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090025434 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157743532 seconds)
    (249/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116493297 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068070667 seconds)
    (251/286) benchmarking ("sort", Int8, true)...
    done (took 0.220482946 seconds)
    (252/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066600068 seconds)
    (253/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118240405 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113335196 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087151455 seconds)
    (256/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116581013 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087177651 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06771795 seconds)
    (259/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112178611 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117359126 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06696902 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085583525 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10856639 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085695748 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089770054 seconds)
    (266/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076004388 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117319971 seconds)
    (268/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.0677958 seconds)
    (269/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094101615 seconds)
    (270/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108963334 seconds)
    (271/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068228066 seconds)
    (272/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123550883 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091746737 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10946601 seconds)
    (275/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067779025 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10960777 seconds)
    (277/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067471408 seconds)
    (278/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110241081 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164092533 seconds)
    (280/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067580214 seconds)
    (281/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067215665 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115343015 seconds)
    (283/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090392092 seconds)
    (284/286) benchmarking ("sort", Float32, true)...
    done (took 0.232762749 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090477536 seconds)
    (286/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068725174 seconds)
  done (took 35.997798431 seconds)
done (took 36.887090063 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101505275 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147170696 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096182152 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134684694 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122896956 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091435366 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11815527 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098740617 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122628808 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123944196 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098843087 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092696572 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097026652 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119927415 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0966252 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138566811 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122510142 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093666813 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117987032 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085887542 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118278933 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086856454 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111549278 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070105935 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120613634 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094545191 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115872956 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119479698 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086613617 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109706466 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092331318 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116911855 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086747472 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122869428 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093950144 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117686484 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096728518 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119766508 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111195688 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086674899 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117212485 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08653199 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116315365 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095348871 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11483237 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092691601 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118021077 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099155612 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139482748 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114879052 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095394147 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122538771 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097218525 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118061856 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091317443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118640976 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092072892 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139015926 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118191323 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092926082 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118158221 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095602339 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115645122 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095278136 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118060537 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120907949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09798693 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115666228 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097271064 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115416059 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086641495 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118091573 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090536984 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110656199 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095947533 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121150744 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085348232 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115682551 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116445726 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091841129 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110089472 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089570084 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111255623 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093339806 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111946378 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07019279 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114303558 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093537813 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109070262 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096120975 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116174914 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094284384 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111700908 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098837126 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110035727 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091993339 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110881692 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08737177 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112136639 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090566879 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110467123 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089827098 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119566921 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089632752 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117134423 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122787866 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087197522 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116646807 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087215511 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10917317 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101863728 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121036627 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087743099 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116276912 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085786083 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116977947 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085885193 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109949014 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086912927 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110982781 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116649802 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087650199 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113467067 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094426992 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124027976 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087079535 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113826644 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090569403 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109865823 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093513102 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110486703 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088160777 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112480166 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078829464 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11237074 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087833989 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118540017 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092136436 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118447792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089029589 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119495281 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092205709 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116796877 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092596923 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110310754 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074556916 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116047919 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090460541 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11312726 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087966958 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112976233 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087948515 seconds)
done (took 16.896414114 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092212009 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184331695 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151145674 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141607926 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107610195 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110939304 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121679199 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119339135 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112716894 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142486286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110444757 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131422366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147085155 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087490807 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111377657 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091673769 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113589606 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102536675 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145557627 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132591001 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163992631 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087113431 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146806227 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135224439 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12043403 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115224271 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112110156 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092142558 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115214142 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10312317 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132658413 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115193033 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088869184 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133437709 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104993694 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119301781 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087653492 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117878444 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088019018 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111966637 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141669704 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133519551 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093594552 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117393517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091475275 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114337982 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090774052 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120092212 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098390001 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11602647 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126087257 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156789872 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092195315 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122058885 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086991882 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122799878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121876057 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09150608 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11144909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090948653 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111276105 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091645636 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126587886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141156803 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092146148 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121492933 seconds)
  done (took 8.615696977 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109415495 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139376599 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105450455 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130979806 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111091124 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089046233 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112127283 seconds)
  done (took 1.749458246 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093514791 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134191879 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111966253 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135324137 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131885319 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11361316 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122842892 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088806981 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133720357 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114322791 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110882725 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14961859 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089728958 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120449 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137318606 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089711964 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136838635 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088756165 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115918356 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13621664 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092825449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134268268 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091472953 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113073988 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103105909 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113049797 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161583424 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094339223 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11459613 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092287126 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111747614 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151965828 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102975946 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125121803 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088467186 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128950485 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127743686 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087678522 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125874171 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095126285 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127932394 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089568655 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11433737 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087605738 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118502206 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124233474 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092931633 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131788148 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092307116 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133238708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090695437 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127076459 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089652798 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117998345 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090498133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119075029 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123235868 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090628106 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13425273 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09114919 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129754397 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105365321 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12788937 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130721486 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092436745 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127297216 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103810683 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116862036 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090657424 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116937608 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129418635 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087065239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115917325 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100782189 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11499441 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112482006 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137005925 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115389824 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099936168 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113943796 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090910625 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113443127 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113152617 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11749918 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089600846 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117960228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092298812 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112118992 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088261207 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117043676 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111702062 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091634599 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116403143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090716343 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116289702 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107105706 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114461779 seconds)
  done (took 11.824579656 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092318711 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114675116 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092535781 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113691917 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091147822 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114491992 seconds)
  done (took 1.584277842 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119400629 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116969619 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10379064 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120131388 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155451952 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103860787 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129574147 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123103887 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108560552 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12681376 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12856773 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105609545 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135716658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120654718 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104754078 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120329636 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128929695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100192933 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126816037 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096972203 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136792122 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120453166 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097560892 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131129078 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119473271 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096460493 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126302533 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104213407 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127006229 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122815629 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096213558 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117635315 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095703765 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123128638 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129226786 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096877098 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119871096 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118529449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100098944 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117030192 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10509735 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121272166 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127065016 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093672427 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124116431 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120009829 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09396175 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124771002 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104774707 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118850334 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121732534 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095405863 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119894428 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094773905 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122583589 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124189232 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094899251 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130081758 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121500474 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096956592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117960141 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094115149 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124273868 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11851977 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104771766 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119424634 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121008231 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097309701 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121785418 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096588904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119644975 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092690827 seconds)
  done (took 9.222442741 seconds)
done (took 33.947044208 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.681898125 seconds)
  done (took 1.646549363 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.833497659 seconds)
  done (took 1.801247992 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.293980036 seconds)
  done (took 17.290443869 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490389744 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.572629118 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989882653 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177990461 seconds)
  done (took 3.197951151 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.928273195 seconds)
  done (took 1.911781895 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285241971 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23491884 seconds)
  done (took 1.48977291 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774603533 seconds)
  done (took 1.756250942 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360193013 seconds)
  done (took 2.330049445 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327937366 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181708436 seconds)
  done (took 1.486559414 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551208652 seconds)
  done (took 1.532793589 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.710395459 seconds)
  done (took 10.695080599 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270449035 seconds)
  done (took 1.261831212 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305280792 seconds)
  done (took 1.286936448 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.354529111 seconds)
  done (took 4.339004248 seconds)
done (took 53.001310185 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103832533 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125800128 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102321743 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12382307 seconds)
  done (took 1.435677788 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105755159 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120543155 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100970035 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119770256 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1258856 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096102087 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122401244 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101909977 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119972722 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09674093 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121083014 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119330985 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099856182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122350966 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093907826 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12335771 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100079161 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119939066 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12405118 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09775334 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118647732 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098503402 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124479994 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095165364 seconds)
  done (took 3.655777336 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10362711 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118264712 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097166149 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11777747 seconds)
  done (took 1.429764368 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103971216 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131394974 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106220874 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124488307 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130743816 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105457149 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116856124 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09225944 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11909475 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099948298 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115531593 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138340442 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107390162 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123712502 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101639523 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113459655 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091868034 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130483477 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124954042 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10093515 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116816745 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099610241 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114081062 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109468625 seconds)
  done (took 3.705148186 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173924495 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126955058 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137629416 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096271159 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159117983 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140338547 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088497267 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139849703 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088426557 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130892982 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117379306 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133599161 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128478063 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08873231 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112753986 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087313796 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127978159 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12823855 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091435822 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126560278 seconds)
  done (took 3.418635617 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101190546 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11686444 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087926314 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115435519 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099506237 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12037158 seconds)
  done (took 1.634053241 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093949771 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113122088 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089974446 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113853157 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09439592 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113645429 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08891893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113729853 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090305493 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113989834 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089533285 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112314023 seconds)
  done (took 2.220415249 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505588941 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118890029 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1193479 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08905195 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121060045 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090029995 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130105768 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092078107 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14016564 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089616189 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114761624 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092872387 seconds)
  done (took 2.691894034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239037849 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124421661 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283313684 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363611997 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156501605 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16526634 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27795208 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161826076 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197511801 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14894433 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229168802 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195404501 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150614543 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189860454 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137146521 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144810425 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188356991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250446822 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153558056 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211977639 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20469856 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165172076 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18031195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152025379 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111490986 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191768711 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095285483 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128904447 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232571534 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178478474 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189862616 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161003338 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146846151 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235511677 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247388925 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195492321 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277725934 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13362149 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164834893 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144349223 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263573222 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13800828 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23312316 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155395863 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105303517 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219893065 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16584008 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177447077 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145253597 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138504775 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197846863 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241436606 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193643442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137818188 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297996872 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147273286 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157020112 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188862715 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250879544 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227431469 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188724348 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119676986 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187776009 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190397961 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209949652 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151836648 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183177674 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147469483 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182801582 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189629397 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165868483 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202918135 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180145342 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139005518 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171150685 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172974509 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170919368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258966806 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184892025 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122665381 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168155922 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147234629 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130088979 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169705207 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124656214 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215583189 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143064093 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16423574 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209275107 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15812029 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16080749 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218584305 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184124647 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147629515 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083919511 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152397796 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154825449 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175107436 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139235307 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158231544 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155934963 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129935766 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168530586 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097550251 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210043114 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092803414 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172912258 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209333374 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100658696 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161384467 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153405406 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150256658 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17716111 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198762771 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139683851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133634013 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210719821 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179000562 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140934057 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176621321 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228535196 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144619988 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122630672 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226335572 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24350044 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113676685 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229359333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153855136 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10821032 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13338331 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180780189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15551385 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160744499 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13229771 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182550144 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233433396 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099055177 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13893018 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19436405 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132467562 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13146134 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154557181 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145684562 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110749657 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142141686 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144722704 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175344796 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180077994 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154716022 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166516595 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150095669 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247732271 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138648339 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150490378 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147384241 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093987172 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191939143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225158683 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102759395 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230858989 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170350656 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222397421 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169015244 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106631019 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176174164 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1290186 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.1190817 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193421521 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166972799 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161575875 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222395854 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194308993 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179479154 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.207804997 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165010847 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175633844 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165767326 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156850263 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111103104 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159544019 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157378737 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12312818 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140119036 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108017127 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149203421 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141929087 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133145457 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1976858 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169358374 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214892703 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158135949 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149375528 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181310785 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101963795 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202701804 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178274634 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145505272 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199803972 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191419502 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212125695 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143284724 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20049831 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119447668 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097915427 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141274582 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169343583 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133289416 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107632493 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187202507 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180935172 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181691158 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170575757 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229761159 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175069613 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191619619 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121275558 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141944284 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209298357 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177130647 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155299735 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136747727 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151693696 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177429297 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154435032 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255350389 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167238298 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17467687 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23404191 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149353398 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104786407 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149905201 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176354844 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152430622 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175988235 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145282186 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139963401 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160532382 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.129038389 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158888068 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185788738 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162024161 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213886566 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122674557 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213118128 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100595222 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161972143 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15964625 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164269194 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108360525 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174653402 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227216102 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119483182 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165682846 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215122695 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103511288 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304076991 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233353877 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219911086 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110704015 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154050791 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160663792 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162808411 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169470387 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178748468 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158183298 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187208044 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157579535 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135592911 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138551459 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14923126 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125582422 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132373259 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14821551 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176425015 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138341298 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186951126 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154349492 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15812404 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171106656 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149530929 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143763736 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148399926 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215776339 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181577774 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238404726 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150214732 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178632229 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232092271 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100372977 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130766097 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132600067 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177605234 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109284908 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217349916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186345835 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198143019 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20745515 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178937836 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13877008 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093019753 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157795967 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167346253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226869949 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148945798 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144701446 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202983763 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135957769 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10517977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166425114 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286107696 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143341699 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222142453 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080802787 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280515428 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124504154 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105392204 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161928694 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235575891 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135057342 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151496657 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193172946 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161445439 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161322072 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121575295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216223249 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21103109 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226555486 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183770477 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13117183 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130008267 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20206458 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19352678 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155460378 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138248817 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204077964 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193718958 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222302041 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140619748 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168053452 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167771779 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158595254 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187808813 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133949531 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207212171 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134566201 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189196628 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1521131 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137850952 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174790046 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211704984 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114000599 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212622131 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183710096 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134339904 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105941791 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190992368 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178622399 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153682889 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099799413 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207437027 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098091987 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217805111 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233001539 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134194537 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155125122 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146183166 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133922161 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126704741 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156617054 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137883027 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162078801 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202466745 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135003422 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189437753 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229077425 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17137582 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172105561 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145513323 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691547203 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131090232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195347872 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146954961 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204760758 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149334759 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17160217 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157589086 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166820313 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22165819 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160646703 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230426236 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192292922 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17886595 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131609546 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157624111 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154784689 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144973283 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152540003 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1693659 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159789606 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143485297 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179121716 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163658571 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133267797 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11324273 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225449368 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120291643 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214141741 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179881908 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137621835 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17442441 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187164628 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132838062 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179152873 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234852365 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114474468 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1482056 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13353987 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148779365 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260377094 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097073156 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214288389 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185208644 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157909924 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167645649 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146334946 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192777944 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155425358 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210527661 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115225371 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157277783 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155224595 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138003968 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129029241 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153996022 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168906201 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121700238 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18479693 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13771041 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193604616 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123622131 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143517885 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284623673 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175533032 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242632765 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108145962 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135491299 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161964892 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14960974 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176542449 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177273082 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135631732 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134094844 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134426452 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12750358 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112413742 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154401897 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190509067 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189662827 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208104418 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135092421 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276403162 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11341395 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155382461 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11413874 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105341338 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149735019 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145187741 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154232161 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191410956 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261157227 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146828048 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13186121 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148725157 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099064571 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135184792 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162829517 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165769642 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179540029 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143413457 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082103893 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156389564 seconds)
  done (took 82.064699358 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173596976 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13439166 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146057938 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201014043 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17482912 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268239962 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209534933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251107712 seconds)
  done (took 2.630793337 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093981537 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144865309 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155707244 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131953921 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091497315 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118673082 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340855125 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131826894 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114657487 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121210565 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171120931 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094340357 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.541402684 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091096214 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118223438 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106453713 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091723226 seconds)
  done (took 3.722560968 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.967348906 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.471873921 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.663450334 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189972581 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156259239 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11602268 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.667849473 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094722022 seconds)
  done (took 11.402491433 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114606706 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134898342 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123564191 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151178079 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139471474 seconds)
  done (took 1.747248739 seconds)
done (took 122.741004232 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098179204 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126166769 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098295594 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12894427 seconds)
  done (took 1.515062227 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09463231 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070791219 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099363714 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074939691 seconds)
  done (took 1.412768166 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18646625 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166333632 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382007757 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071715027 seconds)
  done (took 1.56020118 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11448627 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131149341 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10373775 seconds)
  done (took 1.434186466 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106448686 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128247663 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102847669 seconds)
  done (took 1.418952693 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105924495 seconds)
  done (took 1.186838977 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108233348 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135742673 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108771159 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135444692 seconds)
  done (took 1.569338913 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098508385 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125480342 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109705042 seconds)
  done (took 1.413534207 seconds)
done (took 12.938151574 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103277964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.412034282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410352284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116714119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720413868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380236755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021257299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144721848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1646917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09310021 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137709253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671725312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01030025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.368827797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970622391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367191047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674910164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119611592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118339469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094067481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004917358 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092548075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119736766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093058744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700962185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424445269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095039497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.367069091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092816688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124766229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382252989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121869004 seconds)
  done (took 16.787793178 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094971373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172754454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099414032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136284383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121705987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093886222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122792119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09397654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176805233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120760389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11114431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120260026 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123689548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096128715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139997783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094013083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124126375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092914321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119789908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120468019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112043144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118817164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093597255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120592256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094534455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13409983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120165129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09367911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118985186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098316764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125788248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094665234 seconds)
  done (took 4.781764543 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140624773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181424011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126502849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126002454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166803178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122780681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196946147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118143537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180954156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12062372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137438762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093372131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155042847 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120676604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114243949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121867758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09679862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120182984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093046619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121702632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137829685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093816623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120564853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093183477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12117785 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10759388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12197247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118597403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093253146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125421651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100698905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122444638 seconds)
  done (took 5.101030982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097882242 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123829686 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108564645 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136341017 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095094913 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124134372 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096841365 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122602584 seconds)
  done (took 1.989100191 seconds)
done (took 29.741671143 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111628371 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125290977 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10729449 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133023343 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103069713 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.129424686 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091329623 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131566391 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13207096 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101925125 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135714034 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091505413 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121011204 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091728352 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133765447 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097615353 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130871477 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101958133 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132214549 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129452576 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094832912 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131262066 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103172089 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131496294 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104233948 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131550043 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134809498 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099752276 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120640811 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094102432 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121889571 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103479061 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122259352 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105677721 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.1286507 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097597672 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121846922 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094330208 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130734658 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130485892 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099730792 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131609937 seconds)
  done (took 5.941508551 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107378311 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.137403191 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104306847 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080843107 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115429936 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080720242 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135904248 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078900073 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108032767 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107477576 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074368547 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104026025 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078727644 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099591625 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077945471 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075314763 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106219098 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075948134 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075956023 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104189732 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079440156 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072653799 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106102617 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07805464 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075203103 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108162546 seconds)
  done (took 3.538905767 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100599064 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132268801 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112577573 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182986573 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159091433 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100300532 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129818615 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137996297 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108667778 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118635222 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096169106 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147433394 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109805905 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127898448 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092025174 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135358332 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134040176 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094345534 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126986107 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112644386 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137202712 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102948802 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139297956 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131213427 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092704635 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121239165 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097429502 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133793692 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097467807 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129664554 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096861532 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123380446 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120817273 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104257416 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124744517 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094559224 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139972321 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102913224 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132637395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119263943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101128802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120341754 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114229012 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159500179 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091652853 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127942005 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122972783 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104088481 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119876823 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111548022 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129882589 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091766853 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123295227 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091554269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.1200482 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107388931 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122246219 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095290357 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129597548 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125693094 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106267469 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122811665 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108472512 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120406455 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101204046 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119660478 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092901817 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119147546 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141500111 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094784433 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16011821 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09395628 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122214277 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101421866 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128758203 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126268951 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093275924 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135890867 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102336417 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124210295 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101932452 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124039728 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094653226 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138882926 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.121342358 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095478091 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120769316 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100159866 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122317334 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094057303 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134985871 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09209768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12467434 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111088453 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120198308 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12104576 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100569423 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124712173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092170562 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134841644 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099040317 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12140787 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130980899 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093769031 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122977112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103145626 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12570625 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092384499 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125750121 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099101136 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12189279 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093621537 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12430193 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094324014 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130685745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12755036 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098337792 seconds)
  done (took 14.705932661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226000878 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213294114 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203945453 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.290029956 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134043196 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114132803 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209392857 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154344281 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12199137 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160358725 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17016088 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179678492 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167890271 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180104201 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169074612 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09305367 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140909689 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134657554 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.241210414 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255151788 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142212504 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101510915 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161714283 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158222801 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135402616 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130079564 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110265126 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132652205 seconds)
  done (took 5.740354968 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109155627 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153342208 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09887971 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143622282 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147062791 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093289318 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126077232 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093962493 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134148806 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134697048 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093660928 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127148435 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099700003 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131095827 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121547808 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103601641 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130799093 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095999604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124921916 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097494903 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132735382 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101254007 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12536108 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119481106 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103148532 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119631241 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086634086 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141134129 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120734352 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115010737 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119246318 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101656116 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134678849 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093469871 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121610203 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.099154248 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124312924 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094879316 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123280457 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091719782 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12076733 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077844501 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120494644 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134649294 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099318074 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080357246 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127891691 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126243353 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09463369 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11894319 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097189811 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124442282 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096704501 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12920377 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095980784 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122747505 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096803693 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114308423 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099570687 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123752377 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084840977 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119810036 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098989886 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116303261 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102319254 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125728464 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091626358 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123475916 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097870771 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127633871 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096147417 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12796564 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091014069 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.1232207 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095824348 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12698776 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124012107 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092801485 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121078431 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093680666 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075597159 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121607149 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074108006 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124921611 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091579385 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120237187 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095828028 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128634616 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136438858 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095368076 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131151141 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094338374 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121392507 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096674702 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111759651 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096742597 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138531087 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139329913 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094702555 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120455486 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108021085 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124915656 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092645937 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104803843 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102648374 seconds)
  done (took 12.86834093 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133655234 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152078603 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122963709 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11325745 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155713308 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155916844 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100832663 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128952827 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095944412 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140999094 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094214867 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130590092 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09363018 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136382318 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155200346 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103599442 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123199053 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108000287 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.1261494 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167187102 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112259734 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140782897 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110449189 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122018061 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126938711 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110831572 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160035721 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107686395 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135487424 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140252839 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108541491 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159328321 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142087156 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098818887 seconds)
  done (took 5.437838887 seconds)
done (took 49.318178357 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.179737753 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.385468889 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.173910514 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.084027163 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.226828126 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.204412891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.192790442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.179878809 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.497021894 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.17928823 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.416541954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.610674173 seconds)
done (took 59.445874848 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.23063649 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333134815 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463349955 seconds)
  done (took 3.896769953 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.750541189 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.057266037 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.429887864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.173867635 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.185789401 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.477934299 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.719687475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.418021489 seconds)
  done (took 27.562013524 seconds)
done (took 41.554659916 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.170842875 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.236608056 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.204871143 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.151706288 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.275563875 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.196420763 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.492803707 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.200826363 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185124241 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.168641386 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.172425848 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.170833494 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.197482458 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.47699392 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.180044765 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.177295353 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.260651714 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.653246051 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.529500669 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.186674492 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.1868959 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.203789568 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.172951147 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.171044177 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.21173161 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.173216046 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.172903841 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.190023246 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.127416148 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.17617324 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.265910994 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.630490542 seconds)
  done (took 189.070643073 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.172360746 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.238368562 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.295824884 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220087607 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.750327936 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.372309739 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.321281924 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.792304505 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.188224598 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.181423459 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.480605868 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.172303902 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.544650127 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.142953012 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20332965 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.238979411 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.453754388 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.517161777 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208620577 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.330727951 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.183349404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.402660302 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.327044317 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.411863459 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.211846758 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.221190586 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.195151763 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.18570366 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.381169064 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.377643283 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.219340681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.201665708 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.69864427 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.030219157 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.190378008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.20129214 seconds)
  done (took 149.366820317 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.174168858 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.173569379 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.17392691 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.173533684 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.201496486 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.175023886 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.655436547 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.659016089 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.670697866 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.302022034 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.253764811 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.345398528 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175489849 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263138666 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.188910555 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.176304264 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.190704725 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.216614258 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179177281 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.174974838 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.657835601 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.189729026 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.381717931 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.340464047 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189587925 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.203141224 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.561737037 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.177470342 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203516527 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.491820979 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.218331674 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.176486658 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.462213858 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.191130881 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284444478 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.17969337 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204054655 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.176538748 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.446827352 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177516335 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.177402907 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.180500946 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.176543929 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.770450882 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.179223895 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.65863786 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.179828233 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.043727409 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.176835699 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.177046015 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.507478864 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.668815564 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.171837264 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.153774033 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.156956312 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.154814396 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.154345603 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.154588914 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.183101223 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.153678521 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.47642267 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.237467972 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.160395315 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.148239016 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.173091072 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.145990646 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.342281739 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.146737508 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.065954284 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.193626477 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.247923842 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.626391154 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.146075661 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235546306 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257371372 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.139216052 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.139755748 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.139455234 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.138444427 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.244919511 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.140717192 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.492462518 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300024367 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.152883709 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.225836761 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.232613594 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.140343783 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.454069405 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.14358489 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.140025756 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.809119215 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232310317 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.139938931 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.140748551 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.141497027 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.49146195 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.621155131 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.303497758 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.137668931 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.304889775 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.138181271 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.503286456 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.609478569 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.708745537 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.134588609 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2427021 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.297366388 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.149249561 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.133844381 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.214210484 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.139870961 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.193813183 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.134276393 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.529223654 seconds)
  done (took 358.004412769 seconds)
done (took 697.545529904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.727503876 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.723346752 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.822328233 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.720054762 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.688529543 seconds)
  done (took 9.746211588 seconds)
done (took 10.810736215 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.305634234 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.304395922 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.189401614 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.306233959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167435712 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.321416146 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.284013492 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.157946198 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.229533032 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.208651073 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.228913652 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.185526232 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.169811851 seconds)
  done (took 17.125129165 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.440846006 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.43476061 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.20367815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.443545315 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.180283502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455019535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.325537402 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.342891311 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.347031445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.171537107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.15374122 seconds)
  done (took 15.565734136 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482945488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.449642407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207722143 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493538524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.181455145 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.45073105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.344733394 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347863247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355809102 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.173259378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.155221561 seconds)
  done (took 15.711931603 seconds)
done (took 49.470803238 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.149663729 seconds)
  done (took 2.220110775 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.180547818 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.340222528 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.166067924 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.154047262 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.15261957 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.155750611 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.154706778 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.152229982 seconds)
  done (took 10.526589007 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.150503614 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.149284278 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.150557609 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.147544967 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.149166694 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.150809585 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.151214853 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.148168606 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.151408654 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.150502444 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.149272104 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.150313512 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.148051444 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.151504221 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.149683702 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.151601845 seconds)
  done (took 19.471436887 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.151193925 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.148585222 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.150490186 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.150569427 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.148935019 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.150531879 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.150963679 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.149141152 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.150436797 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.150381245 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.151062553 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.149427876 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.15066175 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.149983978 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.149643587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.151203343 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.149956757 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.149965679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.155076284 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.152162197 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.150105903 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.149734719 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.150314295 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.152126159 seconds)
  done (took 28.686698742 seconds)
done (took 61.976901325 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.729669158 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.615332003 seconds)
  done (took 6.41814098 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.151772547 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.152084449 seconds)
  done (took 3.383098232 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.15286202 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.152600448 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.152643867 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.152370698 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.154332106 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.152867782 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.15288378 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.153659341 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.15381542 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.152916003 seconds)
  done (took 12.604093658 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.152992394 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.153353238 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.151277116 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.153437002 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.152656291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.152456075 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.153186292 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.154671929 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.154812431 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.15782339 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.159638583 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.1549969 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.15940925 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.158242272 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.155807824 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.156238589 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.157854494 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.156574428 seconds)
  done (took 21.870120865 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.160026871 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.158594512 seconds)
  done (took 3.399162277 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.155116374 seconds)
    (2/7) benchmarking "second"...
    done (took 1.158618986 seconds)
    (3/7) benchmarking "month"...
    done (took 1.15621519 seconds)
    (4/7) benchmarking "year"...
    done (took 1.155957087 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.158228153 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.157698222 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.157955689 seconds)
  done (took 9.179288224 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.163372024 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.335345835 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.412583116 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.781851922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.160381849 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.16535974 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.000085983 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.165827082 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.16580681 seconds)
  done (took 13.42940931 seconds)
done (took 71.356933978 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.128363633 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.170529787 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.287480338 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.157203322 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.175056832 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.455085977 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.18092024 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.273630259 seconds)
done (took 36.90769475 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.16238636 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.139121333 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.82694302 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.148765117 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.148853995 seconds)
  done (took 18.341841248 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.090914336 seconds)
    (2/2) benchmarking "read"...
    done (took 1.493405182 seconds)
  done (took 4.666782846 seconds)
done (took 30.252186263 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163063029 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.157705254 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.159472182 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.162985152 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.163683073 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.159010503 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.162544531 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.158520434 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.157393825 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.16150891 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.160056739 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.160079697 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.16020478 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162270063 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.158721214 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160913733 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163389308 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.161069803 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158659876 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.161482425 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.159053136 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.16274697 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.160304722 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.164068704 seconds)
  done (took 28.937540479 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.164645787 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.161755546 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.164302463 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.161452274 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.161842626 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.163362513 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.164749746 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.16137177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.16266203 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.165932322 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.158743498 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.159684484 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.164358657 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.16171581 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164751998 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.160389169 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.162485725 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161844695 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164495363 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.162443986 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.166591921 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160366571 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.161493664 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.164680806 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.161547164 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.16107964 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.163275876 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.164290849 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.165287696 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.164922041 seconds)
  done (took 35.967971467 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.168731525 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.170770055 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.165568454 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.165270118 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.166356849 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.166436868 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.162285685 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.164465975 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.162747842 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164228388 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.166685104 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.163769822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.16633938 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.165610927 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.166374838 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.162649479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.168200716 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.163796941 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.166694565 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.166957306 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.164121151 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.166075691 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.16423584 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.166807571 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.166686504 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.166544633 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.166977238 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.166564086 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.167608842 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.164345416 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.167101556 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.169104185 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.164544069 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.166981566 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.167705652 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.166700846 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.170437157 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.170328331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.166290729 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.164763809 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.169148301 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.166809082 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.16588467 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.167791234 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.164884651 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.16634569 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.166057427 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.167129323 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.167088734 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.168005547 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.167076215 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.168080404 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.167826138 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.167737951 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.169131981 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.1656053 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.170902118 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.168344088 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.168455696 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.16820429 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.168936472 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.168272653 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.16896735 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.169129854 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.169345751 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.16959074 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.17091227 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.169638363 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.169642646 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.168317782 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.169785367 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.169646026 seconds)
  done (took 85.118498099 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.168083743 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.166301602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.164103899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.166736578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166442358 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.169914083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.165782722 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167271754 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167495285 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.168694845 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168766461 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.167066826 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166753026 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.169610314 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169906392 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.166166234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.16887095 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.167334941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.168556319 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.170416589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170828194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.166923965 seconds)
  done (took 26.778455241 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167677949 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.17382281 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.166921756 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.170834515 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.168540518 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170697673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.170706457 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.172127382 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171450977 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167411708 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169310854 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171421771 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167068031 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168713071 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167057144 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.169873524 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169848647 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.169193759 seconds)
  done (took 22.14017522 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.168974744 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.16772058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.17012722 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.168452691 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.169808423 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170669713 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168729775 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.172074385 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.172247118 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.169611774 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.172522335 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171560236 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.173278102 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169736405 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171103218 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.169158059 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17102625 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169073458 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.172888867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.170947788 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.168788087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.172299807 seconds)
  done (took 26.841883519 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173128394 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.171958449 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.169564616 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.169695622 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.169380023 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.172343924 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.172104462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.170090845 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.176687219 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.173572975 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170312567 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.173085481 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.172356793 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.171521201 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.170638803 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.170676795 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173922758 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171943339 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.171298624 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.170503226 seconds)
  done (took 24.527047925 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.174730064 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174736609 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.17316103 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17538632 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173605368 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.174963349 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175705962 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173013372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175014975 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.173485422 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.17362683 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.174015437 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175118387 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.173574115 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.173587079 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17472769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.173001547 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.173619974 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.173969478 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.172891227 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173100562 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171782949 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.172952162 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.171504165 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.17292863 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.173013395 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172875854 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.172608226 seconds)
  done (took 33.954565015 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174430465 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.172596002 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.169933075 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.170229396 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.168993756 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.171103923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.171576577 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.17152968 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.172128924 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.170048397 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.175519376 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.173181752 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.172392731 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.172213147 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171983019 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.173099486 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172535057 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.170694951 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1719743 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170785396 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.172167163 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173317572 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.174935729 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.172715139 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172035732 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.174694743 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.170208315 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.172270576 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172870513 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.170869871 seconds)
  done (took 36.259252373 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.192084583 seconds)
    (2/2) benchmarking "in"...
    done (took 1.192720736 seconds)
  done (took 3.478794523 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.172123949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175448581 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.174061572 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.17289873 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.171000051 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.17379476 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.174706006 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.170744904 seconds)
  done (took 10.478849968 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.173341592 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.1736549 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.175742141 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.175257843 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.176437924 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.173805818 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182602982 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.194883247 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.175967644 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.175357677 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.180747958 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.181668578 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.178008005 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.174172224 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.173583179 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.179718414 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.175840724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.178791062 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.177563178 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.176295899 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.178078553 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178613792 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177966442 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.173624802 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.178117695 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.186246904 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.200866815 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.178140898 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.17723481 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.180488976 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.176290176 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.175559725 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.178306671 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.178880856 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.178098512 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.179032293 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187716681 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.196453094 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.185602092 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.197303091 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179394057 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.1763311 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.179614989 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.178350545 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.180761505 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.180173089 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.180061314 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.177221901 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.17892188 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.182002972 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.180841179 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17820683 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.177368472 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182851516 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.181828685 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186253148 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.196971453 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.182511649 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.186523691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.189032442 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.209737811 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.200553411 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18118106 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.181087767 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189986227 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.198165324 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188058812 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.195493604 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.177454009 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.180150858 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.18706164 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.208781599 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.205277052 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.182378452 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181224118 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.18018055 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179706288 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182937014 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.187125783 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.201381928 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.183770613 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182645668 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190924148 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201155463 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.180393968 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.182094284 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.181867637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.183086245 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.182296965 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190782228 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.201024039 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.180414959 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.180736674 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.18214875 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.182654476 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.182794091 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.182670612 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182321808 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.179034727 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.183115682 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183631191 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186877466 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.189215774 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.183517868 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183042492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.187073531 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.202517942 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182217615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.188594826 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.184453356 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183428783 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.185625333 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.188239868 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.182290779 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18792711 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.189173108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.183436417 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.184883061 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.183366192 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.182572427 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.19009029 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.206260945 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.184856805 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.184450882 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.187080517 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.194882777 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.188001461 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.187698351 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.185509772 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.182655901 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.182817918 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.186986121 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.185109176 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.185594814 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185901348 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.185247029 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.183564072 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.185908088 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.18577708 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.187045981 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.187459036 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.18595683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.185588517 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.185636098 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.18495046 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.186503094 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.189722812 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.203503014 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.184631179 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.18646687 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.184291215 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187212836 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.186648924 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.187712008 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.184835424 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.187104121 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.184310643 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.186339793 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186780815 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.185751706 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185350001 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.18786 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188998624 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.186384069 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.188662641 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.184428195 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.181638838 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.18572692 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.185054499 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.18528084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.186018338 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.184398589 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.188784435 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.192316306 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.185407072 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.187184709 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.188094066 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187498134 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.186498242 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186452657 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.187982145 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.191928446 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.18673972 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.192719007 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.205228117 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188984751 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.186806216 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.186247297 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.187563631 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186456423 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.188349952 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.193186031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197263926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208988389 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.187426257 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.189857845 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.186608089 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.189543131 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.189743897 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.187240337 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.187096685 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188161544 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187397806 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187751992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.189307706 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.18898901 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.187949123 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.187895796 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.188622966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.190111487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189405522 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.189490012 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188535814 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.186077276 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189153046 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188692479 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.187635476 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.186170545 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.188256392 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.188062178 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.189699233 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.189414303 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.194367309 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.187303844 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.19046837 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189839724 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.189021133 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.187564608 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.189891014 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191348949 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.189319897 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.196150358 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.205968746 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.190018862 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196569639 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.205258528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.18941355 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.192276779 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.189931096 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.187404604 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.192097331 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.196652861 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.190188621 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.190200754 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.190425345 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190019949 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190622091 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.196943206 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.206520527 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.190493699 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.191183469 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.192236657 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.188313215 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.193175845 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.192023163 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.191148821 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193858312 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.193392469 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.192102082 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.192096053 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.193283763 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.192220846 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.193458923 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194211418 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.200154532 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.198406356 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.191433449 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.195063979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.195436076 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.19623381 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.192824775 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.193173441 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.193148668 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.203476887 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.215804862 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200773542 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.21103806 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.193770736 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.199787835 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.211547362 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.195420127 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19324752 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193932095 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.192861774 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.192796043 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.190785684 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193862003 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.193761094 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.195017207 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.193601047 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.197321201 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.193756255 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.193731759 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.195000148 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.193913367 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.194003408 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.193820918 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.193854276 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.195139479 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195867404 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.193863716 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.194407009 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202139273 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21220018 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.194390655 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.197384426 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.195704665 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.194331535 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.196057957 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.195377842 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.198522224 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.202485377 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.196750199 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.202054542 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.194594137 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.202613703 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.196268906 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.197466658 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.201914719 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.192149087 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.19343769 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.195696902 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.196681867 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202406845 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.212385994 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.196248293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.198125523 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.195145424 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.196672667 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.195856566 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.196531639 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195847601 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.197730511 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.202646897 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.213173198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.199546542 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199396264 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.193543233 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.1970313 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.197484786 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.195670251 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200105599 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.196088826 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.196755396 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.196606921 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.195883855 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.196992736 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.197756131 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.196564378 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.195372381 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.196312028 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.202841684 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.215115068 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.201032118 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.196475588 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.204448135 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216812263 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202979285 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.214631526 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.197676108 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.19684474 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.197838737 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.199187775 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197177829 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.197899061 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.196820148 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.197959901 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.200490306 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.198153664 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.199412103 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.198742626 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.197803136 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.196824229 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206360229 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.217590307 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.197992788 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20144934 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.194787 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.200339435 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.202297455 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.198908268 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.196881571 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.200877258 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207261552 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.205308881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.198470728 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.199954445 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.200699041 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19962553 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.198587856 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.199040286 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.198670093 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.198143688 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.19803629 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.200039099 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200532859 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.198939778 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.199670376 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199328612 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.200076889 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.20830987 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.219412161 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.199348541 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198282548 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.200012869 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.199660599 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.199439227 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.200566553 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200350241 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.201126125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.200595731 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205133044 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.204980683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.203764961 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.200348778 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.202072149 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.200369149 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.200925093 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20369306 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.200682688 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.201261148 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.201148832 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.200398526 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.199573624 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.200493071 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.202218026 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.20105232 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.200340735 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20469826 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.20634349 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20140114 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.198655707 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.202177437 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202609006 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.201435296 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.202322553 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.208713596 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.223448518 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.209840002 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.207512545 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.206554944 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.201651849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204015018 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.2097018 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.200747123 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.202375843 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.203952904 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.203548423 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.202229939 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.205567117 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203713969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.20939579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.221959755 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.202007199 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.210982717 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.220208842 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.203976574 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.204800057 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.206396841 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.20188514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.201169347 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.204328793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.203002222 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.210069187 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.221229955 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204320059 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204261582 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.202912117 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.205439158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208867176 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.205344834 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.205478865 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.202560356 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.204425364 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204721195 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.204703581 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.202879789 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.204824687 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.205400579 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.208235136 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.21023458 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.20355583 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207307304 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.203595435 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.205270823 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206328302 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.205561682 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.20269473 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.20320374 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.204880841 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206327573 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.205931464 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.207491093 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.204354563 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.206434032 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.205026559 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.206871899 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.20933107 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.213334249 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.21295286 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.204273444 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.206593893 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.206555545 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.208319255 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2077611 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.207542343 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206806359 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.209065411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.207536319 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208889031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.207649787 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.209450869 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221122245 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.225359778 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208028599 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.208289497 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.210637072 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.207043141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.204916392 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.208760383 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.208919426 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.210038901 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.215263003 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.209495904 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214583695 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224642569 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.209081227 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.211439838 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.21170821 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.214158993 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.210604979 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.209689509 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.209217618 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.212084393 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.223434202 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208565968 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216513533 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235323817 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.229266634 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.209729831 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.209189401 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208045843 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.211906585 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.210627313 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.210216798 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.209901259 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208794958 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.209771439 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.209001026 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216312682 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.210517543 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.21323027 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.210193312 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.20843851 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.210343788 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.20846023 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.209814516 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.209400126 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.210255051 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.210877056 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.209806369 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.202755519 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.215239844 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.230220236 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.204898745 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.205604445 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.201714455 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.207758808 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.20736313 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21408201 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.210993391 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.205654653 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.205465367 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.205559713 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204635724 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.203996091 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.204743589 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.204405927 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205111918 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.204380514 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.218047577 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229906825 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.210143991 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.203795739 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206602664 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.205481193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.20888838 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.208619462 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206143157 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.20643193 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.207054446 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.210118144 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.207125717 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.207503851 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.210202045 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.215933437 seconds)
  done (took 714.150537719 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.203940116 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205512565 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204950646 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204879581 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206785754 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205446353 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20610251 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206847648 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.204627705 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204710963 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.205182975 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204524688 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204983226 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205666896 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204683403 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.204942248 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205261646 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205603676 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.204318661 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205870268 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205644276 seconds)
  done (took 26.435150451 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.209643047 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.206635663 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206083789 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209643018 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206882799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208543406 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207040005 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211920822 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210272322 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206749869 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20920422 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208737099 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.206966892 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.205684863 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208098037 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209174669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.208867843 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206920948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.209727347 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208763325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209103823 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207014124 seconds)
  done (took 27.710001958 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.212389964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.210997657 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.207665966 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.206841742 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.20887062 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.205652971 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.209316543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.210962733 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.209320687 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.210026781 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.211144707 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.209509076 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.216500196 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.213660569 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.212549243 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.210058796 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.355376916 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.211581247 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.211937892 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.212406338 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.207107018 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.218219173 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.231053192 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.209317912 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.208914302 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.211571301 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.211073747 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.212867475 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.212688765 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.213096161 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.218147902 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.211017766 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.213272125 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.213646005 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.21158015 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.214753263 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.21541549 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.213671609 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.209753334 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.214150638 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.220823513 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.229006022 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.21287438 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.219871313 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.230837741 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.213211472 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.216071875 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.219333988 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.211608419 seconds)
  done (took 60.732333759 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212589195 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.214983468 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.210833328 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.21344165 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.213820712 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.214360148 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.214511851 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.215048074 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.210698733 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.210632322 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.213706373 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.209705818 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.212100236 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.21499447 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.21589401 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212482491 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211553389 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211540675 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.213594338 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.210943738 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.212855814 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.215821568 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.214765891 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.212532073 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214842959 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.213781282 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.212229297 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.216475139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.213049117 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.212285001 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.216192199 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213469545 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.215595073 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.215432094 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212397576 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.21771837 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.215678226 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.212195257 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.216039535 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.210927744 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.217237341 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.213669679 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.215279282 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.215824115 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211649491 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.214468057 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212277954 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.214438053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.212173544 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.214019147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.216168805 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.216449051 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.218122588 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.214222477 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.217119969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.21493671 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.214826196 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.215743675 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.214792668 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.213497447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.215938255 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.218585693 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.215347408 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.216465015 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.21507294 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.212837106 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.21343789 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.216896006 seconds)
  done (took 83.693703502 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216443435 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.216727799 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216790682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217409324 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217477473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215955805 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218543022 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.216269652 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.219965182 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.218588839 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217069233 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.217351272 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.217760697 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218726932 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217685593 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218510958 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.219492092 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218299731 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.218721936 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21893798 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.218408044 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219420295 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.21863026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216800373 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.219982823 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.219391218 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218220477 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.219754999 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219293079 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.219445116 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221184607 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.220303592 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.219168455 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.219451162 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.220926923 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.218452519 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218453314 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219316603 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.220151694 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218324328 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.219476546 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21949198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220019079 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.220670696 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219720591 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219647583 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.219909539 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.219052787 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.220148716 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219878014 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.221592611 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221432288 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220745764 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219606071 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.219194422 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.219868283 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221154734 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221604853 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219578839 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.221659605 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219658656 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.221264246 seconds)
  done (took 76.726918608 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221980985 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220298112 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.217683593 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.218226546 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22000928 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218377741 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221205312 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.219498216 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22035368 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.221468244 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221663347 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217071583 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219377731 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220850033 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221246231 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219607287 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218015789 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219628489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224538674 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220084771 seconds)
  done (took 25.541369237 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.219811603 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.22249524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.220217956 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222122076 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.222306802 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219685453 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.223920296 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22068993 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22413188 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223240365 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223310383 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225212763 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223107769 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224715371 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223993446 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220749557 seconds)
  done (took 20.700524742 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.222837157 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.222158342 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.224147724 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.223667348 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.221111295 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.21987266 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.226810179 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.220912768 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.22027932 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.225904212 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.224283793 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.224433937 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.225438912 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.223816906 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.222241573 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.223585832 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.220957685 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.221071803 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.225759876 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.227134589 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.223414239 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.224970621 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.226234696 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.2259478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.223845431 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.223998724 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.223226586 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.220269865 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.224015553 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.22752854 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.225562819 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.224916834 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.223612338 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.225474337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.226316174 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.225386045 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.227480018 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.226578596 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.226743699 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.225676336 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.227889341 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.224683953 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.227706743 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.228192198 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.226853664 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.228218806 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.224993016 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.226242728 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.22429185 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.224655137 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.228170544 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.228879655 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.227164354 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.227754961 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.226443002 seconds)
  done (took 68.509930023 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232044758 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228242051 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227720458 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226930534 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229111258 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.22566594 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22914369 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.225058608 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227659105 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229800316 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225655655 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.229877649 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225626201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229071954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228728106 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231492141 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228131505 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227930117 seconds)
  done (took 23.253907763 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228334751 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228107646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.232249412 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228452551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.228302889 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231006323 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229727074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.229773488 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230268063 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229903221 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224978176 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.229666433 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235470412 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.235502358 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230462316 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22808876 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.23414527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236039943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231463063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2294939 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233281789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230467097 seconds)
  done (took 28.222571349 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.230729973 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.231468242 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.235081492 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.249251536 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.25163858 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.250851065 seconds)
  done (took 8.59168701 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238730611 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228810362 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.232933161 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232945457 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234608597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23251359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232145517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230624958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233557909 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232048084 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231241973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231934441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233206375 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231036745 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236479358 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234020303 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231010584 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233365678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230742722 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238119469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23200231 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236670261 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233588789 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230585647 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228487962 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232152324 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239141645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23398097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234548771 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236620343 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234201826 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229383954 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235707364 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232196786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233610495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23579996 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232512794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237944444 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233480559 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236139756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.233748381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236946373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233709638 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232381975 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233301835 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230370436 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233373628 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231101156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236161418 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236257427 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236215238 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233936189 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238717095 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237264021 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236402801 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234624206 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233922164 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233688884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234469056 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232713546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23374307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237953918 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235235445 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232525329 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237605482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2317627 seconds)
  done (took 82.608095787 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232567543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.233743571 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231730811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236477125 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233021648 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233110669 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23432537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23329931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234082313 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234175408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236928294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231967729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234900807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23176384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234572182 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235475355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236366034 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235368077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234080187 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240112339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23584737 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235354827 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234711643 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233503237 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234815086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237126741 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231940866 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234202281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23432177 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23190713 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232702498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234541248 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234316377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.233752684 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23334776 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232851149 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233324336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233136767 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23457482 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236913865 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231875092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236148431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235016304 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234069187 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233794741 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23694576 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236598774 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235185382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234779962 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234723786 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235704887 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233873185 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23434397 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232853349 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235738753 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234407829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235825293 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235472449 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235677351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239210279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233675047 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234254545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2389389 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237409943 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233831763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235032861 seconds)
  done (took 82.642279049 seconds)
done (took 1665.080272776 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.398182563 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.352989308 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.238360653 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.238058759 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.235992206 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.261162648 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.250015461 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236723982 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.239446865 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.236755049 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.236655954 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.424588516 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.293058882 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.235429475 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.236511029 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.332785271 seconds)
  done (took 41.605990683 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.264253509 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.251176605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.345450929 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.259828747 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.264554351 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.414902665 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.296334879 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.247960745 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.398927228 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.281793187 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.672851634 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.266856092 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.247534598 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.262468567 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.258250571 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.418275803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.476138745 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.677674255 seconds)
  done (took 28.461820973 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.655295002 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.274338403 seconds)
  done (took 9.085654088 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.261057328 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.245679266 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.242033567 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.242777286 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.236334672 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.232969416 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.241390138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.235554623 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.56482522 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.363856092 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.243881371 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.251449339 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.260419028 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.243761193 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.240656684 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.275641565 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.406644746 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.243714966 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.237671506 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.251566815 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.242479683 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.32367309 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.282702602 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.240401269 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.358859025 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.5648523 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.250487652 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.250172046 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.390277399 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.240401549 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.243089432 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.240876157 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.243819327 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.835292824 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.757252326 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.259616135 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.267075086 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.256161621 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.240920285 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.384296536 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.244119451 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.249361456 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.236977351 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.751232907 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.369055727 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.354457226 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.385735911 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.262465077 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.245247764 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.304321371 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.244009445 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.24537409 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.272194985 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.974008836 seconds)
  done (took 105.706488523 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.277339157 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.62875327 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.404871914 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.260615916 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.936577082 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.911936383 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.255202467 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.499928412 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.270984188 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238310268 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.519111755 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.718897893 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.261780714 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.266365879 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.295703204 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314827312 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237885423 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.974762144 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.255098179 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.238167837 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725154789 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24518041 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.238928835 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.57028536 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.274781455 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.66763841 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.511613778 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.533693093 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.254248273 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.239119575 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.677996693 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.263686599 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.291627708 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.240606641 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.488710654 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.57065036 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566343586 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.256287471 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.243313304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.242965179 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.274564341 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.665008744 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576042093 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.259538941 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.261020063 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.670564886 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.260408234 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.246550338 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.242897759 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.441590645 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.956106727 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.241604888 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.51070972 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.245557649 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.519785699 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.275995257 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.300316787 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.697910492 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256484321 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.226163034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305386338 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.242753948 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.250672968 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.244592604 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.249765099 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.567054694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.61712226 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.248916724 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.564412162 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.693565035 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.260256828 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.738957628 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.103777162 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.253147541 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.295484942 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.244794203 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.787976873 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.709407634 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.28043744 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.242712621 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.551426953 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.264993076 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.516962445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.265232793 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.242209852 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.749472656 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.250029233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.263108029 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.244101686 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.259766321 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.921365375 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.251012242 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.4989336 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.303122815 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.2421076 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.243739424 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.251467537 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.25545251 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.250341435 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.246537433 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.738015111 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.277054709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.343379298 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.264129798 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245418572 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.249188676 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.246717167 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.244833335 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.45613589 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.753231071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.27390871 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.246557548 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.246197339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.248062702 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.26358724 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.245629684 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.528528842 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.264972306 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244427647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.245806881 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.944006143 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.288387739 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245140293 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.248501547 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.116035561 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.45529821 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.26175797 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.264033485 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.24493257 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.262849449 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.400344412 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268051803 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.289725921 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.244540737 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926691785 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287332241 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.268711009 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.626442119 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.253708903 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.01868519 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.276277458 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.247701604 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.523157544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.502811443 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.52857752 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.247273191 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.263119554 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931969579 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.303996918 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.382264514 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266040665 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.286125023 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.443110388 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.379753792 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.249080629 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.852382912 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.249003288 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453845087 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.252700234 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.552150989 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.706500729 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.263930629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.248307501 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923320907 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.962172735 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.928714184 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.245890807 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.516023929 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.202983202 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.728160589 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.246039855 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.251968604 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.69032411 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.254227925 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.250622649 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.247902666 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.247747324 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398407446 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.418661354 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.497362695 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.250469523 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.671752648 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297274923 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248791152 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.252576865 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.251155333 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.596535887 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.337760416 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.254090416 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.301695175 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.251190859 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.250467033 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.697447511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.134784563 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.255500412 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.39931984 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85344401 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.264844891 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.249841492 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.890696943 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.630189849 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.734225726 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.291325758 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.533444724 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.266458564 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.286739409 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.830111001 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282573901 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.69757583 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268278248 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.250449774 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8139399 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.266944663 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.309968799 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.249379297 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.250968437 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751798845 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267800539 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.249473692 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.376498319 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267455874 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499354397 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.25541394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.285848241 seconds)
  done (took 1088.728085466 seconds)
done (took 1274.745368804 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.254693932 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.249881489 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.231193272 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.255869081 seconds)
  done (took 26.164757593 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.261575609 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.258512988 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.25852779 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.257299139 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.259070756 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.256682098 seconds)
  done (took 8.721600882 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.651732063 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.250808766 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.258148322 seconds)
  done (took 19.334008463 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448447408 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.457658333 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.565536538 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.27423759 seconds)
  done (took 9.916025431 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.259957466 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.258165261 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.258888083 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.261503608 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.262478321 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.26311852 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.260013303 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.259502931 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.262853197 seconds)
  done (took 12.522064197 seconds)
done (took 77.830113464 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.232296245 seconds)
    (2/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.356827746 seconds)
    (3/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.450657777 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.238427143 seconds)
    (5/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.506827013 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.513687209 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 6.272983032 seconds)
    (8/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.065537385 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.311178446 seconds)
    (10/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.333438434 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.277590837 seconds)
    (12/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.248685312 seconds)
    (13/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.582979503 seconds)
    (14/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.278575985 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.466406862 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.232357752 seconds)
    (17/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.255459472 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.649328651 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.688099347 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.266736217 seconds)
    (21/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.233380243 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.046401715 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 6.251653714 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.967796713 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.35507702 seconds)
    (26/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.276736176 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.269000382 seconds)
    (28/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.601666641 seconds)
    (29/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.328329673 seconds)
    (30/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.271171063 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.545823083 seconds)
    (32/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.280872906 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.28383167 seconds)
    (34/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.336772219 seconds)
    (35/286) benchmarking ("sort", BigInt, false)...
    done (took 6.254607652 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.232912624 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.464706787 seconds)
    (38/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.016527854 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.240344089 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.425127977 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.33609099 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.234251548 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.51635274 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.400228756 seconds)
    (45/286) benchmarking ("sort", BigInt, true)...
    done (took 6.252324842 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.881464462 seconds)
    (47/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.380194307 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.31104451 seconds)
    (49/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.234059832 seconds)
    (50/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.521669985 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.235410152 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.284345424 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.223433409 seconds)
    (54/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.280665762 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.945136811 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.264705048 seconds)
    (57/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.589480559 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.265762401 seconds)
    (59/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.600466349 seconds)
    (60/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.235569233 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.410324615 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.440982933 seconds)
    (63/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.282145086 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.255924017 seconds)
    (65/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.341285676 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.087159058 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.540015668 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 5.444551813 seconds)
    (69/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.713847667 seconds)
    (70/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.727814954 seconds)
    (71/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.0255753 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.281720572 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.090917701 seconds)
    (74/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.402611657 seconds)
    (75/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.282339575 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.302742263 seconds)
    (77/286) benchmarking ("sort", Float32, false)...
    done (took 5.24405298 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.272815382 seconds)
    (79/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.240026905 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.902330873 seconds)
    (81/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.126507743 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.133689198 seconds)
    (83/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.471630102 seconds)
    (84/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.256350326 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.084420759 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.72862407 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.331034147 seconds)
    (88/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.382476263 seconds)
    (89/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.257224377 seconds)
    (90/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.295809405 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.6837519 seconds)
    (92/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.266273229 seconds)
    (93/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.358963055 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.342287099 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.373674614 seconds)
    (96/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.364505983 seconds)
    (97/286) benchmarking ("sort", Bool, false)...
    done (took 1.770600852 seconds)
    (98/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.750267884 seconds)
    (99/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.28699754 seconds)
    (100/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.713012887 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.307928078 seconds)
    (102/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.248173845 seconds)
    (103/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.536110135 seconds)
    (104/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.260616135 seconds)
    (105/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.470236014 seconds)
    (106/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.305831522 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.433915395 seconds)
    (108/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.339734512 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.342572449 seconds)
    (110/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.968859281 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.138616081 seconds)
    (112/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.266498111 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.522194817 seconds)
    (114/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.366052049 seconds)
    (115/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.244284596 seconds)
    (116/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.444078426 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.040746553 seconds)
    (118/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.361264962 seconds)
    (119/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.259266369 seconds)
    (120/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.278378076 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.25872836 seconds)
    (122/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.482891439 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.153370701 seconds)
    (124/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.261791747 seconds)
    (125/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.596943408 seconds)
    (126/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.036611108 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.247826588 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.268085623 seconds)
    (129/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.720682193 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.979288227 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.285866907 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.356657257 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.276545852 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.263884978 seconds)
    (135/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.346824237 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.279670185 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.247813147 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.613114275 seconds)
    (139/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.618473043 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.888599891 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.972051476 seconds)
    (142/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.438653379 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.282942535 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.666264612 seconds)
    (145/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.895594469 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.654445337 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.276623599 seconds)
    (148/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.355100145 seconds)
    (149/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.490474098 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.074459401 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.622645338 seconds)
    (152/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.264486578 seconds)
    (153/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.241645873 seconds)
    (154/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.255757341 seconds)
    (155/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.242812546 seconds)
    (156/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.658937852 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.258048408 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.58645971 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.512911409 seconds)
    (160/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.261884543 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.836990376 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.421622847 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.840950614 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.279219723 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.4069538 seconds)
    (166/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.444523884 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.279827795 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.246761235 seconds)
    (169/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.3898467 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.2449029 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.304086446 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.328468484 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.264497433 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.312851845 seconds)
    (175/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.244390814 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.633681311 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.601662201 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.251349024 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.260369 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.44320336 seconds)
    (181/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.695384401 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.244741071 seconds)
    (183/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.290753484 seconds)
    (184/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.468852506 seconds)
    (185/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.290708906 seconds)
    (186/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.243375009 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.295435251 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 5.350497205 seconds)
    (189/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.267166122 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.337836933 seconds)
    (191/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.843508717 seconds)
    (192/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.319823359 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.976296903 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.916135723 seconds)
    (195/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.279372399 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.264906573 seconds)
    (197/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.041609795 seconds)
    (198/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.616111741 seconds)
    (199/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.246465708 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.297153567 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.90383759 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.466417183 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.667867134 seconds)
    (204/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.290900944 seconds)
    (205/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.019122027 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.258993995 seconds)
    (207/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.287401541 seconds)
    (208/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.331077907 seconds)
    (209/286) benchmarking ("sort", Float64, false)...
    done (took 5.513317281 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.288060405 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.245647446 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.31430797 seconds)
    (213/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.349749672 seconds)
    (214/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.837662174 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.145512815 seconds)
    (216/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.98977871 seconds)
    (217/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.975886723 seconds)
    (218/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.770197253 seconds)
    (219/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.274407693 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.374545823 seconds)
    (221/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.246585783 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.243698116 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.806310934 seconds)
    (224/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.494725344 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.570975417 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.254176699 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.551712599 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.067713178 seconds)
    (229/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.292318479 seconds)
    (230/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.391276477 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.247423704 seconds)
    (232/286) benchmarking ("sort", Int8, false)...
    done (took 4.318256519 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.268878773 seconds)
    (234/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.03986368 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.61491308 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.492505714 seconds)
    (237/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.390600403 seconds)
    (238/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.366014037 seconds)
    (239/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.050322427 seconds)
    (240/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.334670683 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.294991343 seconds)
    (242/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.238241969 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.099732277 seconds)
    (244/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.373178545 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.65920139 seconds)
    (246/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.216752421 seconds)
    (247/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.070866878 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.366192202 seconds)
    (249/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.295664188 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.696768133 seconds)
    (251/286) benchmarking ("sort", Int8, true)...
    done (took 6.291614377 seconds)
    (252/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.468404882 seconds)
    (253/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.296111959 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.334208497 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.853370749 seconds)
    (256/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.295986702 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.600067801 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.250355862 seconds)
    (259/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.334879468 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.361491451 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.446125433 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.359072053 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.881481563 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.385463983 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.185971135 seconds)
    (266/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.657689144 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.094148725 seconds)
    (268/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.251596076 seconds)
    (269/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.302834786 seconds)
    (270/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.062235677 seconds)
    (271/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.257202577 seconds)
    (272/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.969625744 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.329667229 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.673671065 seconds)
    (275/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.756342928 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.834354953 seconds)
    (277/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.608028907 seconds)
    (278/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.331955583 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.259741734 seconds)
    (280/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.862794278 seconds)
    (281/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.286525545 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.312913557 seconds)
    (283/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.358896704 seconds)
    (284/286) benchmarking ("sort", Float32, true)...
    done (took 6.27258018 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.25355097 seconds)
    (286/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.759470074 seconds)
  done (took 912.518200412 seconds)
done (took 913.690805193 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.305296817 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300985195 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.282488799 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.30592938 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.395249173 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.309027658 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.296271814 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.285045825 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.331807693 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.333924689 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.282534581 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.307454602 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285823312 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.282530371 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.283843405 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29812073 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.270812889 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.28504318 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.302033984 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.296806108 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.30121173 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.284574949 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.334775749 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.309870487 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.290099266 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.289548402 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.288111141 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.30319261 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.395396265 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.288613663 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289696661 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.297360887 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.270837377 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.285157295 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.28072777 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.305701781 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.298127897 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.295736632 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.292760952 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.317665764 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.662689418 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.30995918 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.28705489 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.285409983 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.288525651 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.293032836 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.288925196 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.294262005 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301971754 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301937601 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.666983045 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.322545016 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.288072391 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.288096849 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.29854114 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286875087 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.289804626 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304239997 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.307427187 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303130978 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.257875712 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.293475277 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.290797556 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.302960938 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.295227751 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.707819932 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.307545708 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.296006761 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.664395771 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.31803064 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.7082717 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.320559292 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.290342022 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.302786949 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.319096746 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.273536536 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.283289903 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.285879942 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.297014236 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.288279856 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.297669076 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303065654 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.294591663 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.289071102 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304755128 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.314911339 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.297685219 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.289649467 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.297600078 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.307626902 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.297974789 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.301440657 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.294384493 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.28459561 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.29918749 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.293539737 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.293997072 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.293909939 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.295304905 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301073228 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.663788807 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333061297 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.286128054 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.287610884 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.288635486 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.302852057 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.662166603 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.312663305 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.312232695 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.33797338 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.291297053 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.261812981 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.295555128 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307723856 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.301466982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.294283635 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.287367097 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.261372704 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.666970575 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.329423934 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.293912248 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.289339221 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307588331 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.292981676 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.287932495 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278021742 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.292686676 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307035296 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.413102437 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.301359028 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.322049394 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.28931469 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.296113605 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.318312257 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309365478 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.323360859 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.294966387 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308598999 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.307345516 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.290384567 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.303644891 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.302935063 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.295038201 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299621182 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.288376237 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.317382979 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305509626 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305847563 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.312668436 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.412608678 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.291268141 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.263071745 seconds)
done (took 217.896504257 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.355484743 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.286302751 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.381406653 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.289650382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.392420581 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.392735926 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.286101328 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.287486781 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.287399278 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.66790447 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.289129547 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.288103987 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.282324278 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.287170787 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.376127744 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.289361974 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.286782814 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.62849716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.291061175 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.362917827 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.291981873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.286923123 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.289359021 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.66919764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.285464472 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.284166063 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.364452578 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.290691563 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.634027408 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.28391103 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.287446491 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.635788676 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.382970421 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.309052311 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.300338216 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.297910379 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.393064669 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.30798921 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.3746034 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.375394674 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.383197799 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.329482858 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.285186745 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.290987562 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.292855983 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.292418631 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.288531715 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.318413729 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.285739331 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.289523972 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.631267699 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.301154475 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.291158168 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.291254554 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.290562392 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.322037668 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.290075126 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.292888883 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.384956235 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.292633093 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.359033096 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.698678559 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.671714445 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.293735154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.29026788 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.292261342 seconds)
  done (took 145.610224403 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.359095211 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.363190314 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.403158305 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.30923219 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.342724788 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.406660886 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.308645938 seconds)
  done (took 10.695485976 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299127388 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295997689 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34237406 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34201844 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.294564191 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.471460558 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294582155 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.30485517 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.290650737 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.344384132 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.296450146 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.296259926 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.300426808 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.29499641 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34582381 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.305243759 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.412259643 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.294421102 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.296001818 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.444110399 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.292027179 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.300559521 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.3465251 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.306139178 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.297061542 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.300971658 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.105104115 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295926691 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293332242 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.294525455 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292269193 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.372574339 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296539865 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.29406855 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292341696 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410836112 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.297792344 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29381068 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.295892374 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.293598201 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.295984529 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.297133031 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.298088254 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.295368145 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.29602131 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.319027575 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.297538682 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.29704128 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.296718848 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.297359484 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.346809695 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297389677 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.295278065 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.294340938 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.351720535 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.302863503 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.298112256 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.29651647 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299666427 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.293432096 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.447141234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.344658075 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.296132734 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347220462 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.29675742 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.299264318 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.297297508 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.298136538 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350989314 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.298108639 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346290455 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.295022585 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.484669767 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.321550771 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.299808263 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.299326734 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.300192598 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299724513 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.293975302 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.305168123 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.295818604 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.300144649 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.303662368 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295696048 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29574164 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466923292 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408057715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.296348652 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.30998907 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.306323464 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.297648268 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.351311827 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300314791 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.296984223 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350369541 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.4176123 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352251804 seconds)
  done (took 149.976324864 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.301986788 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.305625417 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.301990896 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.316456977 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.29851907 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.300915161 seconds)
  done (took 9.036016122 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.301625626 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.301056265 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.301043735 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.299749493 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.300929255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.300319955 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.30135591 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301294041 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304491671 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.300791007 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.301622732 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.302222189 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.302425638 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.301579894 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.301939122 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.300233067 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.300132186 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.298280644 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.300941322 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301243694 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.395563294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.301373271 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.30205602 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.302133237 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.305848658 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.300817941 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.309788171 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.302308132 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.303120195 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.310098174 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.320587245 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.302715961 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.302141304 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.306570454 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.307115496 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.301946514 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305844913 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.303729511 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.299373995 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.301677377 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.304379209 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302198936 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.302183959 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303728676 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.30590306 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.306706011 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.309129149 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310829791 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.303679981 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.304087086 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.304427162 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.30318057 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.303664663 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.30487673 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.304297453 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322579122 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.308418438 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.304028815 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.304830606 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.303213118 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.305162203 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.305160431 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304720267 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.309371398 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.311368854 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.305158882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.305449595 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.308868405 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304245741 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.303947808 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.306921499 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.300198301 seconds)
  done (took 96.207969097 seconds)
done (took 412.725848236 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.577608623 seconds)
  done (took 7.790719278 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.461306593 seconds)
  done (took 7.682595698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.99784098 seconds)
  done (took 21.22067535 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.298685618 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.423183322 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.312405102 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.303000436 seconds)
  done (took 26.555460453 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.482884994 seconds)
  done (took 7.697684161 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.310656777 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.301989019 seconds)
  done (took 13.83022472 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.878710323 seconds)
  done (took 8.093319055 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.720843935 seconds)
  done (took 7.945494585 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.323257165 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.314987806 seconds)
  done (took 14.111576625 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.28231808 seconds)
  done (took 7.499600607 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.581176801 seconds)
  done (took 11.806731995 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.313545013 seconds)
  done (took 7.538353783 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.340860841 seconds)
  done (took 7.556405426 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.020155083 seconds)
  done (took 9.236695272 seconds)
done (took 159.779776415 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.300529545 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.305083585 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.299673654 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.301729918 seconds)
  done (took 26.425670999 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.342542923 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.341919017 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.343571099 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.353110539 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.346192921 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.34283035 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.333681279 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.336373691 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.353071258 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.346729641 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.34521472 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.345112205 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.342752099 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.336137647 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.34427249 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.34411147 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.355061583 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.344190543 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.336214386 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.347467692 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.311254298 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.354303475 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.346876057 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.311594459 seconds)
  done (took 33.429363592 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.829534351 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.381210527 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.465809042 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.363267215 seconds)
  done (took 7.257392051 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.36181496 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.364141919 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.376570361 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.414538589 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.441972235 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.373953777 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.337416011 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.331883604 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.318684639 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.364081664 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.440641274 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.381404773 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.447504562 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.311342629 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.498839496 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.31057916 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.311942797 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.363433354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.414896283 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430738159 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.311488723 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.362771384 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.36710373 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.38009156 seconds)
  done (took 34.23816862 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.310684455 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.330694966 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.310360129 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.309996829 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319449888 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.310655235 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.311209585 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.312362681 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.31099546 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.319372736 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.310264289 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.324506675 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.310306291 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.310516605 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.318188431 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.312650828 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.318391118 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.312228966 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.312616397 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.318393816 seconds)
  done (took 27.51481031 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.304929018 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.160636111 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.65793546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.561441238 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.305991426 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.313003975 seconds)
  done (took 27.526256142 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.379130805 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.531115911 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.319493219 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.653388803 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.752571591 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.337896008 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.313484166 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.544229573 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.850355607 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.847185079 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.36979354 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.386387945 seconds)
  done (took 19.512383995 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.308020502 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.313619456 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.32570472 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329855838 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.364943659 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.338808232 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.320625153 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.307446651 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.373331934 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.3922381 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.339568813 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.367181091 seconds)
  done (took 37.306996593 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396595911 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355577999 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 5.735151105 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359570531 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034162227 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521130332 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.338021823 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045561535 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.340081107 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583564337 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323691599 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404825253 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565416091 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322963299 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317702964 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.237589146 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560426264 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773825384 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311378172 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311353112 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340366103 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309632788 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327908149 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521254638 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543276313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.288151447 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.698094564 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.092859831 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583765511 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331015257 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321993937 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310784184 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584600462 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949732578 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432226578 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515577396 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330713974 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857371432 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.305539567 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 6.337321851 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320650325 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320566502 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322846231 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310279793 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245762961 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32442255 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032728284 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.343788616 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.024555774 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311449374 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559824372 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415171671 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.316553962 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302629327 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321630185 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.324705563 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.317015474 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402665287 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905131758 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311706041 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33241395 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.253560282 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31321984 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329395872 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920017825 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.335839413 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.316446607 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317190192 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248589663 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328367596 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335996201 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460744129 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.337992293 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962239868 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977292034 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34420797 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250616254 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838403284 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323813143 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.254849043 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540818482 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091089891 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249806386 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.255799679 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.247901988 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 4.544700898 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327727251 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 6.165090454 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341282664 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046654108 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.546261933 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356009483 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339187788 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537458921 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.195061544 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316504828 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.325483343 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450919991 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33818804 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031260093 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275743643 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.319335563 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573512301 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.527207247 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317479008 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.251804905 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809552838 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34949923 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.342817207 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31975162 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529495736 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.903752089 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348728299 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332189512 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342129024 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.095675502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 5.722281347 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329940598 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.329299757 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.319642736 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568983055 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.050558203 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.219794443 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38529728 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3267295 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318936795 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331420102 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.17584924 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.219905199 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.507510067 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345001063 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.352626705 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.320302581 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268469458 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.327940241 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336904571 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.102988525 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542253774 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323556996 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601465654 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253548331 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468380869 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.329346179 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.54235412 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.477940411 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.348721639 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578059872 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326238773 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340142421 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338788683 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339235367 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42028149 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34167275 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.332396077 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583008076 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.325757904 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.325117805 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321528351 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.107778273 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326462158 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.325839424 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323082463 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890587083 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314552566 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321439165 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211932723 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.334976186 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389940235 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327989965 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527536463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.108158399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347909139 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.350970063 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.322389204 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551675632 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331752664 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 6.323713205 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409473681 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.787924345 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910599681 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351448173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.257333595 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.036118576 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.016099385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323533316 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.511042072 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325682574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527964333 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360749054 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332488954 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895783836 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341802033 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330092926 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333684518 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335421463 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.33037887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323870669 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.061385562 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357977662 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345476552 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.342661459 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46820402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.339360219 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.258359683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.841603159 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330758686 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324368077 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.099598446 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359557093 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.325647586 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120440794 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603516372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343420185 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582056039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33286055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.345850385 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.32414552 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325902051 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333470553 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.337254147 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355664624 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.336170571 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334671519 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.769505296 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8948427 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019824609 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853366364 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635420206 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.358209556 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214868552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.048207124 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285665374 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.983468304 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516641738 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068824316 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295082813 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797741915 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.519858182 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09670945 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577215407 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561812995 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619792148 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.358360666 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58578863 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544969963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36293328 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336388195 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263637021 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.619998914 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883332592 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353801286 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411764065 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053499725 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364066404 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110478481 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.336972893 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 5.461941032 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728179838 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897675149 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713879806 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330844025 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334093548 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119430062 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347783381 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853936249 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932415721 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347680186 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.806292743 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290821869 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535775479 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.366478017 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.325704049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.588851329 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.346314947 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.591414072 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58053042 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272429781 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33230543 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850435603 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.200475502 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.336006923 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330586723 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 4.625427123 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34036213 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614320585 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.350766036 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.063809673 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35946582 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265598759 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266468923 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.024743598 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336964192 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305096059 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799657599 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.356955302 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344924574 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359506523 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18340292 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586309693 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.344730237 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900154418 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571928822 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345314335 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353787048 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.336097497 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331272639 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.318170986 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214276017 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568355817 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404802442 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562407936 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 5.711493106 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.241775923 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414390423 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554589353 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.245242909 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34242619 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579959313 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.070580851 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.775770567 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016778396 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378688948 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34706824 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355381374 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339195619 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356713399 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425162229 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545002087 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.372937906 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348095076 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729911392 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362767479 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366018758 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.353090329 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431201565 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343175889 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.072149491 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.135008637 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908027707 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061935458 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928425634 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606763092 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346234397 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339867914 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272314755 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485822571 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862863034 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611907018 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468197665 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.343532023 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385501563 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343854787 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346758014 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559908898 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613062309 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.209549905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350388052 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004545241 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.220075787 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349227493 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.549315135 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810024636 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878934156 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457972113 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344129262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070939101 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637562693 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.430855696 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340435244 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928778332 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.341941084 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 5.476959436 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.352491738 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35611033 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494208044 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590673821 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995084315 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.376795096 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.496406902 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.114213698 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341087984 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60366567 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.78100591 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551120233 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939104689 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044151273 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604093547 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412536127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551246094 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.468394894 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488395955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.344788436 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.222696098 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341496942 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187453655 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.053782807 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.351226847 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917269835 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620910001 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.345817541 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.345926691 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365968123 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.351916555 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56575052 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 4.611454272 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571623246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352822287 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3487189 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.912055539 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919443284 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611341542 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286353028 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.347129203 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57917471 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604644251 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368573443 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.796554793 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.055175547 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881371304 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.315944505 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366012027 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355636744 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038442508 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917436683 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.119755754 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8300748 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.00241697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345204263 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625735007 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.348637397 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359928114 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628049145 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.348323756 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344244264 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566844006 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.932027759 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11738208 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.357783216 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365809943 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.287609979 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.569833798 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381241371 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2888417 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348642287 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.745220174 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371141927 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473784646 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3567644 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.352337898 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357770365 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.08847919 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616680289 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.351329524 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.339726732 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.338952419 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366835457 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441641468 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901762813 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367173796 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.019835384 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.69700816 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599283679 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347873954 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.333646809 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.34822178 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345558368 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.062615758 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315200692 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.345621937 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883468628 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.350311542 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.362081389 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349022779 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.56069706 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557510182 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356963627 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565498985 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369016549 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366308743 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.248865319 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.112966955 seconds)
  done (took 1690.709908709 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347142924 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.38596575 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374225679 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.422171206 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.389938728 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425092151 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.420311935 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439760737 seconds)
  done (took 52.462980709 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.349835281 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.505924231 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.375561641 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.348778677 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.363341271 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.352322082 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.798034955 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.363233953 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.372604829 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.356893421 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.361154999 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.352115735 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.987849143 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.360375104 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.351990023 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.332705363 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.362888114 seconds)
  done (took 65.562271744 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.283783678 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.607087803 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.988836537 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.425192016 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.395737979 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.347718561 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.83246154 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.362963819 seconds)
  done (took 58.505399513 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.363872104 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.365189155 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.364230173 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.365624911 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.365988476 seconds)
  done (took 8.087849631 seconds)
done (took 2089.762574741 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.352541114 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.355822498 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.352714234 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.355471987 seconds)
  done (took 6.678328276 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.329831842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.06831157 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.338357695 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.348858701 seconds)
  done (took 18.349886841 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.356495289 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.377967217 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.018234893 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.960801505 seconds)
  done (took 5.243191738 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.100649207 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.114692092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.098890551 seconds)
  done (took 7.57963841 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.355906598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.355630191 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.356387068 seconds)
  done (took 20.335289308 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.639044801 seconds)
  done (took 2.905245856 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.506724681 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.546072571 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.670080964 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.675182995 seconds)
  done (took 7.664733978 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.749772928 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.736717449 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.550020961 seconds)
  done (took 6.303265226 seconds)
done (took 89.057536588 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.076833711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.601061924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.556548444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.048706557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.575994224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.560103867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.57161415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.016946593 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.55718369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.545679914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.046250068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.575960067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.517663099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.597248293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.515686079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.600491832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.576061715 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.121146158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.725977758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.931249551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.567234862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.686961708 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.873412237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.755313386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.579589106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.507482224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.264878628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.357249614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.905213319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.293263919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.510157103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.10340758 seconds)
  done (took 191.989122204 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358139529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.351879302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.371829359 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.367587052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.36875373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.3620379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.369712381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.373023912 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.352805725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353829257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.371408487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.351816768 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.355151963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.367134149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.367242805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.372404462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.354375939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.353681811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352168938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.356454489 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.356475068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.353599066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.364767019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.356586344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.354113196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.351533388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.370528514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.369060677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.368555177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.373760572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.354421753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.370916982 seconds)
  done (took 204.843179046 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.367089173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.356937588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.351061826 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.351809821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.356677965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.370407016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.357203525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.356705898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.371075105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.356343907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355951461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361993725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.356640881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.356505569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.355923722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.358310377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.368558672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.356835414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.381760351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.354916383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.356206827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.353345651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.375211852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352028399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.367460511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.357922863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.366390887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.358268459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375302718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.354870644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.359422063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.354359323 seconds)
  done (took 204.802289096 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.55169317 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.365870755 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.366788202 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.300278605 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.368476635 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.363648559 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.356929851 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56140824 seconds)
  done (took 14.503953165 seconds)
done (took 617.406806754 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.617865782 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.351862712 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.568466288 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.39346928 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.111791751 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.401890553 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.384867654 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.551423403 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.28314107 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.552138358 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576449573 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.401535601 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.718156118 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.384488721 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.640698175 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.487650931 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.277403588 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.398285235 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.703417428 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.865436836 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.646315169 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.857424316 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.571958384 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.276781783 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.748608685 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.859512019 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.105632322 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.268754206 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.409474001 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.70014502 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.941762972 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.351146824 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.448083127 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.440922969 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.504673042 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.487138055 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.330463626 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.447775222 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.581286384 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.638966814 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.88896463 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.1066218 seconds)
  done (took 92.556534062 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.35436123 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.352973185 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.350271391 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.352738056 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.352150147 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.349365677 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.353610343 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.345944779 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.351667854 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.351832664 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.352445843 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.352217375 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.349567678 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.354323933 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.350633011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.346310316 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.351928741 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.352842681 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.352334304 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.348325423 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.35342696 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.348812766 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.348826001 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.352556405 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.355373954 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.35400036 seconds)
  done (took 36.416018735 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.372363972 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.62163979 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.774926898 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.383335414 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.371073758 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.373635298 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.442230885 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.374134629 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.37369087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.37242109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.543538242 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.36967092 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.406417823 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.80273235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380723733 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.369531094 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.369987007 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.366392212 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.631616525 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383960098 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.465533785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.376817003 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.448374648 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387158348 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.396807987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369503451 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.375540872 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.941595845 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.399066142 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.539980136 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.138464043 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.446093364 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.876352988 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.807079855 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138430416 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.378310782 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.373297743 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.544573417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.373718411 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.37194561 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.447653805 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.376363428 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.782632769 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.026428789 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.393843803 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.373564157 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.954606343 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.563378721 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.608493387 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387916405 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.806157911 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381587214 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.375813443 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.373544923 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.609401381 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.380133002 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.3738586 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.931004762 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.397339069 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.447577624 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.379958596 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.370966632 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.629662941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371037823 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.626870562 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.374729762 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.378335875 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.392118101 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.78446752 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380634325 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.05032881 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390662744 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.374055732 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.543938568 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.622094216 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989462583 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397090104 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.635318891 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.889610499 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.472914217 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.379504794 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.927958177 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.473392698 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380819655 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.373108493 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.37930698 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.371556756 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.430116732 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.449301487 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.985780152 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.058716702 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.952080157 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.469477697 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.388212379 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.375532874 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.930799462 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39512025 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.377519529 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778745532 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047023551 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.393377932 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.381658418 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.050468189 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.393682596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.453060088 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.38070408 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.787253431 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380581365 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.42598714 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.376488152 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.382582083 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.395781444 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.453370486 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384218898 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.375528665 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.016570955 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.569591731 seconds)
  done (took 181.084375255 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.371010181 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.369639573 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.368972238 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.370518294 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.369870225 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.377478092 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.369672212 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.370194218 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.376292908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.369943625 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.369446244 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.374395697 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.372612425 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.375797871 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.381225469 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.376377889 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.979755288 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.37155295 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.372301286 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.386173214 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.160616328 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.379273673 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.369564611 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.370349167 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.368503813 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.372795015 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.371994864 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.374204043 seconds)
  done (took 153.120370958 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.379301508 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.926181745 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.40760174 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.505251993 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.397371613 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.37580132 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.502353803 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442745703 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.403810945 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.376879311 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.375786795 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.671015485 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.383862878 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.881179353 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.571489728 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.527491098 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.887958641 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.403194555 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.376179928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.374366672 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.506887503 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.381672294 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.668965516 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.924136457 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399645014 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.922827756 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362777953 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.379489899 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.376196995 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923612498 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.395414555 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.671129592 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.45349505 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.436979453 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.944473108 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.893672225 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.895212328 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.521761962 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.379659482 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.376002728 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.376497025 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.361660708 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.926104321 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.399899466 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.379367629 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.915137975 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.398824601 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.381422263 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.386109924 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.377898637 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436787143 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.456809287 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.693908524 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.932986147 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.470290526 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.39980659 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.506796474 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.749410299 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.38404917 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.880350077 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.370735495 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.93208748 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398811481 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.363190561 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.379464138 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.384053758 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.525621689 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.516772334 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.88455409 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.404873588 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.885528908 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.553979623 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.383076237 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.380634817 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.382720105 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.931426781 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.904575882 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.552249157 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.515489509 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.570086773 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.373236522 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.381821684 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.365746467 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.4559723 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.381832384 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.933515266 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.906578447 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.410618913 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.38355213 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.383195571 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.382546224 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.553376401 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.952697189 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.476954098 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.869942826 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.702677675 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.680258418 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.38368377 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.439707187 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.399886089 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.678861923 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.386103596 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.438861288 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.815965647 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.678703421 seconds)
  done (took 164.124094318 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.614897287 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.535885081 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.477406251 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.524717755 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.973315821 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.939167393 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.669788357 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520383316 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.492488928 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.63442036 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.51847478 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.475524905 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.598149891 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.459341738 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.126451163 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.469256168 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492354477 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.545439889 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.545074914 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.376760337 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.055410075 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.669630337 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.563413549 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.224565278 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.478791685 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.150307838 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.945375841 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.952022826 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.560134451 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.662214946 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.901025572 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.485605776 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.333535629 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.073264451 seconds)
  done (took 66.336108315 seconds)
done (took 694.91173166 seconds)
SAVING RESULT...
DONE!
