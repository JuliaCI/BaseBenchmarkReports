cset: moving following pidspec: 25025
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234477432 seconds)
loading group "string"... done (took 0.462820812 seconds)
loading group "linalg"... done (took 7.623081364 seconds)
loading group "parallel"... done (took 0.174026341 seconds)
loading group "find"... done (took 1.191312149 seconds)
loading group "tuple"... done (took 2.130320631 seconds)
loading group "dates"... done (took 1.34213993 seconds)
loading group "micro"... done (took 0.24860861 seconds)
loading group "io"... done (took 0.665515271 seconds)
loading group "scalar"... done (took 42.209718651 seconds)
loading group "sparse"... done (took 13.142845404 seconds)
loading group "broadcast"... done (took 1.16826703 seconds)
loading group "union"... done (took 14.45058007 seconds)
loading group "simd"... done (took 4.850174229 seconds)
loading group "random"... done (took 9.705459926 seconds)
loading group "problem"... done (took 2.03022103 seconds)
loading group "array"... done (took 22.482990638 seconds)
loading group "misc"... done (took 1.418986548 seconds)
loading group "sort"... done (took 3.586502567 seconds)
loading group "collection"... done (took 19.433471085 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515629751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137738099 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131935686 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146726466 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203024889 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142426545 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156007887 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11373976 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.962015086 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182978233 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153351392 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513405492 seconds)
done (took 5.118861321 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226532571 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096416583 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104005279 seconds)
  done (took 0.880285504 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077774779 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150135042 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094270741 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077794719 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094728383 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076775574 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094539568 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078140798 seconds)
  done (took 1.354372076 seconds)
done (took 3.236330605 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732123081 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279121241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20177136 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46176989 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194182761 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213106668 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666572575 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342702935 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253753826 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099735943 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143332438 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387769129 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136167805 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676293268 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089597041 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122789714 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176643949 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448562407 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082333635 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110296551 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116142136 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142136316 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127941935 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090322761 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184459322 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084595835 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192487423 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107722052 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080337293 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289039926 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200704278 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684172793 seconds)
  done (took 10.849892557 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112643167 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132615506 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09734495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138114589 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133449641 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09899297 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083602413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096690728 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120585627 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174064269 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114782832 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135780302 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094661038 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082065197 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114839978 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243861181 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120968531 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103338959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100623854 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103544388 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120793348 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112971977 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108586767 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093257987 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166304562 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220430247 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110204124 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12498918 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096170774 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11126727 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144390565 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143218501 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095458436 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079922362 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172579602 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124543519 seconds)
  done (took 5.130052864 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18757752 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119273539 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167615777 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163391001 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139771163 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15907548 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111920303 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153263358 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247873015 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107066438 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164767635 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140709771 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116455611 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080668861 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098327872 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095128175 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674714595 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123774228 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154333477 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116264959 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102621572 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083400779 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364820434 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103835164 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079886131 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098722427 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065282406 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158611727 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099733176 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141467313 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120370258 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086029771 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134430886 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20816231 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108772973 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133820364 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096138794 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078587946 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177500254 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104478151 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079971908 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121391397 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079244845 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135853573 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133162781 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09783372 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095834315 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204494584 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079216408 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114273801 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938950085 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181184427 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104859816 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097363092 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32319552 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097202735 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097199452 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076954704 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259636077 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18395187 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097167991 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079553329 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096026245 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080656752 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397766205 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08028935 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.709271334 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084047876 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108536893 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084505809 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099691666 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106807992 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090040243 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11551741 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079725908 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09959563 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079975071 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097478935 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081058847 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108398944 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101064445 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079976513 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163544675 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08079499 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113560325 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126204448 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082775918 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094464191 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129694743 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082263587 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096629362 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132514707 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080550082 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094609328 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0765606 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109158906 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0985957 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142365585 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080101544 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169559337 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080484073 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128373957 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098883232 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113258925 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111889241 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098205479 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08388185 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095886406 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07712678 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164400554 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078908072 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09713563 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081336921 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110392668 seconds)
  done (took 22.531559083 seconds)
done (took 39.199549725 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327949135 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103348601 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102152077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101947521 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100286219 seconds)
  done (took 1.499971796 seconds)
done (took 2.23693922 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289364215 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171965851 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094892195 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166087807 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093958156 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173636137 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159287707 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111710461 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217798759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077147351 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163953024 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093526859 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076171677 seconds)
  done (took 2.654555583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096979811 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115626119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082402351 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110214772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076238427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110981534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091529815 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116512017 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10911755 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084468095 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093140236 seconds)
  done (took 1.81703198 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096009865 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116090229 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082300744 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109019801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075677709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110339927 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092335949 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115194788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109050596 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085067299 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092890135 seconds)
  done (took 1.812226908 seconds)
done (took 7.005716702 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092756139 seconds)
  done (took 0.820711736 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925882364 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.93549257 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113698278 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150544161 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299674157 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192045043 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476267219 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12585178 seconds)
  done (took 11.161554112 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.117336079 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115588309 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10018597 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083953602 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10302028 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085749114 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099413196 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09922862 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085264443 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100774954 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082431884 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099437191 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098505427 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085552201 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101458049 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085290088 seconds)
  done (took 2.334320519 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121993389 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119137648 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107220251 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107959639 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086623179 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104231305 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106875778 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087677077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101952352 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103802405 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090466422 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104893172 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103378988 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079476648 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105598684 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107847697 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086291635 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106672257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106399802 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09054176 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10591984 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094864975 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086552337 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105642713 seconds)
  done (took 3.260203616 seconds)
done (took 18.308780082 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16268174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108317793 seconds)
  done (took 1.0094814 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096489339 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112671235 seconds)
  done (took 0.949777088 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099839888 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095788382 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121960683 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109264561 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079903621 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096032192 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118650086 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07966245 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096767329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080319756 seconds)
  done (took 1.720547797 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083330508 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109414926 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101190097 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094044091 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104567559 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094216697 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087492236 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097998085 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108968585 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076662336 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101937371 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114557823 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085601192 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115361541 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104037298 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08280236 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101245893 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099311792 seconds)
  done (took 2.505528964 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080661391 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096378685 seconds)
  done (took 0.920072714 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082902628 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095736537 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080718591 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096765905 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094252267 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076445366 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095572067 seconds)
  done (took 1.367169393 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.476442728 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136714001 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252190705 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084360461 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119724284 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303458734 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097353102 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085047056 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102448459 seconds)
  done (took 2.457751484 seconds)
done (took 11.67210332 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093485854 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11751159 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112314337 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46388077 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10719904 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096648977 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159470306 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251055023 seconds)
done (took 2.142882107 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14977487 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327267171 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113026209 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066961794 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094855999 seconds)
  done (took 1.346587704 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081873525 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101661117 seconds)
  done (took 0.929870181 seconds)
done (took 3.169929239 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082333214 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098445867 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077985775 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096651894 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077176019 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094531183 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.113770034 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097365415 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079639944 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.097827035 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097180275 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080021637 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094318042 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077367178 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096199492 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07764064 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094344894 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077128991 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09420025 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079400395 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093640838 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079818946 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093620959 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077433096 seconds)
  done (took 2.913634896 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101663192 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09845828 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102069499 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084861122 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100926909 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086120059 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101585341 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097677607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086059499 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098682263 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100595014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083655564 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098638594 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08406362 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098491382 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10110147 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084962614 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097581553 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08263712 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101108072 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101987063 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08110061 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101271478 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102052039 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084189964 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099831192 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082753861 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097038427 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102808467 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084448061 seconds)
  done (took 3.580697268 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08563938 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09410853 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077811297 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101812038 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077915957 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096621506 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077489624 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095330275 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079076776 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094368381 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079532631 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094110291 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078566934 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096085684 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079471065 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097948939 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107106092 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078769426 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094286397 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078201441 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097774565 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077817714 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094704998 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077180584 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094063854 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077904171 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094799138 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077365995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096011986 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078175675 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097769264 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081108159 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094915058 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0848903 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098828328 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077761515 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098573085 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094929948 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078868657 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094282559 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077307316 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094330119 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07703555 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101488795 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078646131 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096839365 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078757197 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097392454 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078402429 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098514625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077571166 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094487358 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079265296 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096674166 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098925499 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077130932 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095449708 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077257762 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096592209 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077973814 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093966397 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077471192 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097241033 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07953038 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110338437 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084733335 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094515678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079454872 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095935198 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080686416 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09645856 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109221076 seconds)
  done (took 7.136171508 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085469339 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107146112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080076641 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096559835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076672042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0954302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098848118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078025272 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097434929 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085680289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095680057 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080064863 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097206318 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106982641 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078959766 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096521808 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084836388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093154638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079126111 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098628342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07883492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098561506 seconds)
  done (took 2.747699707 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209047016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104977227 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142188608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107542669 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083777558 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105468844 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101639419 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087359369 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102768237 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083362749 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100197044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102727185 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083002559 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101201805 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100206778 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084244428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101799137 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084584224 seconds)
  done (took 2.650875244 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095029703 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099086582 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102085271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098136145 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099670234 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083397415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104443899 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10749662 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083318668 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098480188 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091555538 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100037765 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100151728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08060658 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100534616 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081128966 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100773281 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081454865 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10689492 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104417399 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104707144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090729693 seconds)
  done (took 2.877354704 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098061535 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100226653 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116990847 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084510656 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094243855 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07979514 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105664733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081148702 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106477275 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099634729 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081013054 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097156677 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089152886 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097529583 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103266825 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081759427 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100929914 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081422594 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100341309 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076875615 seconds)
  done (took 2.642712608 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103561527 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099719715 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100084809 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090736641 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100064464 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082620019 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107908819 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099775492 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082279737 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123713376 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099908384 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082545101 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109333227 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105211383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099420768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092039515 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108457394 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108822766 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083404404 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099521092 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125691547 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082477969 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109209723 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100088613 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.193612204 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099164821 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099585753 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0879034 seconds)
  done (took 3.643213435 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081848979 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098708696 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078356625 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096656273 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078374272 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096710586 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079064828 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095534468 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08123222 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096036645 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081310475 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098884982 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081082712 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09863065 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080856705 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098183836 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083235247 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09651082 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078322199 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095455432 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080599783 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098403362 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08087363 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096379097 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078833775 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098405467 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079266588 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096170603 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080693645 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095249502 seconds)
  done (took 3.423298418 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091733184 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106676993 seconds)
  done (took 0.96462251 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080082188 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115397417 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078547417 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102135155 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086366068 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099847774 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106964207 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085686553 seconds)
  done (took 1.519079702 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096631874 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110272136 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082778913 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112351781 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110479639 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095621746 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159922952 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100663289 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08732974 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097582441 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112494526 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079926721 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104960007 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081742607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105060559 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087865544 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098480722 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087002869 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101573927 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097190396 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084233678 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110600866 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084831415 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09626836 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083316929 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110290734 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109657907 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08324406 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102567747 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108227836 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087888091 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093289641 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081579182 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100939056 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079834237 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107884494 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111656274 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08468819 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108507134 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083206252 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110544264 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094273148 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08672278 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105955328 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092095621 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100093863 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082686155 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094329799 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097157644 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084465138 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094746719 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081647304 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093906144 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0897331 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103412191 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112667377 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081202489 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101152899 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085059443 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102931744 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089492943 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101486087 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084274759 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099865423 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106488999 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08658182 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106924447 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07731698 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093720477 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079748611 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107950364 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122016501 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090629727 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100854624 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083166975 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097599039 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102459644 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084157747 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10681424 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09011124 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10001659 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107000977 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089682603 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100048844 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085150567 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107407014 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098751162 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084561955 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098446439 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096798501 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098380318 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080520337 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09758333 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108920888 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085534155 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099969811 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079581398 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107704862 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079196446 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101317391 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083178033 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10063812 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108563217 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088418681 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106012629 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10757862 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089838793 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099838532 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084722411 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096475648 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083725062 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101717298 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10659 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075868225 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102736813 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08497033 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100677013 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089678076 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098303951 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082264222 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107841596 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107545053 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080682772 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096194296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085843132 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100695356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085955957 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107043099 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098063773 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076927113 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094951821 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086232124 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09967584 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086744287 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105917068 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103350738 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077051404 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098105924 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088113708 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107379282 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100886716 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082170844 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104805546 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082619251 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099272839 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087999955 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102813267 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081522921 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104239284 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10254336 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077212829 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104249552 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085371898 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099180595 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085971826 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103726526 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103115432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08308442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098553851 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088613602 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101559521 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081321611 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10032658 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097961912 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091243297 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102364114 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078520462 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097492881 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090427278 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098757606 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081704386 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099657853 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102878916 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082454657 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09859036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082160637 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101818577 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112298511 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086719696 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102103108 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088324831 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110263812 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082385348 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102915254 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100477321 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083583002 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101731075 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089594821 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106660489 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105716813 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084560935 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097129962 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088396263 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108132925 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081494787 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09838462 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081484989 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104428793 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107008866 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085881623 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102042391 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080538985 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100853917 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104232952 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085108179 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100516917 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081534228 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106024053 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082274141 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107616805 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101377272 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09120598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103862683 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077715752 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103472233 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098183889 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088336875 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095852041 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080741161 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099260688 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084196798 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099659667 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08567288 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094287191 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089712835 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108908262 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100330863 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08235927 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100869377 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092162868 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101993477 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08659254 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10426555 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105832415 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095617826 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099431918 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085575101 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109834472 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101365417 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076648642 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105961549 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081622525 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100142887 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081675656 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099291956 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085351083 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110398192 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105794148 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077329221 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103925236 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081708809 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100333337 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07901807 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107272475 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104580525 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084624066 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10945882 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08421417 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101993605 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104219429 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082343813 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101502693 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084498939 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104068706 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08396085 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103700757 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081677041 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104260105 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100191168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08040035 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102721279 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08377559 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101260645 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089052499 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102853995 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082781611 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104213898 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102604703 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08370158 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101433904 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082436093 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105172175 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084116894 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101647066 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085225673 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096491854 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108398891 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082621343 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109203336 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083173823 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097688483 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08829444 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104284771 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106824473 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083593687 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102524397 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084082947 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100812231 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085747332 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109876299 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098735186 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092295454 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106913344 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083603601 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10444649 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082535626 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102845251 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100602814 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084292791 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102592872 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08268657 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101246207 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088093782 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103977592 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083126159 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103272509 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102084773 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083172924 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102705504 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077739052 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100361927 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081910516 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102257817 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090191773 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101923286 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104349817 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082100267 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102667846 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081885985 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097583038 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090508912 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111037732 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102408335 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091186379 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101300295 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08392983 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110803809 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095938148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081307465 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099375515 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080877374 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109394466 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084317914 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110027363 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101247132 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083078251 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099119166 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084003535 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09988757 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0777707 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100687314 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085983236 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103546327 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081789107 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101558181 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104220586 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084628675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109159475 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081992306 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102989889 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083423736 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098940199 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081913228 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100369805 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103792282 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084974971 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099384071 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080881555 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101419565 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085229762 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110091736 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082699755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103594668 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089825119 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101322676 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104207959 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087318864 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096524897 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086449714 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101528521 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083553259 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100583834 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105119647 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087105705 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103065755 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090478251 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101390442 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084524345 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102819471 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099517553 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083240612 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101202975 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083633318 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101523753 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084818027 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110154452 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080579174 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103974578 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101101743 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083721977 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106580477 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084212716 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103562279 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110061753 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086300575 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103312596 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089075477 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106199284 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087322244 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103063658 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10277187 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089359904 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100611413 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091388866 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102629974 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084923511 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103656359 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080947445 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10175284 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101207194 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082083801 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106463774 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084822767 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102051157 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08207562 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099799043 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085161081 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105436342 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109271156 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08620536 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104914826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079133616 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098957048 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084686178 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099822834 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084303607 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105210306 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108619999 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086009614 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102384578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081877918 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109736644 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108418623 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088111026 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100093276 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089121349 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103939867 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086574797 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103485809 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083769557 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104204862 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108225982 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084928769 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10200111 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091745791 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105687369 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085263329 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103943786 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102238282 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084090244 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097672641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085045814 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104917599 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089443964 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105055263 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102322319 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092924227 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10122438 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083333484 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105425707 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083410411 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108314707 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097106917 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08475032 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103330861 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085469257 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098097805 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082943518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100309258 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086040278 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101486959 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078464148 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111481527 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109343337 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086207324 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101661896 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082409728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097171042 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079161903 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102134524 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103488258 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085461773 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110809077 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083111435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101710711 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078632057 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102568346 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086601113 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105566252 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098584518 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079528742 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100387147 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085293946 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109206327 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082794102 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101647117 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086870367 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105312767 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080762899 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106502939 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098491932 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087305847 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112952823 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084427788 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102884444 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107646129 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091777803 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103371836 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079153983 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103488494 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086000026 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103315944 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103283888 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085390387 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11647594 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086226207 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102273351 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081840932 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105135236 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101864924 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090847461 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104008915 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084931641 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107233969 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085580635 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112411988 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104247185 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089578334 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10522129 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08551321 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101257799 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102061484 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082920199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100785385 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084960702 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104025064 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089246271 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110925556 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101943478 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09337886 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110614374 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088720448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098957416 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082555922 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101841843 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078289088 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103734009 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100521661 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081635603 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100372543 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082595744 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102737059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089763337 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105463118 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085100441 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104556772 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097074856 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085415503 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10490194 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085496094 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099573458 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085033077 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104092646 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090133099 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110887834 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103281247 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08513457 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104140845 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085031706 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098919439 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090294574 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102289854 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086783222 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102723069 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084112613 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104149748 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105725964 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089320295 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104791835 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086079025 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116502325 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105351415 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081214458 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099258707 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089881243 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100676022 seconds)
  done (took 57.63417505 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146685007 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080842467 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098714949 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07888495 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112980937 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098982787 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079202775 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098932125 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08082811 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102278241 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078945832 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098691491 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108442354 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123836732 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092648579 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103834665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097285299 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080409578 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097572539 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08122236 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10875731 seconds)
  done (took 2.86287786 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105032006 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116932208 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114832449 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118896766 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089693138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114517713 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114009058 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114877512 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098625818 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110314993 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119059595 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114951425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091523168 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110928613 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110986796 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093582033 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118182238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108634268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116081203 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095109453 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112769104 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114159125 seconds)
  done (took 3.21728998 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084908722 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102082232 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085482317 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097310593 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082775078 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097782446 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08752454 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100231666 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087109033 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101593401 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081704875 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101908807 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103859286 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079189514 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101743745 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08097999 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152964379 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107111337 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083054342 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104315821 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098180497 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086536531 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09767315 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079227735 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100813834 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088025385 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103542454 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081291407 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103463917 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082911517 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102946413 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080742473 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105059328 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103157344 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083115872 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101579666 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08331547 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102053191 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079376372 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101220911 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083930605 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098471818 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084601715 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104695229 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08096216 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102086808 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08465512 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103462975 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097801384 seconds)
  done (took 5.443319427 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106308137 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160211564 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08539785 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142018006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121219082 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112675936 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0882708 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142771628 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102985437 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082745439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123191447 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12043476 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103422196 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09031844 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111214736 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103666026 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086949122 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102666004 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108328486 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083952071 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108691903 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090418264 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11921777 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118464608 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108756276 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083086216 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103958696 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109154902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097471494 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109090173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109074442 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091222467 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120866255 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106288122 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083644429 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10693041 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121481627 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104253493 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087432871 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101879252 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086886981 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109462547 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110403495 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102224762 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105189401 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108958264 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084994666 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101252491 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117407691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087455843 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112986922 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120234969 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107743053 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085221613 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109236276 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119892463 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085021574 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102382475 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087444379 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116699128 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10149667 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088179237 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119508844 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105837877 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112314179 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099322957 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109449164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108631008 seconds)
  done (took 8.127591504 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096002782 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111271527 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120892796 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12097602 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091326614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11135839 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110564916 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09162558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111194933 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11678411 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111105998 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13521737 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08753838 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115875134 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111911621 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092319525 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111660171 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111255276 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091710106 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112646783 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111359454 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120346921 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092220916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122194054 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143049531 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105941274 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091503439 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111086677 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12052245 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110588698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123531929 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092360225 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11144543 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12022098 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123621882 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092295376 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104469855 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110230868 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091602527 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112180057 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105627763 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120534146 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092438034 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105881793 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111002476 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092080531 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121902932 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12393707 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115698787 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097009166 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112117245 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12138467 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110938791 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091917809 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120182603 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147299588 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121230684 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121321229 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111264905 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120237825 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101266425 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129014788 seconds)
  done (took 7.70197917 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111385802 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116020018 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118458007 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099856068 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083414541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108468378 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083755832 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102359163 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114379005 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095765693 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117235763 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108846102 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112349252 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098117253 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109427015 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111997553 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090050641 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110350969 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114164725 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108531619 seconds)
  done (took 2.949041548 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093945548 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124583192 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085126487 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112795184 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108178675 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091345213 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107554689 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107324849 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086157133 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107404027 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096287705 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116492534 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105894547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091726744 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11649081 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112459372 seconds)
  done (took 2.49270878 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097793541 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117635203 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120118145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085455388 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104208744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080319565 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105211207 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101194227 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080889499 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121469322 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084910157 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10904237 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104804937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083114711 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101817525 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088998462 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101664274 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082722304 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10577798 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121012 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096182237 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104376812 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105079154 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08728996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105285887 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090468708 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106600382 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10303845 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083419011 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105269587 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085851375 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113521856 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101884684 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084636485 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102984749 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083411435 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104679937 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085422315 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109207495 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105506726 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083913116 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106212655 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085436098 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106298731 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080572355 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106258167 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101075629 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091767791 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103267033 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085408696 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106167246 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106862939 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086297745 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116335749 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088068751 seconds)
  done (took 6.251902451 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099956281 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109636189 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080489341 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103923358 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088150728 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107740518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108882368 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088574552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107067732 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083683007 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107378743 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090134819 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107331503 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108878446 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087321813 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108705589 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080860783 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10715844 seconds)
  done (took 2.615443042 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09079321 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105097621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092461018 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105687394 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085353586 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108354744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080274195 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105338556 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103834603 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085228164 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104522136 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088314053 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104583557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088021003 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10541883 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084943519 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10804103 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103551194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086361422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101147082 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087882442 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103824645 seconds)
  done (took 2.966868656 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119100689 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125356199 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091938403 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230105188 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103819454 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132763122 seconds)
  done (took 1.641328075 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109476045 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121148504 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106461137 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107159158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115693676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107884758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087562856 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108202149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117578021 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10220552 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108674839 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118524235 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117862498 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097154075 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115573313 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11458492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107499637 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087511851 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105670691 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129348796 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088244525 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118882465 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108270193 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088017219 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107673133 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11819688 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117184532 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121833963 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08788163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118279594 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113827862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08740733 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118626327 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122073409 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1089436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098470844 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108261841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128855035 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114655121 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097380657 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109133727 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114354846 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098413579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11387662 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118428508 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108508027 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093608212 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10891867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107714323 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137165122 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093858468 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11812682 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115386925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11881807 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118078305 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135473725 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102430473 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118027686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115223916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122383183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117303586 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09419094 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117343897 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124082419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116164008 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117148813 seconds)
  done (took 8.154017964 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102993245 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125969658 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10878237 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12376091 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098134552 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108330382 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107636513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08889418 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109072677 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107274256 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152500636 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089168002 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119428473 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117985834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108910044 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088173032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108366208 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117530584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087004341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135909238 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108666259 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117802521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118192425 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097589654 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123119067 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115567989 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107764503 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088059927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108707025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107175287 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094006307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109892046 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118525503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086543813 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118133305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108692631 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087165418 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115095345 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109166878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114544662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097674221 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128939967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109267298 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108965894 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123059405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087967539 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108871105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086823744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109388732 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107575141 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122588965 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102765902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123530636 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119113241 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10873555 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088367036 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10918947 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10877082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089440151 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116030344 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118261026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109148325 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135721309 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088861251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109016099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118108412 seconds)
  done (took 8.041091597 seconds)
done (took 154.946833218 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098348554 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136349154 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09637171 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169598112 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106481933 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119696888 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138313317 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097853488 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1066453 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086271459 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106804129 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087707856 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171819607 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085883163 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107191256 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10801321 seconds)
  done (took 2.665770815 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199803185 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255667856 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103452199 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106659289 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088923823 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110957614 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104694021 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09114347 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110481629 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085567519 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108384424 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087157086 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106208723 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086304086 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110245298 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088292975 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106384056 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088189234 seconds)
  done (took 2.886847628 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11332697 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145878495 seconds)
  done (took 1.113664768 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11848668 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181007602 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318006714 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156340915 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107225525 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128244438 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156839142 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131206833 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197433045 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123313949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122513472 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097146186 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140531642 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115398772 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094143865 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119552951 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141653091 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092670511 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115975381 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115764785 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117248457 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106997804 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115419236 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093877137 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181605056 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120747097 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085445106 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107226961 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116273581 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095137719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113843153 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125674139 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099023251 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174821054 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103250324 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177593901 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097124985 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112512044 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114691204 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091258869 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119428109 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118893503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105522688 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118880143 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087924082 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119062476 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106283581 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086396334 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114636794 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098593647 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115538792 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114119398 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155614911 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118924402 seconds)
  done (took 7.551898225 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794780672 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164496226 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090625999 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888998139 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138963639 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104161318 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781081466 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134582155 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236056649 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762534677 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135197001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123316193 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229876705 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238935122 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955827004 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313551387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675166796 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102357997 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150901003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153679578 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120168101 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13772368 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131409271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431442769 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09638857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112599207 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117255768 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100847416 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15972571 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126689913 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114702372 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178970404 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271090154 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187387666 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11620453 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090469112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112136391 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170164945 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266874135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216712033 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18247987 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087206281 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11172871 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123170968 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111001689 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109197657 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164305877 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197576944 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173754136 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093587891 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122967574 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120410293 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121379008 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167473186 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121819889 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300557301 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312761195 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112470964 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121755893 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105676783 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263808508 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123261229 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22491947 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117784595 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213012047 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111604772 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757067903 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193248693 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090385499 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118206581 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120011937 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095632464 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122004416 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168761058 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409251224 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1246662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093036996 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112316088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20785571 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125896458 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111685844 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164199188 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11633243 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100186716 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126747829 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123488772 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17319113 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228177869 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124437817 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120903944 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094118507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126431152 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116836941 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212277129 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22160335 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163818971 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212824761 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123573499 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164842717 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19122091 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098058635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195868573 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097829955 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126924531 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123544915 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217281745 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146651084 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123420801 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095123064 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119831119 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150390424 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126974997 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098307023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192867298 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461691299 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168581556 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109987292 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12860996 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099272835 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183016883 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098140224 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262482705 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122040949 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170272432 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119778426 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088639431 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122037768 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16650004 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124193574 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122380208 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101835836 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119583987 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234694363 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220434314 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123945234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222579756 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184360318 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120285487 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172530577 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123425533 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169079346 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121507264 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122470084 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095439814 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773048123 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12569699 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099482673 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116570672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189402886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111732181 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102718763 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12567019 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109274494 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781263035 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128073931 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121762322 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103216187 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11999355 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122193887 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118040938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095263487 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162010009 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231238115 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123163007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120535068 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103009691 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183085228 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095608747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12662804 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126127843 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125919435 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100830146 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116235419 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124617817 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171647058 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163852042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223628298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.591100046 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091175965 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126189466 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231147681 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090025966 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289183736 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120010924 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227709431 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165767886 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122095234 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31027954 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166669212 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189149285 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127709366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177150871 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087288106 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119755899 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163846782 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113723914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117892328 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164063204 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126228844 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102883412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959279239 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112965981 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229223249 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109461687 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172044684 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117339473 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100477845 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299921593 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112329372 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107297994 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187276413 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093967531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125984615 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.870592122 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104351161 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124181248 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118745636 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223993872 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166120918 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120011188 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098577451 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122025656 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163252358 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211654139 seconds)
  done (took 44.376756706 seconds)
done (took 59.44415769 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280986603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215188154 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259656119 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169322111 seconds)
  done (took 1.878373012 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170254601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148654306 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120826374 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108190061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149779726 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085556137 seconds)
  done (took 1.658935947 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.354271739 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27202347 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240030955 seconds)
  done (took 1.749623815 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288644107 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252510914 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356923788 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421014874 seconds)
  done (took 2.319725204 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210345415 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133074277 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111595835 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104066305 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197725739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252010005 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141389166 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202399226 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122442896 seconds)
  done (took 2.404291588 seconds)
done (took 10.894978956 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.136073934 seconds)
    (2/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121587039 seconds)
    (3/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12059967 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099633792 seconds)
    (5/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.173077216 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.265162944 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118967275 seconds)
    (8/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.225474728 seconds)
    (9/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.205677446 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139259912 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.157410435 seconds)
    (12/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.262903111 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126840146 seconds)
    (14/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117114686 seconds)
    (15/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134907065 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121969623 seconds)
    (17/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149026655 seconds)
    (18/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230560856 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.217579027 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094983166 seconds)
    (21/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234960116 seconds)
    (22/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.238435706 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117236117 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.113574866 seconds)
    (25/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107489365 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.115326495 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.237835053 seconds)
    (28/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161171434 seconds)
    (29/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.17373488 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137065847 seconds)
    (31/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.170783104 seconds)
    (32/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122526622 seconds)
    (33/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.187611475 seconds)
    (34/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158305933 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.147378139 seconds)
    (36/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120089022 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.22468039 seconds)
    (38/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094295036 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174111599 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217354479 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117614246 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.190729011 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135032035 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.217927485 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093971541 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13553749 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183875374 seconds)
    (48/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.179840307 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111738342 seconds)
    (50/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181968825 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20922279 seconds)
    (52/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217326813 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.146922682 seconds)
    (54/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.181508758 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150961647 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082915666 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138095371 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116880463 seconds)
    (59/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.114632383 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133870825 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066715325 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117181603 seconds)
    (63/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.146407147 seconds)
    (64/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093593332 seconds)
    (65/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113124337 seconds)
    (66/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101315852 seconds)
    (67/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115913551 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173306431 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096586346 seconds)
    (70/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112121303 seconds)
    (71/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078122572 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204388557 seconds)
    (73/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.187434395 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095793003 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163506194 seconds)
    (76/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223107303 seconds)
    (77/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122925803 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067393661 seconds)
    (79/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117488746 seconds)
    (80/286) benchmarking ("sort", Int8, false)...
    done (took 0.187816586 seconds)
    (81/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096498021 seconds)
    (82/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134743055 seconds)
    (83/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089485905 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12247823 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171041929 seconds)
    (86/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149534908 seconds)
    (87/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114978418 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070245324 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091124935 seconds)
    (90/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093643989 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115154889 seconds)
    (92/286) benchmarking ("sort", Int64, false)...
    done (took 0.087642605 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118405135 seconds)
    (94/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.162887828 seconds)
    (95/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111960585 seconds)
    (96/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184333119 seconds)
    (97/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.167693214 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118434078 seconds)
    (99/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087637001 seconds)
    (100/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116336455 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121476993 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.143510515 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109532155 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110375526 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094710924 seconds)
    (106/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120899629 seconds)
    (107/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067166102 seconds)
    (108/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067102689 seconds)
    (109/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.169755978 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118884055 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.131386892 seconds)
    (112/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.174842871 seconds)
    (113/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12085289 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.113308311 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118491264 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067109252 seconds)
    (117/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099870359 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086298365 seconds)
    (119/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116610991 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.181061778 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095635084 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117068441 seconds)
    (123/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067475039 seconds)
    (124/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143309285 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093523463 seconds)
    (126/286) benchmarking ("sort", Float64, false)...
    done (took 0.171375852 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095420955 seconds)
    (128/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121085778 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.19127504 seconds)
    (130/286) benchmarking ("sort", Float64, true)...
    done (took 0.232939455 seconds)
    (131/286) benchmarking ("sort", Float32, true)...
    done (took 0.232849962 seconds)
    (132/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.119814641 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118852454 seconds)
    (134/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234842518 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110216854 seconds)
    (136/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067228525 seconds)
    (137/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067573831 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109682341 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095126947 seconds)
    (140/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118075186 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113063108 seconds)
    (142/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109501139 seconds)
    (143/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115249562 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096899238 seconds)
    (145/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067975725 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090113747 seconds)
    (147/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09484497 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091772267 seconds)
    (149/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.12929423 seconds)
    (150/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091136122 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092831235 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11086686 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.071244846 seconds)
    (154/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076102659 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109731056 seconds)
    (156/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173584284 seconds)
    (157/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146695975 seconds)
    (158/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164052437 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067233601 seconds)
    (160/286) benchmarking ("sort", Float32, false)...
    done (took 0.174162275 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110942778 seconds)
    (162/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090104436 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117568009 seconds)
    (164/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157494418 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116144632 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066995351 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110070866 seconds)
    (168/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.131625391 seconds)
    (169/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175095848 seconds)
    (170/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125169105 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.133952207 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124098175 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067448671 seconds)
    (174/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.151835349 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068311659 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125768327 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067982597 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116596471 seconds)
    (179/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092392483 seconds)
    (180/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.106290589 seconds)
    (181/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067590922 seconds)
    (182/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077826165 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109515563 seconds)
    (184/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.128023951 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118888309 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136579926 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067116496 seconds)
    (188/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067359395 seconds)
    (189/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11274522 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133464576 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08647023 seconds)
    (192/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124264146 seconds)
    (193/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083658554 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.224562322 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109424829 seconds)
    (196/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095487883 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172707077 seconds)
    (198/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148483589 seconds)
    (199/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.091120421 seconds)
    (200/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09727398 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124904102 seconds)
    (202/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067216462 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119898912 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094844379 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111084142 seconds)
    (206/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088349968 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110377706 seconds)
    (208/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121859233 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10525493 seconds)
    (210/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116474243 seconds)
    (211/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084814627 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066349848 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.31226273 seconds)
    (214/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086840226 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115149494 seconds)
    (216/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086720413 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108941708 seconds)
    (218/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06831342 seconds)
    (219/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.090797114 seconds)
    (220/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087991874 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.142868451 seconds)
    (222/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091378346 seconds)
    (223/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090778111 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087001685 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112501086 seconds)
    (226/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090282777 seconds)
    (227/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111600275 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07812198 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109827418 seconds)
    (230/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093706879 seconds)
    (231/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067179394 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139341791 seconds)
    (233/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099971242 seconds)
    (234/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066882479 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08685938 seconds)
    (236/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.100321456 seconds)
    (237/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068551503 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108700496 seconds)
    (239/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066821078 seconds)
    (240/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067917697 seconds)
    (241/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091784046 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086950956 seconds)
    (243/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135262443 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093205252 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090099543 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067633051 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.140660137 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08686495 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11856068 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085889834 seconds)
    (251/286) benchmarking ("sort", Int8, true)...
    done (took 0.222424214 seconds)
    (252/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099715547 seconds)
    (253/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087465585 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06713352 seconds)
    (255/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11976601 seconds)
    (256/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.068095243 seconds)
    (257/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112840563 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087422494 seconds)
    (259/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091287558 seconds)
    (260/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090935858 seconds)
    (261/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094252154 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086954596 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118904506 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086422295 seconds)
    (265/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090310702 seconds)
    (266/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067726912 seconds)
    (267/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136733781 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086589811 seconds)
    (269/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111167851 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067258213 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118713343 seconds)
    (272/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090147153 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114552469 seconds)
    (274/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091910218 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090511099 seconds)
    (276/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068688033 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087713305 seconds)
    (278/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092059068 seconds)
    (279/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187696449 seconds)
    (280/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068503607 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092234192 seconds)
    (282/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182209002 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109926162 seconds)
    (284/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066621922 seconds)
    (285/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110091143 seconds)
    (286/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067560374 seconds)
  done (took 36.087844898 seconds)
done (took 36.975736291 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104859834 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148493052 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096023417 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135490602 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123313253 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091357766 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118052904 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097799936 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123447501 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125441197 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099212789 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093332453 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097560481 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120540196 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097133237 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138733247 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124288944 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094266942 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119554219 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085450719 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119219709 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086073005 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111902718 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070164113 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121485888 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09396207 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116338811 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121208932 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086474357 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110458305 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092493732 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117424339 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086475227 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124161466 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093932267 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11892827 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097349227 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12164674 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112798495 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08674607 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118659671 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08707669 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118288859 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09504758 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116086392 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09247112 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119535321 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099608548 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140252571 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115709506 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095291646 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122598338 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095896837 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11807561 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091611074 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11932931 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091908037 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140683492 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120222446 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09213026 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118493861 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094972426 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116987953 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094963185 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118601633 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121709802 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098475885 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116326013 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09670036 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115868362 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087477002 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118697831 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089811222 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110565389 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096007125 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121959597 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085437606 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116204913 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117653321 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092110206 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11026087 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089477885 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11171575 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093732733 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113019871 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06978856 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114479694 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093451922 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110102902 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096039123 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116575175 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094220996 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113979157 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099798759 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111581536 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092624746 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111450758 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087389876 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113689918 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091261962 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111041718 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08982287 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120999564 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088668252 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117334249 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124099143 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087253569 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117509871 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087445184 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11070752 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102185577 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12163363 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087496548 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116435077 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085972945 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118542267 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086611504 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110471109 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087617035 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110972867 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116867086 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086991234 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114685183 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094698273 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125346633 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086980118 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114004929 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089976951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111117926 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093270555 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11139254 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087337898 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.1133365 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078788403 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113401066 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087325154 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118664627 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090530237 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120116944 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08901404 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.1206746 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09215601 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117530362 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093313273 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111347288 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075265381 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116504744 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089848482 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113139795 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088135978 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113442025 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087474889 seconds)
done (took 16.974182257 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091656222 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18377568 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151388118 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142155162 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107853642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.1126172 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122530204 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118578522 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113877259 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14302625 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110292134 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132368974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148135462 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086570107 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112837053 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091470364 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114313814 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102392639 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146272366 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133018851 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163803908 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087688407 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147938736 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134989363 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121719175 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11416971 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113241057 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092329363 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115659964 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103373776 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131980959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115492113 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088316315 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134402359 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105146972 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120158028 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087702976 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119466671 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087830526 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112479566 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141293416 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134214612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093003947 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117818335 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092606621 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11513954 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090260772 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121494469 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097887036 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116824882 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126614822 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156879509 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091965181 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122122594 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08716364 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123387143 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121859021 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090705909 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112171884 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090878447 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112387368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091796947 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127478152 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14206395 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091656804 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122034102 seconds)
  done (took 8.640505258 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108824447 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140190604 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106034617 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13113589 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112566143 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088141519 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113561907 seconds)
  done (took 1.755469261 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093478861 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135020252 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111853512 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136042737 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133418524 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112965008 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124218776 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090149219 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134311805 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089642807 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13523293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151797649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091370702 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121527749 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138559024 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089618205 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138227534 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089584204 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116875966 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112725237 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116992242 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135660373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09093932 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113598599 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103917952 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114819201 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162569821 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095078518 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114965936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092209677 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112004871 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152416971 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103329838 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125011087 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089286449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129811126 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128648097 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087327918 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126250306 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094701316 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127910317 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090484495 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115239246 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087905452 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119286484 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100019105 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11825124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115244933 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.109185304 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133563257 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091304669 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128325371 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089218424 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117700933 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091329309 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119705599 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099194885 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114837496 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134170785 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090645259 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131356645 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105824415 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127682521 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131396827 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092297257 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128146682 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103696417 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116467025 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091951244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117825749 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106829734 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112391968 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116462097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099930742 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116830112 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112936579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136853986 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091796393 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124949566 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114292974 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089464304 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114536385 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112815944 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118966432 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090186122 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117957898 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092708762 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113097408 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088478561 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118531541 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087524937 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115731494 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092909684 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114781121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093293915 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131238439 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115278528 seconds)
  done (took 11.875166071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094750545 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114960319 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091950215 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114562757 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09156391 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115615795 seconds)
  done (took 1.586909885 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122520867 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117741068 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104598819 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120993341 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157079636 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103681203 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130289239 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124214349 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108663944 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12693891 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130185305 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106304505 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135584271 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121528097 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104509907 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120871183 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104681193 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125917788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127361429 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097563531 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137346865 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121169388 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098035008 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132337714 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118400428 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095693283 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126482038 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10355837 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129643756 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124257648 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096250197 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118931162 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09686156 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123759833 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130205975 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095660591 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121340721 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120268087 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100879657 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118574642 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104531842 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121941733 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127219604 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094383964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124249812 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120780089 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094204065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126147418 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104420113 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119118283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119595831 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095193835 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121159451 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094790784 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123664267 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12719315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095234888 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12978943 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121404264 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096808105 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118729262 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094433571 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124707424 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118469043 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105372723 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119690086 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122280124 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097081985 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122967759 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096564703 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120019386 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093396081 seconds)
  done (took 9.264202643 seconds)
done (took 34.077166162 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694717801 seconds)
  done (took 1.662972887 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817821868 seconds)
  done (took 1.788847035 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.884396612 seconds)
  done (took 17.876271232 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498502963 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579199723 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994714238 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179653742 seconds)
  done (took 3.219802918 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954070499 seconds)
  done (took 1.935586526 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28784781 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234727366 seconds)
  done (took 1.491959954 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77746452 seconds)
  done (took 1.761513214 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.38273588 seconds)
  done (took 2.353620086 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331233369 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183517814 seconds)
  done (took 1.501669609 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551597555 seconds)
  done (took 1.533087587 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.657602386 seconds)
  done (took 11.642779041 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272765241 seconds)
  done (took 1.26650623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306414156 seconds)
  done (took 1.293280105 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.523392587 seconds)
  done (took 4.511731053 seconds)
done (took 54.821015612 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104820564 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127036168 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103202279 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124562702 seconds)
  done (took 1.443190002 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107071729 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12139636 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10105095 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121590842 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125834708 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096942391 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124026984 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10189643 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121001687 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096360987 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121406003 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11963656 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098916466 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123732558 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094250054 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124107006 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099616988 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122408585 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124602305 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097968544 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118930469 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09825458 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125055995 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094850117 seconds)
  done (took 3.671344826 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106493642 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119205668 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096413456 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119405597 seconds)
  done (took 1.436538065 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104954406 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132007894 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106707117 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12614012 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131975701 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10616663 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118123518 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092603173 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119663143 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099749625 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116093046 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139112496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106321379 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124385494 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102150867 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114681899 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091341549 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131429361 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124775856 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100887159 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118593295 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099824816 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115090977 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109251784 seconds)
  done (took 3.722095158 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176370121 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127393989 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139865754 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095535765 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15972223 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140994061 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088148211 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141740505 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088531665 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131459705 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119096683 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134496983 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130534403 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08840845 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114345457 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08806024 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129364442 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129267609 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091625431 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128273111 seconds)
  done (took 3.441865317 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104657859 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117856889 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089138478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116499298 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099580213 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121468573 seconds)
  done (took 1.645060042 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097022798 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115288792 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091005403 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115494708 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094980763 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115186854 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088799644 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115373677 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090459713 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11556465 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090770873 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114303699 seconds)
  done (took 2.240338605 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.512059571 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120271978 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120585142 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089028036 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122444651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089567354 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130656345 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092197117 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142174595 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089484947 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116161758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094888553 seconds)
  done (took 2.714887984 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243224016 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126417446 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285852928 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368838519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156181124 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166260149 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279799717 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161988784 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198489565 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150704895 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232119794 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19841592 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151936884 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192406363 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13811292 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1461215 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190527239 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252415998 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15254738 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212787647 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207914293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166917354 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180015694 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151803581 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112619051 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193861145 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096440769 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130189746 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234684468 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179884083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192461159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161299855 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147055731 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237728549 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250065672 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197087266 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280656202 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134224902 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166974718 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143343092 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266784552 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139297771 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234250078 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156737714 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105232349 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220786238 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166969453 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178312454 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14599547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139358915 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199173063 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242429146 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194354122 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138850786 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300424845 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148355697 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157717217 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190595644 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254177293 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227340921 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190008059 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121005719 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190045249 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19235887 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21287812 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.125827897 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210550306 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14832149 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18523848 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189919457 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166522503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206069133 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181402095 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140106431 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171023159 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174293225 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173759128 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259724114 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186444613 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122762291 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169265189 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148988796 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105222201 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193764211 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125639832 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216775636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14465639 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164593189 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20982068 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160142557 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162835398 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221470881 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185644323 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14960173 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084167855 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154706346 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156075682 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177066001 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14028615 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159780292 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157684932 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130371633 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169389571 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097794143 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185255305 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118980731 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17485586 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185075396 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128092474 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161981603 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154153978 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150224228 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178642942 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200084799 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141325809 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132930042 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21193302 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180197672 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142030415 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177718815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229377019 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117887681 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149761811 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22791765 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218720324 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141327162 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229099459 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126474599 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135366538 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133923955 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182041769 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157280335 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162720091 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132862396 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18460982 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207776354 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126321779 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139741502 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196375058 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134752496 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132097938 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154426001 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121421625 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139204432 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143371799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145962293 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176330559 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180159976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155248566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168973958 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150802794 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25069812 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14014743 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151142298 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122338242 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121540707 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194345281 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2268541 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104956578 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232960983 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173320654 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199506948 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168995882 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134970368 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177725735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131637005 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092993918 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221968297 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169580529 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16297166 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19764394 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224304669 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182666513 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184527439 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166779041 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20295157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139189459 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15764023 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138597843 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161631957 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160747661 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123546043 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11254556 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135821328 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150165738 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143744059 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107074659 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227027987 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172002315 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216893303 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133045176 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14989001 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181859771 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129541915 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176745668 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206119027 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119452556 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227238521 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195092693 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1866529 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143584735 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227406676 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093271324 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12676021 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141957955 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171573922 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106644567 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135918146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162881755 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182238219 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208543115 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173037777 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207570995 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200973889 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192828159 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095492891 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168528855 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186554501 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17696358 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180309304 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140568885 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151843938 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178201736 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155463363 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256390188 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168104629 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177183532 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209529769 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152645025 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132243543 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150109728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17919031 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15580533 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178067567 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147187187 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139233765 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160778279 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103516985 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161237499 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213883167 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163927543 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190562114 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15042542 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187331323 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129248048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163404282 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161641127 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166581723 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081559899 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203354343 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204597365 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14841532 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169705802 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189866708 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132975848 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306790382 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235378728 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196972419 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137949677 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15605101 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161695975 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163444126 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171616572 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180997871 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159775051 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189008384 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160609588 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136197449 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111657229 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150286756 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153446007 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133548349 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148999447 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178222597 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137785527 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191440317 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155324059 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160664524 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172945177 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150836493 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117840618 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15085154 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244591721 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185215993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239860724 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123575366 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207454881 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207781236 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126522116 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105432934 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135584367 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180339596 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137406109 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19307379 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.21433793 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200664244 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181996805 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206584238 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112571845 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121726344 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157632467 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169724511 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204500623 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150102733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148462975 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230918946 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111472231 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132807469 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167784911 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288943162 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146661245 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196795151 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107876952 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27927106 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100675445 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132694525 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164589101 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236083683 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10917869 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178494001 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171744821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162969148 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165391437 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150650371 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192249563 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239688448 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20241324 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184794124 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134613047 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158123197 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176360956 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220376447 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156620501 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111622849 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231982827 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197200033 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196441072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144021092 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16975867 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169480658 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158859618 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214079753 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108265785 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236478912 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107511499 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222341519 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153933085 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138722422 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178632329 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189611012 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141759365 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188146239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210353449 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10887229 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134503265 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167936364 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17942254 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155035594 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128331373 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18278167 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126369961 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195417508 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26418261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134023179 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128734679 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147402062 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138773817 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156090168 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160861037 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139473977 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140241596 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228408129 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135437038 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193389737 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201277369 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200481531 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174810183 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145596382 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693893863 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10361375 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223040939 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12073094 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237843594 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152228987 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174452245 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160411881 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170553887 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19567179 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162374709 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231645905 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220204237 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180047844 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133392417 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159664998 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156093745 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117570472 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153884704 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169063073 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159812414 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147176672 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178676243 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164597356 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135279206 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140294789 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200174301 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148674734 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18728393 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181751252 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140194747 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174804865 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214969981 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106590754 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208267438 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211104261 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142975494 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150060102 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133457465 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1229888 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264760497 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126469956 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190545959 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185013409 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159669078 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169351951 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147118258 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222236082 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159240411 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186702408 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143030787 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160824904 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157612263 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139184189 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104612515 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157277385 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169082407 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150767806 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160948693 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164148467 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197059718 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096095339 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145964685 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286215052 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201254289 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217782897 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138040355 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136076005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134787205 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150619301 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.204840378 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180061553 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109174056 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136805482 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137618039 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130002618 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137833228 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156549631 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194781993 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166180393 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208150311 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137925872 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282186102 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140467958 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156824066 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090060146 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132776588 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150432488 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119115206 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157205663 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221218501 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26460159 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120494513 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133891927 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150321176 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097986443 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137444027 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166020206 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167109496 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181643083 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146929279 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108826615 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129301607 seconds)
  done (took 82.797945564 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176906011 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.159560334 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167322741 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203707307 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176568857 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270837502 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209860576 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253663372 seconds)
  done (took 2.711201763 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094795073 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146380664 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157874714 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133770499 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092818688 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120454696 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345818759 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133263013 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116317879 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122101336 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174542327 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093919983 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550453447 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091335409 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120688919 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108060906 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091718162 seconds)
  done (took 3.768485534 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.164614644 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497929401 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.000694462 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194711492 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159870701 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117411975 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70661644 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094997658 seconds)
  done (took 12.01955978 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116735793 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136347675 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123983527 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153211208 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140777027 seconds)
  done (took 1.761818962 seconds)
done (took 124.357752265 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097248151 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127264818 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098445398 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130602107 seconds)
  done (took 1.51399276 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094673761 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070976257 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101178163 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07492332 seconds)
  done (took 1.419340038 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190743006 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168775365 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.386656368 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072414879 seconds)
  done (took 1.571398157 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116250801 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132411908 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104356371 seconds)
  done (took 1.451995182 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10995223 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130024475 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102867004 seconds)
  done (took 1.435664614 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108917284 seconds)
  done (took 1.203467664 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.111310425 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137209658 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109382148 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136167601 seconds)
  done (took 1.588051454 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101690928 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127291626 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10960492 seconds)
  done (took 1.430438395 seconds)
done (took 13.052285388 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103576629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419091059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412346088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117200741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722869275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380893523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031686109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14634336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165601638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093732781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139970161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673667686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022315063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375200454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981480507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372019707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69651181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121101708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119675532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094595296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014876816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092775506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122716162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092718338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705932069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425807286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094851297 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371461394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092984749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127146083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382500963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122630622 seconds)
  done (took 16.909306914 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097345657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174157751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098095411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137759118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123090512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094702271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125235221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093899652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179310912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122785191 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111400937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122291941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125547903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095276705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141791376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094447739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125878908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092971544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121472522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121516289 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112816545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119847018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09479716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121367897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094779923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1355009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122735078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093957598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121091112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099346741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127463341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094741602 seconds)
  done (took 4.829974688 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142768491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182861624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12830127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127183665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168843711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124138691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198775503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118069379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183145561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12276766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139861464 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093188653 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156320856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122853795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115408709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121849602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096981558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122401852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094553375 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123049714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139811722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093563271 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121629155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093308987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123890726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108590741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123639922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120970759 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093546072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126966346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100653883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124624963 seconds)
  done (took 5.156263653 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103276047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125806932 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110361079 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138451273 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095353255 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126456895 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098012115 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124793708 seconds)
  done (took 2.024443037 seconds)
done (took 30.016845861 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117819314 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127251397 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107505722 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134574281 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103828754 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132259584 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091813016 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134216712 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134221978 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102692437 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137060271 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092075014 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122680393 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091884016 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135145492 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097654993 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132697108 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101488649 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133451328 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132347159 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095073458 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133203608 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103423589 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133512342 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104676951 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133642975 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138090462 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100328929 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122865362 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094535228 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12365139 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104141079 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123282168 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105722671 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126597025 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096783235 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124108765 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094167364 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133090967 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133965009 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10051752 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133302169 seconds)
  done (took 6.02097377 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.111285006 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139815438 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10548389 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081651465 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11692838 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080888741 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138239853 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079040222 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110772933 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10812702 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074575307 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106817029 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079042351 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101495417 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07758767 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075458517 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10776534 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076253498 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077034371 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105844379 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079989956 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072952324 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108330662 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079112306 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075416671 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109377395 seconds)
  done (took 3.583926288 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100674828 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134742333 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113496271 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183943556 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160253845 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100379697 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13194744 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140267913 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1092048 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120267366 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096073498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14961043 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109847051 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129286153 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092447573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136804028 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135633214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094950778 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128110045 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112820153 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138498425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102773179 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141226009 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132706479 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09299663 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123216861 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097390956 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135037282 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098522139 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131224195 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097501158 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124888014 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122351879 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105100766 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125796279 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094554933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142517803 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103246367 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131454852 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121684797 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100221337 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12228302 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11405654 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160883617 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091975122 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129501844 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123841042 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103365456 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121392219 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111411704 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131364553 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091874186 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125800792 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091922393 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121437202 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107498268 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.1239822 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095325296 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131592164 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127557451 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106350319 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125369147 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109977013 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121723156 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100720473 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121276124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09368605 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120760921 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143971242 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095326752 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162671959 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093760443 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124302548 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102832233 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130992666 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129173034 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09429732 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137234627 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102529489 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125950327 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103030472 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12565753 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095440935 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143012584 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123969584 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096350836 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122678998 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101218574 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123734568 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09441097 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136849882 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092423795 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125683587 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110802976 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12165331 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122323717 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100363537 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126113774 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092563304 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135614533 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098906372 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122624152 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131739697 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094179228 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125152668 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103122061 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125988165 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092986845 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127021193 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099290234 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123388911 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094517876 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125927594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09538342 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132643799 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129445805 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099293241 seconds)
  done (took 14.845324742 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230035483 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216185517 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.246548477 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264512955 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137292475 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14551767 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212126431 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126321349 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125329014 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160506471 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171983668 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181369405 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170888645 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180103606 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169549492 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093669569 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143498037 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165134314 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215222055 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260729891 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144990483 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131210201 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.133934168 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160465553 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137714733 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132978906 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110340954 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134864518 seconds)
  done (took 5.818239438 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110192386 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155476484 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099003613 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145469545 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149624363 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093226102 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128413584 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094769024 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136577788 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137028314 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093364874 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129492103 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100781648 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132819222 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124431298 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103128355 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131997037 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095759494 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127512941 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098029968 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134543191 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103118002 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128525128 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122161494 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104104088 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122249903 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087352826 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14388256 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122798443 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116686592 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121883764 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102942362 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13664844 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094408161 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124441125 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096285176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12555407 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096099332 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125824341 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092245719 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123592704 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077795498 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122913307 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137509458 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100446787 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080236783 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130431729 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129022232 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095025302 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12099611 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09755452 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.1259104 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097407527 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130895679 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09597762 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123965961 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096724412 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116836132 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09997938 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125782947 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085228807 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121283286 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099195834 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11857174 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102333857 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128348002 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092917654 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125425242 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098192568 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129381238 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095870977 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130080407 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091536106 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126301485 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096323215 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129033414 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125939128 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093134186 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122826858 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094765272 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075673036 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124236666 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074678916 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127350454 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092124391 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122689876 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09596038 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130428281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138734585 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09574729 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132415036 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094453396 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123246372 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096720932 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114246364 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097212888 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140629195 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142425999 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095245684 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122172405 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109121245 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126170605 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093267562 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10664518 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102298263 seconds)
  done (took 13.019270337 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130678158 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153965979 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125105878 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112122148 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157607438 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158568858 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101243772 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131303047 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09553947 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143108765 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093263365 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132372806 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094554892 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137764346 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157744128 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10463271 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125816701 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107542934 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128771052 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169343216 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112061612 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143240092 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110258364 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124563119 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128536239 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11032281 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161091986 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10856574 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136563345 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142243878 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10829273 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161507433 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143744794 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098529155 seconds)
  done (took 5.484793059 seconds)
done (took 49.877551392 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.200441521 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.413214695 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192940502 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.137684625 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.223349931 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.218089446 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205310064 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198685485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.819979978 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192945919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.426639436 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.786195479 seconds)
done (took 60.131474465 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.22469592 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358907828 seconds)
    (2/2) benchmarking "String"...
    done (took 1.494090346 seconds)
  done (took 3.97516497 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.806550678 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.146782383 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459270996 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.198415976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.2000138 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483926461 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.934240412 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.574253877 seconds)
  done (took 28.117605296 seconds)
done (took 42.254997159 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.212063496 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.271920926 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.236032467 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178250204 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306543918 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22294307 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.506965546 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.212819962 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.219184501 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183232599 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.234087906 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204290778 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.21067616 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.499635507 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205986658 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.203444445 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.264373119 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.698030888 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60628372 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.198145863 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.224564465 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249758258 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.236505924 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206867529 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.252777384 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20708368 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201067853 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.224345774 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.746759536 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195831265 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.209116542 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.658927881 seconds)
  done (took 190.617765626 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.2058796 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.434122961 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.45937053 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.231562573 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.691626195 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399673075 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.344651956 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.750638863 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.220041519 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.208320283 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.482155996 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203314893 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.546300475 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.236431266 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.2352695 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26765803 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.418001466 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.544186837 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241209592 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.337583462 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.222460179 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.666208942 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.60542119 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.432400499 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.263651025 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.24295352 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.211144806 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.231217315 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.394132498 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.378164248 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.259093656 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.244092752 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.824794578 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06042063 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224492289 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212989536 seconds)
  done (took 151.061437822 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202526292 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204251869 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205246808 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.241067021 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200620916 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767051158 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78163821 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199578883 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.707786645 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.624548634 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.602181998 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467812266 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202749241 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29369285 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212884203 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199648923 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212931804 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241039954 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198753226 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20474786 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787388633 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217651996 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.260528871 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.39733239 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216108797 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234762401 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593288788 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199960627 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232229055 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532201838 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251623798 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198307612 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.567555768 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.695292637 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313890884 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202853897 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234931788 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200032618 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483633542 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200817189 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.201603535 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203778345 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201144176 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87311893 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198208394 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.768358368 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196892624 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148388846 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20037332 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202418931 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.899307754 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.902660516 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.216100463 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200515934 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203047723 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.1983646 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203438015 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236248813 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.80036253 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295979859 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215931196 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204318076 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229000231 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198207788 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.300039867 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200810486 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.619747463 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255388338 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310132685 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785137342 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204566542 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299057128 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317991921 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200908821 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199839063 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199416812 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200728439 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315695845 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201214363 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.607939002 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378125713 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216408304 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.590587218 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297214996 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202077838 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.628753842 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205424204 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202737191 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956447943 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298982251 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197199817 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198689525 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200283505 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20424352 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.203800828 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609008914 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768735008 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.471545713 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205745363 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.938246059 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20687355 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.628485923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757473138 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90886022 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206306064 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313961239 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377869686 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21734682 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203089426 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.59184966 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19995787 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257995367 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200948584 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598891125 seconds)
  done (took 367.190213591 seconds)
done (took 710.002861442 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.79697117 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.791226734 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.896975916 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.780753096 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.745019003 seconds)
  done (took 10.131439552 seconds)
done (took 11.261348533 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390219558 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38707071 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260558681 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390305205 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236254568 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40860646 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368792955 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221677324 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304469768 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283323841 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301122539 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254389267 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238427506 seconds)
  done (took 18.1742645 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523078883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528951336 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266876936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529596731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24565301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531399794 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412104781 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426023454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428263486 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237562073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221259246 seconds)
  done (took 16.481811646 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.529923583 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530631971 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272560177 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547632089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247100488 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538239419 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41169143 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425786335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425848427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241199755 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221295582 seconds)
  done (took 16.52264809 seconds)
done (took 52.310724351 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.215798737 seconds)
  done (took 2.347902565 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250808432 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418390822 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234129617 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2214423 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216717242 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219332465 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220153152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215965668 seconds)
  done (took 11.129957068 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212519981 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218804333 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215336495 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211537264 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21906386 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219829364 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21584204 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215589921 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216735946 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217700391 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215339426 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21698212 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21624068 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218768085 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216164898 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217152158 seconds)
  done (took 20.596817266 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21602157 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213610006 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213771391 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21428866 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213797055 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214147382 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216301501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216395646 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216802779 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216185118 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216223306 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216920161 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.217010455 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217616111 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215035897 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218478293 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215628299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215617013 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221508118 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217685141 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217940438 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213597235 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217035455 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218799264 seconds)
  done (took 30.325835861 seconds)
done (took 65.533148972 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.852633444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.928106913 seconds)
  done (took 6.915000911 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218967941 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.219195286 seconds)
  done (took 3.574250447 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217367563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220040607 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.216408799 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219137482 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21986643 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222448202 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220308503 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.22027879 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219697169 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218032619 seconds)
  done (took 13.328939402 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217745662 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220332984 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220011795 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221377543 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221062649 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219944294 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222590444 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220408336 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220133158 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218907422 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.2237332 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218667625 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218600131 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218948852 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221065939 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218668238 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219187769 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.21952102 seconds)
  done (took 23.095555471 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219523367 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.220593776 seconds)
  done (took 3.576248996 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.21696943 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219468163 seconds)
    (3/7) benchmarking "month"...
    done (took 1.219495675 seconds)
    (4/7) benchmarking "year"...
    done (took 1.218451657 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.219602251 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220524556 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2167526 seconds)
  done (took 9.666916816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219830811 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401714142 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.483135374 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.829718903 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220583712 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222851898 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.059865948 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224183856 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.225925623 seconds)
  done (took 14.024884124 seconds)
done (took 75.319822685 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.240745264 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.229453217 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.580210421 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226616675 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.233731887 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.559198809 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.223582093 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.337412943 seconds)
done (took 37.770369416 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.220452503 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202933594 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.012418136 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20152741 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.289216514 seconds)
  done (took 18.843785614 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.286043554 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554125579 seconds)
  done (took 4.977890884 seconds)
done (took 31.182828398 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222304215 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.220552811 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.220123792 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221869794 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.219263901 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218499169 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22227532 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.221783985 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222161173 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.221784128 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.221330433 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223611607 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2203474 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219477345 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22130163 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218934746 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219076291 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.220475633 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222022044 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221630402 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.220212173 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225872392 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219930114 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21903746 seconds)
  done (took 30.443246049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222272218 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220772661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222511392 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222154265 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220934935 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222005899 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222571231 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.222227478 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223946189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22424103 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223126511 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224154353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.225194547 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222396443 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224355259 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.222857336 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224842486 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220905893 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22346379 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221366466 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223608942 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222229071 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223723891 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22439642 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224234623 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22113856 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.223926445 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221434677 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224503417 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223602349 seconds)
  done (took 37.83005926 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229102654 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.230902318 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.225717447 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224317065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224914687 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22554163 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.226274517 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225723889 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224568876 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224437788 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227268283 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224145084 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227276046 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224956775 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.2264698 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226751426 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226677503 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227974953 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226766031 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.227939204 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.227088086 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22517726 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22546629 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225440787 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226769716 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.225321105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227034475 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.2265468 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225278061 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226827302 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226104998 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.2271011 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225915136 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228017049 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226991049 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229218573 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234601714 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234678876 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.228943071 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228082473 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225923446 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22926473 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226806054 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.227163163 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.229219897 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225974619 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226754759 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226748822 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226068753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226611663 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227448402 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226734093 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227387915 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22732419 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226562702 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227123259 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227513521 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226531411 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229299139 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.229396258 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.229510043 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227809669 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.229177388 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228036596 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228831964 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227106186 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.22835923 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22964195 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230126676 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22795316 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227497293 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230414597 seconds)
  done (took 89.511219569 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228704657 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227674912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225975625 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225217485 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226466275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228253736 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226119951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228883292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226484014 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22922865 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229635631 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22647979 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225602557 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229460102 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22892248 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226676687 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228885232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228332642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229493944 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228869705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229270624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227099589 seconds)
  done (took 28.156728737 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230257131 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232153534 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227502734 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231518354 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229104298 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23047877 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2299969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233016941 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231195045 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230110359 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227799376 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232646267 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230255 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230513508 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229930157 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230299934 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230699793 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229689409 seconds)
  done (took 23.292225754 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228061592 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.231137519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23169333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227475782 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228435871 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231291485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228620238 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230471403 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230111976 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.230042308 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231473701 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234055804 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231068769 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22887165 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230614037 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228262509 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231136013 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22734936 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230628957 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227334219 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22555704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232484639 seconds)
  done (took 28.203466604 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230862256 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228695822 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22736115 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230625392 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229863772 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231659419 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233061572 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228820884 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232643696 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232452685 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230092459 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231702919 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232531247 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229327187 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231017381 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230061477 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230246589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230754957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229504601 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228103265 seconds)
  done (took 25.763700743 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232522726 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231455275 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233509046 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231014024 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233082158 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235211097 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232275887 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236214035 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233899025 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231753075 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233781603 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229090528 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231206135 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230270611 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233241774 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234509673 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230940882 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230858144 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231377124 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23025248 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230998884 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233818966 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232786009 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233118529 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232822892 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231098888 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232552856 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233875797 seconds)
  done (took 35.653219939 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228049968 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228434954 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.227253762 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230747345 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227791865 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230194164 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230612392 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229999422 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22842563 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229058955 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.228999815 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230730656 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230261713 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229484306 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232362632 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231957156 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233074592 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.227476378 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225914203 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230765929 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233602856 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230799492 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.231250559 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228036092 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228048835 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230708691 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231071675 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229756681 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231081635 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228350718 seconds)
  done (took 38.041472093 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24896077 seconds)
    (2/2) benchmarking "in"...
    done (took 1.249811626 seconds)
  done (took 3.646210038 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228840657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23433696 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.234457623 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23188753 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231505825 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230911191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234900559 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23136258 seconds)
  done (took 11.005826092 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232304459 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232399373 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.232734095 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234761668 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234508572 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233286174 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240944015 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252526288 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235046716 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234761356 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240601275 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.240581192 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239052547 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234918813 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232730331 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236373547 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234513835 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235838206 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237217029 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235868042 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23784302 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237923714 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236336967 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23219217 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236527808 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247648168 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258244083 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234123143 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235781976 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238263783 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.234455098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.232359116 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236636599 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236383307 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235331319 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235383335 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244504078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253961529 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242029816 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256028298 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23667255 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232944057 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236298222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236431653 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237173085 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236508861 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.236574784 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23332388 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235449936 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240800035 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242086554 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236139799 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23467431 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238969498 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237694718 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243811223 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.255431619 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23936952 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246104275 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247754421 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.269507247 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261318297 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23959798 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237561686 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24801698 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264846871 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24387947 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25412021 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234809629 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23626369 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24597561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269755728 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263197983 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238695851 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239221974 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.23790091 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239340064 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237365679 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245681801 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258869585 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237722538 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245175856 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2453911 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264262436 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23811433 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239816518 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239301912 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239197482 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239295822 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249907864 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258483264 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239741283 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237998586 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239253006 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239703264 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239701835 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238240247 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240668838 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238722273 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242328074 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240290754 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242734053 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247102939 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241841847 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243342695 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248611712 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.258702726 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2401712 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245949621 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.240265163 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240953585 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243574658 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247220129 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240661813 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246794228 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246133668 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244480406 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243142791 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243302057 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243767297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253431969 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272411721 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.241431478 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243521652 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249338199 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255745353 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242703254 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246377846 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24456282 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240532831 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240146192 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.245910055 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243145283 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242295835 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244569328 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246074261 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.23707164 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244390977 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243966876 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240816414 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245290479 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244637804 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245406725 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244345832 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.244429622 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245518946 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249272772 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260599326 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246632541 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245266415 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241892378 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244162966 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244054328 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245779488 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236840111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244446195 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240793297 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242926562 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244718984 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24373995 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243982191 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244527467 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243766513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243685105 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248410378 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241453097 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239330883 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245253312 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24480848 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244585541 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238864077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24193266 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249935278 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250897298 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243380683 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.247072723 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247788804 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244454274 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24398298 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244807965 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246939056 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246384455 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24197929 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252005231 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.264646032 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244779405 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240643645 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242389114 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240914756 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24547527 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.245769308 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246696139 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253012804 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266488763 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247112522 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.247106099 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.244161727 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.246553425 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244514882 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.24234849 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.244130235 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246293124 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242595467 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245958244 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241715127 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.243904467 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24125317 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.244229059 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242072964 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.244051111 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243587663 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.245402777 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245471203 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240540295 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245080653 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245171355 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242214301 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245142612 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245542671 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240439467 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.244042388 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247731008 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252252933 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242184023 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24615886 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246487128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242531297 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243869647 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.244744004 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243541839 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247720171 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252068265 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264782845 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248897295 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251870315 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26377202 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243113517 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.246122129 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.246429166 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245447562 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.250317115 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256155171 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.247532607 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249708662 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.2478451 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24797219 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249552582 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254510395 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.262312699 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248781222 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.247005945 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250998478 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245933394 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249713681 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248366019 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250306378 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2506441 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250140699 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250358563 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247334041 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.246095704 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247154746 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.247097225 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2496018 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257691036 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25062736 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248104072 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24857839 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249912983 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.250449952 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248620652 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.247900267 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.246554614 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258799944 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.274898362 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251869547 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270236581 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247716835 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252418588 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27047205 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.251176335 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248604785 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247002987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245596636 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246874228 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244315365 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24946508 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24623943 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248659999 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248299925 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251851572 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.251439808 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.24731468 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248726305 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248491764 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.246272571 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249060774 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248835619 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252262996 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248827165 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245361599 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248082234 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253500987 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269042149 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247347187 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.246177968 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247780883 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245300489 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247236692 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250520626 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250872692 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254132206 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25000214 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254325854 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251454821 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255344973 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250442739 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249789974 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254032968 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243667904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247914884 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245892289 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249996008 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253431735 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.269002346 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.24780227 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252142845 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247981126 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247633179 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246843507 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247541094 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247073544 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.248274596 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254451878 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26993314 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251468527 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247903847 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244740357 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.248323091 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247636737 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245934919 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250417985 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.248411307 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.248221128 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247156126 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.247511527 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.248022603 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248709999 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.247309194 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245377247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.248424691 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254772628 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27068443 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253734181 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.249501064 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254759185 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267400553 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256116753 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268521811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247928047 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.249700072 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248047432 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250667733 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248862479 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249641186 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.250685837 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250048966 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252791827 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.251573868 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252304519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.250062108 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249483788 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249009463 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259001146 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275924802 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25397724 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255501819 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248033291 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25146228 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.255020653 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.250431263 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248599161 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253139018 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259791973 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257889965 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250584481 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251404987 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250103235 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251048025 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250227739 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252927012 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251991005 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250459233 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.250765032 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252125839 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251968808 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253706375 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250449541 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253573551 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254842494 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260342745 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.270799053 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251301844 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250799145 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251475494 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250772541 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250893588 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25222381 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251917945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251848226 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255807609 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258091458 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257634009 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254727712 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.251426638 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.25229904 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25220232 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253378914 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25256372 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.2513741 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252628525 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251861498 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252150524 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25108778 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250529128 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.253320062 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252216174 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251424016 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253731869 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258973075 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253154789 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.249462813 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25197565 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253172185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250170837 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.251426538 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.258186275 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274758383 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26159141 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.260784392 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256994982 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.252702514 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254684555 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.258195398 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250432468 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.251852747 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253221012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25217539 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252046273 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.254403094 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252954665 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258369428 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270837038 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251847482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260384259 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271773069 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252433199 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253421129 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.255790789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.251670853 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24976208 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252527291 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.251572678 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259044345 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275245251 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253654371 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254420841 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.251521586 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.255697386 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256738094 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253219725 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.254111281 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250164874 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25422482 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25324834 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253617789 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250805843 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.252751963 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.252804483 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.255669279 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258708177 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.251743791 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255224116 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.253421313 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.253225879 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254851281 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25280889 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250407646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251312656 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253698377 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254997913 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254389357 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.257330746 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.252903035 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255122179 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254673293 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256824449 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256805526 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264474807 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261289634 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252820702 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.253754698 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.254973722 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.256712218 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255344843 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256449299 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254320325 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255340611 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258377807 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25570197 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255802616 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.258309343 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270947655 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.277049997 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256905765 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256482709 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259261493 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255043722 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253254305 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.256565484 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258377809 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.263144594 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262491599 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256961141 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264475182 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275241253 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.257571728 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.261400733 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.259844571 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263823092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.259776939 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257249285 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.256901178 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261027538 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271687906 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256996628 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266315911 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288115189 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279307359 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257278791 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258798765 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255836417 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258281393 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258544803 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.259721974 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257191583 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258166448 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.257271112 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258318525 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264137484 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258800863 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.259723358 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.258287163 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257252882 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258959841 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.25593995 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.258813743 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.258458671 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.259427578 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258938814 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259354008 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.257801572 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270999607 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.285007062 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.259260138 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25999193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.255282942 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.26217714 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.261749979 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269432423 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.266947075 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260023849 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.25991384 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260899085 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26149364 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257695827 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259577279 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.259334719 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259703616 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.258123569 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.272631392 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28491696 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263816162 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259607124 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260954641 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.261005213 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261006789 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260652377 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260561404 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25999058 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.263409664 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265090472 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.259906511 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260141459 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.26285931 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.268061348 seconds)
  done (took 746.470779567 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258366999 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258310206 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258158893 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258909734 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257949983 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257840538 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259413329 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25887167 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258882011 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258727464 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259788864 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259215637 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258456657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260289511 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259126061 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259033722 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260150614 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258819657 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25864599 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256786219 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258634875 seconds)
  done (took 27.608526471 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.262041435 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.259784394 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259148963 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263368741 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260827377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263032571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260497195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262059211 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262566415 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26016504 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263300582 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262365333 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.259522412 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260176146 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260505076 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263103018 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.263149098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26123441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.262855772 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261046516 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263221985 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261046034 seconds)
  done (took 28.930669935 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.264533619 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.264562296 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262445908 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.260642682 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.263161856 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.26016788 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264159064 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263117598 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263881615 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.263880525 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.263084213 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264772655 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270789295 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.270234622 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265691508 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.265100195 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.408552 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265794013 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265104489 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264751965 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.262161272 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.270041003 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.281910349 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262254208 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263454091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266322114 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265203041 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.264628031 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265938696 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265751976 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.270023173 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.265352818 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265568316 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267829885 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.265109658 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.266061091 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.270056393 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.267640227 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262960103 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.266058225 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276171777 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.288114443 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266926418 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.272230043 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.288896571 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.265988206 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269096152 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275536653 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.26322721 seconds)
  done (took 63.412861833 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.266514194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266856116 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263993814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267327802 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.266409535 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.266978081 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.267315775 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266974717 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.264560831 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26469718 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267649082 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264832325 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264354968 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.26772136 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.266986838 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265018166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265349951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265183639 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264402712 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264516141 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.266332367 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.26786853 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.267848618 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.265237537 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268097748 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265751379 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.266070725 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267974841 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266343848 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.265723325 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268661274 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268034949 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.268325097 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.266887494 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266480229 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268101118 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.268938723 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.267855948 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267951215 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.266061708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269027663 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269227252 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269684663 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.269079924 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266440647 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.266800849 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266807382 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.266928461 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.267131589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.269523191 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.270189044 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.26736772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270196116 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267177432 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269371721 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.2701276 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.268156183 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.266303487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.269884193 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267994151 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268174533 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271429359 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.267661394 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269655628 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.270581893 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268011863 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.26842405 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270683249 seconds)
  done (took 87.365883572 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271644968 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271633698 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271810265 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271074157 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271404953 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271686496 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271325017 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272330695 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271691137 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271522552 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272648698 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271520687 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.272710833 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272373493 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271818101 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273587982 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273204518 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272587071 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272138154 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272557272 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272482958 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273119762 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27312572 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273130128 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273864494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272745358 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273503084 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273757041 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273507973 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272714401 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273746669 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273139696 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274303197 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273519818 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.272867934 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273377359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273946727 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27369474 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273983899 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273309279 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273402322 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274032626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273628836 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274390511 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274058498 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274251557 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274321866 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.274842071 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273262114 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274290008 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.274003922 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274402143 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274533362 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274459148 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274959076 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.274964136 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274758062 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275487507 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275185365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274972002 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275222268 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.275046026 seconds)
  done (took 80.132148924 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275181213 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274187943 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.273131734 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.271178978 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274961922 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273444681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274905918 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.275723307 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276075565 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275069317 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275972521 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273135927 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272726621 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276532493 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273847776 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272938935 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273564011 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272828598 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276260447 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273763367 seconds)
  done (took 26.672063548 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273033435 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276819746 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.274075126 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274664993 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.276260224 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27433781 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.276549372 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276580635 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274823516 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277386192 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277367007 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276905129 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273961542 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274819429 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276660839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274481412 seconds)
  done (took 21.596608887 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274829985 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.276906596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.277951376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278122943 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.273883494 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274726985 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.277718553 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.273858881 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.275385113 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278288093 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276875226 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.277478163 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.277259911 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.27727403 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275059333 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.277078079 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.275523006 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.275587638 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277917627 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.27918432 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275884911 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27565353 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.278785914 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.278441248 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276003211 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.277225887 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275608098 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.275570361 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276244123 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278622489 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276095662 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.27690584 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.276137213 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.277104013 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279604447 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.276109068 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279518773 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.278478451 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279136116 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.278634248 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.279118952 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.27647405 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.279939751 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.279887015 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.276888136 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.280171393 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276949937 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278261367 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278105415 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.278537094 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.280548561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.280461741 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280844608 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28105984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280070938 seconds)
  done (took 71.45415066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280577221 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281255989 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27810111 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280369635 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28082885 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278917895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280716581 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280624409 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278779793 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280033977 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279586629 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28263217 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278999317 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28204951 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280277866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282912355 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.279271528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279261352 seconds)
  done (took 24.237908247 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280174805 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279922743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282355052 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279687983 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.279583227 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282143353 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27940161 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282738938 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282300733 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280466641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280292458 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.283151337 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282846995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.282777608 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280434081 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279686895 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.283499887 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283281525 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279691995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280039539 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284647172 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283532218 seconds)
  done (took 29.386526882 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.28230014 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.282447605 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.283151578 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.298296518 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.302411793 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.305495551 seconds)
  done (took 8.94817127 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290029581 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283324127 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280651463 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285030833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283371289 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280887943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284643208 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280864693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284252409 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281515093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281189472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284489767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285309148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282657883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28525418 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285960626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281925769 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282246608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283724755 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284205748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282561541 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285685602 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282969098 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283666055 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282819272 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282903064 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285172173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284116517 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283466926 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285591516 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286441126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2835237 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290662381 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28539541 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286747328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285762683 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282991896 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28571236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286695654 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283301276 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285598883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286638414 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286945782 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283445159 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286883332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283835521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283531883 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286111004 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283968165 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286362773 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286576738 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284279662 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287176053 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286786683 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286716203 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287484253 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284689324 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285162953 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287647928 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285555861 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285686238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287352994 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285040533 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28554619 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287526656 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284915194 seconds)
  done (took 86.019654809 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285617505 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284476688 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285359712 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286758749 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284693043 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286598428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285382951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286046904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285718048 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286708679 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288331962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285675558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286141587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285718763 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286354048 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28653009 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286783582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285905279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286327828 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289365176 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285897522 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286104619 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286636909 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285851824 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286527003 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289974394 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286983669 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287094551 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287117336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286532712 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287684167 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286293165 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286594847 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287750656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287463059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286739193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286560112 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286516778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288066364 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290589495 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287739674 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28956928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287941464 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288325032 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28848186 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287635407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287779976 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288377329 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287683698 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288464345 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288752387 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289222681 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28742976 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288738776 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288809675 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289204466 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288642197 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29026033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288546633 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291048107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288558757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287994463 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291974156 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288891992 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289617942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288919738 seconds)
  done (took 86.177105401 seconds)
done (took 1741.102067003 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452797742 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406310879 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289722704 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.287426902 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290049436 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.306528069 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.292937539 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289544346 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289622548 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.290163699 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290375848 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.475339575 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.28593656 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.289764161 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.291248887 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38793374 seconds)
  done (took 42.419230264 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.31964785 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299742394 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.406539788 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.318171069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.319763866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.48107464 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.35106632 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30119329 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.463307558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343193284 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.862941689 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.326095532 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.298111285 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.414451801 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.318068022 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.476220534 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.543489769 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.866123702 seconds)
  done (took 29.912746486 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.732228613 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.308781177 seconds)
  done (took 9.247379459 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31606601 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299795351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.296991325 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.295603828 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287443932 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.310763268 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293481683 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.287769253 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.82200309 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.418516473 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300816857 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.307275335 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.317690006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295605046 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29306524 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330276027 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.446387654 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293024335 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290803768 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299988849 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294472252 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.377208211 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338679406 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.301273777 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.413116649 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.761757706 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301965381 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301988238 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.420630747 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.29210534 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292594304 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294196744 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.295331031 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.903361161 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.715120002 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304361861 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.333183131 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.301833505 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29187067 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.444212086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295468649 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.300491009 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.286785742 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.724255 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42922598 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.415432151 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.493277529 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317179034 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.301134732 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.354010182 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.294475474 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297430843 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324887458 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.059514059 seconds)
  done (took 108.89291804 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.346628941 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.685892115 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453252664 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.312357632 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.101444226 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.03297335 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307384534 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.554428598 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357632268 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28504379 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.621732643 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781517001 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310031082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.301558928 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.822204738 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.338146296 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291885428 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.135059256 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.308318523 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.289255536 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764242951 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303391316 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29240082 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.465063729 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.323694265 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731753719 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.587266069 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.843657609 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30991801 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.287022837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.738108707 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31396207 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.325916525 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.290702678 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.541016129 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633694238 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62603509 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.31253502 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337945062 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292501513 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.306325653 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722016566 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635486449 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310486368 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.293170483 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.747283194 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.309617462 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.292775541 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.295499822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494756706 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.14847788 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287781367 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.589208905 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.29414078 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.649335853 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379280496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359395261 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756000679 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31005474 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.461791842 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328315707 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288760826 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29253959 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287712439 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296974223 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.61850754 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.426466452 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.292844924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619320598 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75416094 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311192205 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.816090346 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.19463017 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.309567341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.380607431 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289393586 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.960713811 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770711707 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.335637276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.290483738 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.60671804 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315576715 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.604044286 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311658682 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291579362 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796182352 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.298979572 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.348553021 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.290836732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.296667321 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.049901369 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294674903 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.57137825 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.359559719 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.291454259 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.291694219 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323010723 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290316601 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312839816 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.297767948 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.796339034 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.319004953 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.250200837 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314068733 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296309398 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297591753 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.293837124 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291277622 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514039616 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.750831321 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.317756824 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294251344 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.291789165 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.301330823 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.467491347 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.293651832 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.583732125 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315517654 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291753299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.314572059 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938240213 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328456589 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293247384 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.315697433 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.19177533 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.503452052 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.315434359 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.312760928 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293007946 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314442028 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.47384079 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313179497 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.378782465 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298185834 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977846671 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.352063227 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320975 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.808503944 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302786412 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.174413871 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323345403 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.294387352 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.581789014 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.559284684 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.334605065 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.297424859 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.316107467 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967536259 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.332610346 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439010218 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318502372 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315514515 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490956886 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.670476743 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.295312518 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.912862979 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.297102852 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512174178 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.301150405 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596216413 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774049791 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316146275 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303075167 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985701293 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.982797832 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.97221423 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.300560965 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.609943679 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.241411688 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.773486216 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.295233043 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.294852175 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.88508981 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.300785009 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.304327172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.295764551 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.295670098 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.358050038 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.467325335 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.534748502 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305311625 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732641585 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358160589 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295747694 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.305544127 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.298285677 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.645729739 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.380868946 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.297142848 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.303683844 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.296986526 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300690449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754191682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.241751231 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.304101925 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.447763503 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91175675 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.319095154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.298591917 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.917496846 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.590759413 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827448156 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.363249794 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.588853907 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.327994116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.335255822 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.061739965 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329060621 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792689266 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324940873 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.303657106 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.876344521 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.319140563 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.646736345 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.299028071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301787023 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.821661448 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320359323 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.298945353 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.489085878 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323046307 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571677312 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.30570082 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.308910818 seconds)
  done (took 1102.617716116 seconds)
done (took 1294.295317403 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.303984352 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304809756 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.286272437 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303937083 seconds)
  done (took 26.415242058 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308793159 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30513951 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307682173 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.304651114 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307719457 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.304818091 seconds)
  done (took 9.055831688 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.346010883 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304366978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305191567 seconds)
  done (took 19.171171033 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.497033205 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.529827222 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61305197 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.346631159 seconds)
  done (took 10.203563385 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.308439196 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.307847876 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308623169 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.309843557 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.310339096 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.311104627 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.309476519 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.309506427 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.311620872 seconds)
  done (took 13.002973377 seconds)
done (took 79.067003747 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540750928 seconds)
    (2/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.376653216 seconds)
    (3/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.394430442 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.387724468 seconds)
    (5/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.052134765 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.295405154 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.390957697 seconds)
    (8/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.380320972 seconds)
    (9/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.430557234 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.728870852 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.423254141 seconds)
    (12/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.280660296 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.56747431 seconds)
    (14/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.212455545 seconds)
    (15/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.316748592 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.341419883 seconds)
    (17/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.282491781 seconds)
    (18/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.288188844 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.920702436 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.329377524 seconds)
    (21/286) benchmarking ("sort", BigInt, true)...
    done (took 6.301719678 seconds)
    (22/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.797389418 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.33526779 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.997004735 seconds)
    (25/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426841561 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.54703728 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.803390532 seconds)
    (28/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.069046441 seconds)
    (29/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.322086528 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.36048015 seconds)
    (31/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.288108941 seconds)
    (32/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329138611 seconds)
    (33/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.294888118 seconds)
    (34/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.294176631 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.873172341 seconds)
    (36/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.316757842 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.310258762 seconds)
    (38/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.313327741 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.293482604 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.288981662 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427965346 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.928466552 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.697127007 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.882969704 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.14504096 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197826754 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.325856352 seconds)
    (48/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.672534867 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.726549105 seconds)
    (50/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.30849749 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.770268749 seconds)
    (52/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.290873055 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186992132 seconds)
    (54/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.117284761 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.721359234 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.318758854 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.32058729 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424343468 seconds)
    (59/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.134739896 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.724602966 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.305532622 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.590588544 seconds)
    (63/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.136957278 seconds)
    (64/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.467126509 seconds)
    (65/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.369521321 seconds)
    (66/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.474746839 seconds)
    (67/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.081822111 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.534755347 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.367019184 seconds)
    (70/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.370633776 seconds)
    (71/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.536598548 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.320007925 seconds)
    (73/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.525126564 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.336427551 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.290601805 seconds)
    (76/286) benchmarking ("sort", BigInt, false)...
    done (took 6.312628029 seconds)
    (77/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.432363559 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.53605545 seconds)
    (79/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354286088 seconds)
    (80/286) benchmarking ("sort", Int8, false)...
    done (took 4.328023919 seconds)
    (81/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.419525124 seconds)
    (82/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.321702945 seconds)
    (83/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.285995886 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353318222 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.458635861 seconds)
    (86/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.263308281 seconds)
    (87/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410206524 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.287042208 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321092466 seconds)
    (90/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.339285403 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.027113903 seconds)
    (92/286) benchmarking ("sort", Int64, false)...
    done (took 5.491791161 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.397255639 seconds)
    (94/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.55718236 seconds)
    (95/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.439340755 seconds)
    (96/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.287096977 seconds)
    (97/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.815224433 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.338947518 seconds)
    (99/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.333150045 seconds)
    (100/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.343089576 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.307358385 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.318674692 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048149977 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.148117515 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.339089878 seconds)
    (106/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.417414726 seconds)
    (107/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.298505356 seconds)
    (108/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.814510454 seconds)
    (109/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.294031823 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.522725905 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.026662286 seconds)
    (112/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.120340233 seconds)
    (113/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.313266991 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.70890666 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.396867824 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.29173305 seconds)
    (117/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.673193954 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.169805275 seconds)
    (119/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340153156 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.817736317 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.353020651 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.566439172 seconds)
    (123/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.116042344 seconds)
    (124/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.491377121 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055577691 seconds)
    (126/286) benchmarking ("sort", Float64, false)...
    done (took 5.580101208 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.576005843 seconds)
    (128/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.345359103 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.309514073 seconds)
    (130/286) benchmarking ("sort", Float64, true)...
    done (took 6.321439526 seconds)
    (131/286) benchmarking ("sort", Float32, true)...
    done (took 6.314994182 seconds)
    (132/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.661102885 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.432783118 seconds)
    (134/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.308777725 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.863381598 seconds)
    (136/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.102368335 seconds)
    (137/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.296608672 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.065786437 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.342538 seconds)
    (140/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.334641212 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.56975343 seconds)
    (142/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.324273843 seconds)
    (143/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335932495 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333131063 seconds)
    (145/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.814239677 seconds)
    (146/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.297277703 seconds)
    (147/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.360115201 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.300183912 seconds)
    (149/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.662179555 seconds)
    (150/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.297746641 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.679783906 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.928480205 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.299233357 seconds)
    (154/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.654697319 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.205396621 seconds)
    (156/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.290890239 seconds)
    (157/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.297465655 seconds)
    (158/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.352198159 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.291041083 seconds)
    (160/286) benchmarking ("sort", Float32, false)...
    done (took 5.30411868 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.333120922 seconds)
    (162/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.406655834 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.337589753 seconds)
    (164/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.291521554 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.769030638 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.496419681 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.929943642 seconds)
    (168/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.327534606 seconds)
    (169/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.690215084 seconds)
    (170/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.014698066 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.518727696 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.63297517 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.299192792 seconds)
    (174/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.553962357 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.305124682 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.469389901 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.298097256 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360149837 seconds)
    (179/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.328568826 seconds)
    (180/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.802556817 seconds)
    (181/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.308064917 seconds)
    (182/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.056240152 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.194679917 seconds)
    (184/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.678264719 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.360495704 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.326310652 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.393536517 seconds)
    (188/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.924776774 seconds)
    (189/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.377369745 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.327876385 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062750431 seconds)
    (192/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.466989415 seconds)
    (193/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303327177 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 5.383746814 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.391365163 seconds)
    (196/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396705991 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.238058967 seconds)
    (198/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.294699794 seconds)
    (199/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.496785525 seconds)
    (200/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389270105 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.609985805 seconds)
    (202/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.085793289 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.957245531 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.525658101 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.313555301 seconds)
    (206/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.470060621 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.016779242 seconds)
    (208/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.322452518 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.623247239 seconds)
    (210/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.406525005 seconds)
    (211/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297726558 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.732031389 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.307551875 seconds)
    (214/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.321136687 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362058122 seconds)
    (216/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.516208117 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370142059 seconds)
    (218/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.295639878 seconds)
    (219/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.115617229 seconds)
    (220/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.326950117 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.899253626 seconds)
    (222/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.384017964 seconds)
    (223/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.804190743 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.665034179 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.395135835 seconds)
    (226/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.377686404 seconds)
    (227/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.414835985 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.295596862 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.720380624 seconds)
    (230/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.356796613 seconds)
    (231/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.668896931 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.341563433 seconds)
    (233/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.082750847 seconds)
    (234/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.895906762 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335832126 seconds)
    (236/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.542559914 seconds)
    (237/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.517285386 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.534755474 seconds)
    (239/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.143790212 seconds)
    (240/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.320455385 seconds)
    (241/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.327307025 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.710066706 seconds)
    (243/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.358169538 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.342221525 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.068706104 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.029843059 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.51726045 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.68470328 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.722772224 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.42453902 seconds)
    (251/286) benchmarking ("sort", Int8, true)...
    done (took 6.318003175 seconds)
    (252/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.675624088 seconds)
    (253/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.37244939 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.020871319 seconds)
    (255/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.348198398 seconds)
    (256/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.522053997 seconds)
    (257/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.441458079 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.347711987 seconds)
    (259/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.906099079 seconds)
    (260/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.337480556 seconds)
    (261/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.796544771 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.94871625 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.399948089 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.399409784 seconds)
    (265/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.297562742 seconds)
    (266/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.303642004 seconds)
    (267/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.422765538 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.431033674 seconds)
    (269/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325969927 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.48785751 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.148427327 seconds)
    (272/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.455027407 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.36014059 seconds)
    (274/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444037142 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.306907055 seconds)
    (276/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.702489496 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.350857701 seconds)
    (278/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.308087616 seconds)
    (279/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.464698135 seconds)
    (280/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.362841275 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366852765 seconds)
    (282/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.421146016 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.75092931 seconds)
    (284/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.6926998 seconds)
    (285/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.695640712 seconds)
    (286/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.306105695 seconds)
  done (took 928.267812901 seconds)
done (took 929.488004804 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.352639782 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348799257 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.329646256 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.351909909 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.441492805 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.355618736 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.340302631 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.331808607 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.378105335 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.379036911 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.328823034 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.354777216 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.331830019 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.330345326 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.330688382 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346327656 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349544492 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.336896739 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.347286908 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.340521913 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.346397201 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.328287248 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.380207694 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.355254688 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.334595541 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.333763424 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.333354936 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.35092298 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.442372935 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.334745208 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.334114674 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.343345642 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.350818545 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.336048704 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.326812099 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.350895142 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.342850768 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.341061278 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.336012589 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.364239171 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.733078344 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353582671 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.332810235 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.333624429 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334126461 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.336198604 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.334004024 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33963299 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346143388 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347719124 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.734889169 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369389822 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.336135861 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.334458556 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.344416063 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.33348872 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.337375527 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351361528 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.353086064 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352421809 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.335243166 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345243268 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.336874115 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.350160636 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.34136728 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.773819648 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.351865053 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.339437506 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.732742252 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.361723753 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.767491523 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.366017855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.336285313 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.348551795 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.366274985 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.34837558 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.335396806 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.334535368 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.34184781 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.332995171 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.344016579 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34911516 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.340248857 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.335910553 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352483969 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360652425 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.346283966 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.336646461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.344928416 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.35476768 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.342754703 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.346544393 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.339765635 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.331093925 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.346118931 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.340297491 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.338969664 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.338168959 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.341084996 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.347140583 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.734599957 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376792425 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.333294558 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.333155747 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.336241704 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.34968293 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.736135604 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.359091916 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.358983222 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.385229255 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.338491441 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.338737307 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.34649582 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355124483 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.347797343 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.341264548 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.333253491 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.339095087 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.735792108 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.375913716 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.340534469 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.337379669 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35600776 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.341150222 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.335570709 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.354377221 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.345728938 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353229976 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.458878961 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.349417864 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.370682302 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.336401164 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.341901302 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.36822385 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3563905 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.370063683 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.342232915 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355976845 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.354583427 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.335933247 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.349643557 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.349402338 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.341185322 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.345096475 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.332990253 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.368013354 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353096193 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352581658 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.360514828 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.460277633 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.338158429 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.338562887 seconds)
done (took 225.429737989 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.403477486 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.33639405 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.428955033 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.337016404 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439554878 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.449494701 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.334511966 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.333946623 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.333799738 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.713873224 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.334446941 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.334336462 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.329680905 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.334489568 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.422575206 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337086705 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.334250096 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.701060826 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.338319652 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.414243507 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.330683855 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.334412425 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.337408697 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745598918 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.336979193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.332881174 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.425609946 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.338802494 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.685139039 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.33505552 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.336966514 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709156529 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.446859038 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.354963246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.347319827 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.345345937 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.448025272 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357781098 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434118884 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.421110789 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436768129 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378333638 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335772984 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.332420822 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.344022139 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.340674708 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.336014788 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.366246794 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.336720629 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.33676229 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.678902802 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.348394791 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346682556 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.337439593 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.33819161 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.360858531 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.337455451 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.34071216 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.43290145 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341309722 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416594174 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.722644465 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.74319668 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339567352 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.340360791 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.338498253 seconds)
  done (took 148.94901642 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.407155993 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413877123 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.45153731 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.36359497 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390790657 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.454391713 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.359851769 seconds)
  done (took 11.088291797 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.34631218 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.341399034 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390900688 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39318278 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342426377 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.52197038 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342789232 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353926213 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339567925 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.394650613 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.344016831 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343262834 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348941264 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343029354 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.389971657 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.354167033 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461190597 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343172327 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343719575 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493223523 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34056511 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.349153881 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.393757182 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.3540723 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.344806443 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.348274091 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.159446563 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344511177 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340453514 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.342869096 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340272534 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.417861903 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344273548 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.346308593 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343433432 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.461612756 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345995075 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344306528 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346268889 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.345652035 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34394972 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.343939655 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.344188285 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342614029 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.344569443 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366925992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.344326645 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.34363931 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.343220452 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345101723 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.394947742 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34511016 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.342080789 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.34123273 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.400608388 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351540159 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346475548 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.342096354 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346131626 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342751282 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.495526952 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.392900589 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.345072488 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392222267 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346783665 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.345445733 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.345222087 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.34599314 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399347995 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.346337909 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394104834 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.343670194 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.532618995 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.369501631 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348160956 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347829564 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.34895204 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347982893 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.340907915 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351667712 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.343735883 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.346112538 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.352382669 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343705984 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343837052 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.512842977 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456485591 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.343908507 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.358982181 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353097599 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.345502237 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.399523954 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.346998505 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344348354 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397880271 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467124296 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.402367019 seconds)
  done (took 154.691912676 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.350865665 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.355085205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348694776 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.3637482 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349073683 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.348235956 seconds)
  done (took 9.368807983 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.349202869 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.348583577 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34736675 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.347206317 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.350124752 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.34912005 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.349821189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348765231 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352319528 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.348718919 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.350474835 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.35128414 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.35087081 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.349293452 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.349945391 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348921229 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.350503049 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346780569 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.349123567 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350663056 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.453597071 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35066315 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350175156 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.349329665 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.3548387 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.350345995 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357598752 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.350894122 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.350626926 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.353217851 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.370470687 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.352046884 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.349493668 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.356678829 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.35627187 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.351772171 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35506592 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.352703341 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348544299 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351345104 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.352927761 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351607649 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35066833 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.352916006 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.35196619 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355502165 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.356789117 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358768416 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.352860716 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.353545521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353400523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350803726 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351988076 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.354087511 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.353033045 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372136882 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.356633047 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.353604907 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.351976718 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352793961 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.354031295 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.35273588 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353946529 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.357496978 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.350284734 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.354919473 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353272751 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358273653 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353980332 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.352368768 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.356128125 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.351408024 seconds)
  done (took 99.748499556 seconds)
done (took 425.093254049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.666185022 seconds)
  done (took 7.924242807 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.401498107 seconds)
  done (took 7.662508565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.511506485 seconds)
  done (took 21.778478496 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.404384839 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.399363151 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.365646773 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.372669645 seconds)
  done (took 26.802507177 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.604510572 seconds)
  done (took 7.863634231 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.345885492 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345245401 seconds)
  done (took 13.951540943 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.942622136 seconds)
  done (took 8.202106092 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.382534719 seconds)
  done (took 7.64822139 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.375060654 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.345679588 seconds)
  done (took 13.99384906 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.326918638 seconds)
  done (took 7.586984287 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.448095865 seconds)
  done (took 11.709553665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360035482 seconds)
  done (took 7.623526901 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.407454285 seconds)
  done (took 7.667324747 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.204084987 seconds)
  done (took 9.463740261 seconds)
done (took 161.140523945 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.347123293 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.346888083 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.34994842 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.345730807 seconds)
  done (took 26.649534257 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397226742 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387658716 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.388969216 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.398502205 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390548419 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.38815622 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381154347 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381174638 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.399156494 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391544604 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389770408 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.391090894 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.387861525 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379932762 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390589896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.389753397 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.399733759 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.390259125 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380813171 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392278051 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.356176273 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.399795038 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392481889 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.356240587 seconds)
  done (took 34.561746406 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.877595818 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.426548395 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.509031185 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408184646 seconds)
  done (took 7.483485687 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.407897329 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.409107809 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.420478143 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.459146228 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.489060699 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.419286527 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.380871007 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.377879072 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.364933085 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.410388871 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.48515965 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.42558034 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.497926996 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.356546369 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.539042675 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.356690108 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.356683718 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40926766 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.462137444 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.476781846 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.358476739 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.408972623 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.412184487 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.426749992 seconds)
  done (took 35.374020787 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.358756817 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375924757 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.356495826 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.355416689 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.365704522 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.357346366 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.357883714 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.359384558 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.356909417 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.363265963 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.35697062 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.368913 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.356758473 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.35777159 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.36395048 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.359186216 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.363980581 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.357058003 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.358381135 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.364696467 seconds)
  done (took 28.478740241 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.352068469 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.205121128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.703357873 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.60805112 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.351452488 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.352183781 seconds)
  done (took 27.836723291 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.424684254 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581405134 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365710511 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.702582483 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.799963572 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376154636 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.360715352 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.595636351 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904787405 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.892825785 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421511927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.432917551 seconds)
  done (took 20.125934207 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.356618856 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.359983372 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.360134127 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376427094 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.412705698 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386737711 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367578619 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.352814398 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.419364623 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.43983982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.386517311 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.413371161 seconds)
  done (took 37.900055142 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441914619 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39867933 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.282811287 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436420825 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100811641 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565972566 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364495625 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093347582 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.384173562 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628686114 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354729917 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450898002 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611709491 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354759724 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363217445 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305737125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606233428 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827054739 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357084182 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415556343 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389184262 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355484338 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.371687453 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587744401 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593377568 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338975191 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.629587863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.132004337 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633264317 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37728467 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367745996 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35706087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631338133 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007812372 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47929169 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563300929 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383643518 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911559297 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.346161761 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.279540818 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366294371 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366079299 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368428399 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357018352 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291852603 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362578364 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100950609 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.389948055 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.069791129 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357851815 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609056683 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460701513 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.361569888 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.350795786 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440698709 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372168255 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.362652934 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452264344 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947319916 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508212498 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367924578 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.315912041 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36115176 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.306722261 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977123885 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.388299758 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.362457089 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363113737 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294856818 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.278070265 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382651937 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506154085 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.384819233 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009360833 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036425142 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38546058 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312498914 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894401851 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37631315 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.301201883 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588074008 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135226522 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295166011 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.311751619 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29412421 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039371048 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368266903 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.733618093 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388649116 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104869227 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592899114 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405269233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384197481 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584743714 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.240114091 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361023371 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.360120906 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496140939 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382952256 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094355052 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32128195 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.365715451 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614859192 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.572806773 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359645111 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.335373276 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862572353 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39255871 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.38341124 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3670166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57700331 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.949640281 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401007403 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.5472521 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384876586 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140335183 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086257602 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37247807 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.37207374 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36223087 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633094372 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.09871085 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52299047 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430648872 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364108363 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363372362 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331375953 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220824095 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.245857422 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.554461352 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388523875 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380935372 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.365471042 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319898381 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.36235543 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371171822 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.150351602 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587626537 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375344533 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645918521 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299281887 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55159863 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373784855 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587367039 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.541064381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.394239324 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624763329 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372166059 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385974346 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382220335 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383873294 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46419847 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387290703 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375386296 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627175273 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367707109 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.36936465 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456053988 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.1501357 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369072485 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369883339 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36848719 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95576042 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366837292 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374438073 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257073566 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.380383194 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432442844 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373146217 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574889359 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.556509577 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388777409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.378638096 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.374995843 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595883382 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376591198 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.298489592 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450867596 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.842029144 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957324897 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403597583 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.300601102 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.07782284 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.059563734 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366942222 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.565561266 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367152339 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573807845 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407659904 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366367936 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946289772 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393376684 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309802834 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.380963099 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380444394 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.373319446 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368062714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.54646397 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562216916 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382643215 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.385971096 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512003707 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.382271121 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302666759 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.885018155 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37381201 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36873599 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.143427537 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403115627 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.311130159 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174363489 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6478804 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382475437 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626838089 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.409574821 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.408583499 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.370778875 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372082638 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383635492 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.378612852 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385039343 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.380598692 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.31006459 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.814707148 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936204458 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091439651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908152274 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710436381 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.396291127 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292344542 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103441537 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328726902 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034012392 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602004973 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113781092 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342803741 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851102738 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582904438 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143894218 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630836105 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607888808 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682318156 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.397016791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632088234 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590994799 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405130768 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374740922 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306264486 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.65349279 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935815751 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406231193 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459365477 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10950446 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40716299 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.160226944 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.392307757 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.06534671 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778240914 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.944671603 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760393348 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37161361 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392731158 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22327697 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405205153 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90197738 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99370818 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405821441 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.855288551 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33403054 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583396256 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.408597002 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.370031227 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.893017143 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.379775754 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.635331368 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625144535 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316035021 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381900381 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901257567 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.252100948 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.379970348 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374838643 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094310293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374847867 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6601195 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.392961537 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.567245886 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405253658 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308256412 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309594435 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.067651135 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379702042 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352139412 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845257522 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.380640044 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402243984 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388884622 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229968085 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632246118 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.388923795 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944747102 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624985129 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375481619 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406552303 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.379354952 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376172837 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.365216871 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274360088 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611589636 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419929972 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608442031 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.333881494 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.282498607 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452147917 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612403794 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.258312508 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375131582 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63967058 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.111661771 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.39420491 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084622907 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424424083 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.806728832 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410584694 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379952583 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404479797 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464770793 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587332985 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.412680804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.38869568 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776240722 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402888445 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385241771 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.390228515 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470962069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.592528765 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.579431081 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.156890171 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952558143 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114171474 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985461714 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659059185 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386726146 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379775492 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311624436 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52666091 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908009481 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652348674 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507041632 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.387151682 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40902806 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38240381 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400954314 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596700343 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654940195 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25420857 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380295555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049242495 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.261329332 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390726399 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.591497896 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854575256 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922642372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497955733 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379452072 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128658389 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67985168 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470947974 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379487387 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972358636 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.384381515 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.081080465 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.389550696 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384397884 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533828453 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63250232 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048821554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416182382 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.535714322 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.155324859 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.357067833 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644010472 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.839674357 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602041342 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986028476 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097880133 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6523553 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450798987 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593634304 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.514130336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528052476 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.382448284 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270891741 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381573573 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227319715 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.092029893 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391215652 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960309671 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670660022 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.386034202 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.384475369 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411484199 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.391332103 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605159201 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08048752 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6095362 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391338464 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388678186 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.375511782 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961779663 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665200446 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32548396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.386766554 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620446761 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645052519 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407925698 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.83678257 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.094645074 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930578848 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.357782439 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404921416 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394812105 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080514798 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968299827 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.611669657 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886847393 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050965969 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392387148 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666586842 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.388993121 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383313898 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667576718 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.388004417 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388390774 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604818942 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98238298 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164228853 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.398681186 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.389131635 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330119625 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.613626734 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414343226 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328620095 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392324301 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.793123661 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412309629 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516261805 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396995394 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.384926667 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395805414 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.148363702 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666162829 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390929568 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.383179653 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.390326606 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399017938 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484803364 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959364138 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407647099 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.0618932 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.735149305 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642633009 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395342811 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.372818181 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.38982984 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38718293 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.106852618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358631505 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401752284 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935549988 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.38866992 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.404615075 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391118357 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.603985338 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59964803 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401626466 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609368884 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413390523 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427772403 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.366753162 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182312937 seconds)
  done (took 1675.448535093 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.392376206 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.40975507 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.414327802 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.433704556 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.427880404 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.515175611 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.464292218 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489065611 seconds)
  done (took 52.844411199 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.387533816 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.552001074 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.419052477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.388105568 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.404269981 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.38903988 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.847898365 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.416462788 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404229135 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.398562651 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.404007711 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.401422772 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.048716103 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.406036312 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.392916514 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.377055088 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.399668721 seconds)
  done (took 66.341911023 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.467286229 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.74855254 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.173087814 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.40122168 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.427562769 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.394570231 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.896264719 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.405370022 seconds)
  done (took 59.213725084 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406248194 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40664695 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.407341576 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.407086482 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406966153 seconds)
  done (took 8.333652915 seconds)
done (took 2081.857170181 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.392702282 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.395946021 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.393337273 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396514904 seconds)
  done (took 6.87825448 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.371439329 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.120518947 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.377555922 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.392811111 seconds)
  done (took 18.56127143 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.403968597 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.398858482 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.069559303 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.01434002 seconds)
  done (took 5.386210415 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.140849179 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.152962872 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.136895426 seconds)
  done (took 7.731057165 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.390009516 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.396369934 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.394496731 seconds)
  done (took 20.479537127 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.684557849 seconds)
  done (took 2.985578092 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.537302797 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.586451343 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.709195491 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712544047 seconds)
  done (took 7.847307589 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.778287498 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776045291 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.575426111 seconds)
  done (took 6.42924979 seconds)
done (took 90.40246707 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.13305813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.394774468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.596759429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.103250409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.624219566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.598511789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.606412606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.07709119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.614638911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.602402933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.101038531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.625564321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.556161816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.397361819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.555453395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394620334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.672191514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.178049558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.78753603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.988789268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.601870862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.745310888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.934698841 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.826498354 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.642650896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.551666786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.338713282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397592531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.961249009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.41753575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.559547326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.159870539 seconds)
  done (took 190.045710777 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392047725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.409709456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391378677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4083351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.393181853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413587646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410358567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.421106151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.406983162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.392906925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.40628167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.391969886 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.409143925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.409094427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411621938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.393220527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.404027367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.393955719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395610994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.393172103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.395562961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42456769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.392917426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410236763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.394446286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.393497685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.394232198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.393405543 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410181358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410901768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414293556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.401783992 seconds)
  done (took 206.186634164 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.394193929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.394168947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.395101755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409156192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.396237232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40357566 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.412401552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.401658856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.394855027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.403103952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404087837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394126829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.397073369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.395076408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397835679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395554144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418949714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.415270037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411864474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.402814418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396885313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395206683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417561832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.39629331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402740787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.39610856 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.412348365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.395956275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.39461377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412692781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.404012962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403073648 seconds)
  done (took 206.169349423 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.598556576 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.403521345 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403766845 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.361592669 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404628226 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403700732 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.399823058 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.593389017 seconds)
  done (took 14.874176274 seconds)
done (took 618.578703143 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.661986844 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.384863534 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60392045 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.431030832 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.154370794 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.441507502 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42418436 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.592261964 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.338934642 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.601409694 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.623488113 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.438091975 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.766809935 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.422612804 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.678472957 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.529324225 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.322448287 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.456021487 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.743468546 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.971867368 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.688584492 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.921075334 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.611931193 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.317571779 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.804066532 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.91384434 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.170996703 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.32427961 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.447110727 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.740851922 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.059117241 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.412922141 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.486086387 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.48336741 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.541832806 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519398657 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.39516899 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.48904431 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.630383525 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.687061624 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.949989131 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.160230044 seconds)
  done (took 94.650469077 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.389823089 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.388623227 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.388048777 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.389638142 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.389910011 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.389059022 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.389147292 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.38732611 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.389249508 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.389634117 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.388709091 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.390853338 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.389515611 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.39022417 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.389104805 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.388824995 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.389938922 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.392029011 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.389070373 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.389935915 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.389986928 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.390189797 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.390149631 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.389077316 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.391086955 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.390108903 seconds)
  done (took 37.440714829 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.407859593 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.654157784 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.819203064 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41649999 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409290465 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412903267 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.486866252 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.417598012 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412839251 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412875567 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.577809994 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419463102 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44590162 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.844908988 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.412804847 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410700338 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409288769 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409904344 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.663374852 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426509374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.508841177 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.41842553 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.486463309 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.428615363 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.434060807 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410869052 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416115533 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.974963328 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437662434 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.578966246 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.185597444 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.490948372 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.924553235 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.850169655 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.181280187 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419441448 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.411353636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.583742112 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.422291041 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411378207 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.487469256 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.419612818 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.828259807 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.069385709 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.438498299 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.411745812 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.995661056 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.609786758 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657320601 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428731057 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.845826253 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.415978329 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414153057 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414246566 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.649576793 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426751232 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.412912555 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.971591151 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.443131453 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.489001934 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.421934831 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41317146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.670421399 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421123124 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.65897254 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421739982 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422348421 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.434316121 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.824767287 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416649435 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.087738984 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.438728762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414563593 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.58010574 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.666319615 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.035117586 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443505445 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.674173983 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939939651 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.513973085 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424567378 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.96488839 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.517908681 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.425144981 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.415990508 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416378699 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415318094 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.463802812 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.487818089 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.029971742 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.100227464 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.005147003 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.513296096 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.433961918 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415813211 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.972869127 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.434068858 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415269075 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.821593467 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.088729228 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.440302749 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423434535 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.093599834 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.44304118 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.493199145 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.429598045 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.834871035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.425159078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.466016539 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417039262 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.42232295 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.4405222 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.493583303 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426729723 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416570403 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.066087834 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.616756713 seconds)
  done (took 186.002722306 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.413077862 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.410059717 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.41749976 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.409577857 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.409025853 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.41821328 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.410248393 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.410413695 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415497491 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410789723 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.411718101 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.411842452 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.4120374 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.41240924 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.422198671 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.416539769 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.06616209 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.412809449 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.411121524 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.43085175 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.201851161 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.420816566 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411346885 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.432060595 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.411661648 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.414368892 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.415378245 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.413799431 seconds)
  done (took 154.373222804 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.418950237 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.973111608 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.443978342 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.545969219 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.444119663 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.416542572 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.544502393 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482421289 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.443668946 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.417531221 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.415956897 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.713567861 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.422565017 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.926698257 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612111245 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.572029538 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.934369527 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.445130588 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.418122672 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.417352481 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.548024609 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427315919 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.717273041 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983193215 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445809192 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.976284779 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412563674 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.420775602 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418506379 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.978294046 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442178225 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.72087384 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.503999471 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486091211 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.004334307 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.952194155 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.95274724 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.573296707 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428235645 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419097288 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.417880359 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.403871701 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.971776175 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.43896686 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.421146693 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.961148417 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438839454 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.421566771 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42701958 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.41880093 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479446081 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504070714 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.742953641 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.977183845 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.513878321 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.440511559 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.549649835 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.820062823 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.429399619 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.929645795 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41186096 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.976728555 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.440314161 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.403481049 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.421674283 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428108411 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.568457803 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.558820912 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.93755509 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.443753655 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.931236477 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.593774223 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.427000073 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420281791 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423404948 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.97728342 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.948653275 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.59322834 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.560880572 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.615385254 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.414035732 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.422369681 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.405655378 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.498560755 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.430256284 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.979728717 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.947394168 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.448851339 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425043852 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.424062134 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.425143226 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.594552442 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.004380361 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.516051844 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.929899251 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.747026953 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.723198285 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.42541188 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.482266723 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.44637612 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.723556421 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.42561886 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.481210593 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.885313819 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.728385148 seconds)
  done (took 168.866961619 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.658119701 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.595795696 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.518051163 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.57361117 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.022234826 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.98686895 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.718842364 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.562348268 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.53971344 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.686431104 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.574037707 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.519038427 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.634388691 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.506277116 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.170754418 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.511770793 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.539015349 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.577957166 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.585590753 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.446846588 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.101095366 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.709312298 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.614159749 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.306265673 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.524921537 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.209844723 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.99306697 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.007570829 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.609549563 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.724324075 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.961579785 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.552186761 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.391269643 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.126247027 seconds)
  done (took 68.085738245 seconds)
done (took 710.727856354 seconds)
SAVING RESULT...
DONE!
