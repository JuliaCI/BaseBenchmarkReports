cset: moving following pidspec: 28623
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.960698529 seconds)
loading group "string"... done (took 0.607393862 seconds)
loading group "linalg"... done (took 9.618279116 seconds)
loading group "parallel"... done (took 0.198329205 seconds)
loading group "find"... done (took 1.520617278 seconds)
loading group "tuple"... done (took 2.229051353 seconds)
loading group "dates"... done (took 1.479496932 seconds)
loading group "micro"... done (took 0.234377454 seconds)
loading group "io"... done (took 0.578374018 seconds)
loading group "scalar"... done (took 46.830617367 seconds)
loading group "sparse"... done (took 14.247270387 seconds)
loading group "broadcast"... done (took 1.254549463 seconds)
loading group "union"... done (took 12.722005928 seconds)
loading group "simd"... done (took 2.728910535 seconds)
loading group "random"... done (took 10.904344817 seconds)
loading group "problem"... done (took 1832.769093485 seconds)
loading group "array"... done (took 26.187638364 seconds)
loading group "misc"... done (took 1.207309793 seconds)
loading group "sort"... done (took 3.773314677 seconds)
loading group "collection"... done (took 19.336643137 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.762392452 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144736247 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.223358914 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.374398774 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.235173519 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163480709 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.177367592 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.584406665 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.949591586 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.287259337 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158367968 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.594260191 seconds)
done (took 6.300581104 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.258990139 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.394801385 seconds)
    (2/2) benchmarking "String"...
    done (took 0.181638059 seconds)
  done (took 1.161598118 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08017372 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.187097108 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.113783481 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.114115937 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.103198644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113882949 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.113153359 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113354303 seconds)
  done (took 1.446431805 seconds)
done (took 3.540962989 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.5529926 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.899604428 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.57270363 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1828927 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.203980911 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.183483367 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32113674 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162760875 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.126816696 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.1119769 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.208389932 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.394184206 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.520497699 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.058831767 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.10709461 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.114103509 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099331989 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.722696469 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085966637 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.136253468 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.595052395 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119718332 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118427036 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.129346334 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206654047 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137846651 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169902142 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.095500219 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.680121749 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106518206 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.234786257 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088334847 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.176838161 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257446101 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.084708449 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109549142 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666070644 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188611869 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.120253906 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104431456 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.701464573 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088388363 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.244403571 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110633608 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115079243 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188660883 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.127496964 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096598637 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093784063 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101670344 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158815196 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.494097856 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108571386 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174132613 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109739278 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.721579325 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102095936 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159717067 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142747224 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110014018 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.086943678 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.11289389 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154802645 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.114966536 seconds)
  done (took 20.462463001 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.163679093 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.17062605 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094889146 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.148491905 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.158912181 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084555604 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100022336 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082390722 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131317671 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192810854 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144325608 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.188763095 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078840949 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.104497625 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145983735 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253312555 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110374504 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12475093 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102496327 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108218573 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12968133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114779729 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111709873 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113268815 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171613811 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20593072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113108482 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124563137 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100531223 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119565425 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142552739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152270692 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09290583 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087556033 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.202065701 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120870775 seconds)
  done (took 5.39953997 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223254928 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119077966 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.239761013 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182161469 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150337087 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182764881 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145734575 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304358943 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.25045926 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187637116 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130564904 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114612715 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095281071 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085076576 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095976586 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.704044765 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185867002 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154019038 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152679657 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106746973 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098256769 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.716347767 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106467365 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084905929 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105718606 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080830812 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22264401 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107950756 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.359756898 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122287033 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109666195 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132051872 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133894548 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195258408 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138687637 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146460131 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090817838 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100490673 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222983817 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11248421 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096588682 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129164562 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133877554 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12428279 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104298769 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113542215 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.247693007 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088443865 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124108196 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.148752658 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.216942097 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.138120084 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085952463 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.396637195 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103683121 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10862982 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100956561 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.297139926 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140243577 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086202036 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097332907 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103986432 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084014517 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448741818 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097447042 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.373515123 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085294619 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.188253809 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10128096 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095426436 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105609249 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103398661 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10760494 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099624519 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082313884 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099966798 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096213634 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090951385 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.161246007 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.124626643 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105019807 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096821502 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150787938 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.123158811 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103523225 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128268029 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103633413 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097791069 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130129953 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088070761 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099347368 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088648711 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.192488745 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09283121 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103929573 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123378411 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102535204 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143681892 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086201979 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206299933 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099439781 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12620552 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102088986 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117122565 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125725208 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099892454 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102884162 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082272894 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099342455 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157967286 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085075473 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099302894 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08863451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.116640369 seconds)
  done (took 25.54128681 seconds)
done (took 51.989007852 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.508497279 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.121000138 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122933422 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122552726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120403334 seconds)
  done (took 1.665999866 seconds)
done (took 2.307995427 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.390587217 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199362962 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124905014 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197872693 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108084955 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.221328746 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18881708 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124987254 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217759677 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.104981793 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195961883 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104743499 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109013822 seconds)
  done (took 2.963217027 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103986888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125823282 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088771315 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118045921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097448817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10348813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117031155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132757856 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102357684 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109677145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083706687 seconds)
  done (took 1.823221509 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101342059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122479988 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090121762 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114930312 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097152905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101485044 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1131413 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110142454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1148122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109143301 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083761717 seconds)
  done (took 1.802457945 seconds)
done (took 7.22251935 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.122269246 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.384760702 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.153800681 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20422743 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.384904124 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.244545203 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.567177744 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.166903295 seconds)
  done (took 11.08640366 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.175257285 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105758083 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0918898 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10610034 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092332022 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104668949 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103728246 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094203716 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104718462 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092888656 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104379485 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103237998 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091985268 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105219865 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091696749 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.105448167 seconds)
  done (took 2.386589638 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141122092 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138872255 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098629045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117896985 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108968683 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096854261 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.112998843 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112301393 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095174474 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.109632532 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117283053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102178029 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.114480742 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10758162 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112523243 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104328438 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109213711 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111220831 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100680087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112582367 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116143688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097091486 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114092189 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.1163283 seconds)
  done (took 3.421125655 seconds)
done (took 17.538670891 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178008115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10340783 seconds)
  done (took 0.932546538 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.153400858 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155643379 seconds)
  done (took 0.966549453 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118644423 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.104086707 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143468835 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120715778 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101989998 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.089957041 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137211012 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103186708 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.088513989 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103102489 seconds)
  done (took 1.771177334 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094432592 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10659622 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.115261695 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.152264595 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100645494 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109021461 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.108963636 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094236361 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109931964 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.104149818 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098736543 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127117204 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110610907 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127267978 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093943883 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111598798 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115423318 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110961989 seconds)
  done (took 2.651870552 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089540167 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103493815 seconds)
  done (took 0.854357223 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094527706 seconds)
    (2/7) benchmarking "second"...
    done (took 0.103196171 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094319087 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107942389 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.103215263 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089717071 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103878417 seconds)
  done (took 1.357252063 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.561375643 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.280850312 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.385739664 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.126150717 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14809117 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.398575681 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.151238945 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.122258397 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.119643123 seconds)
  done (took 2.99949964 seconds)
done (took 12.190060368 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096538711 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.23778192 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.616739829 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129762918 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089051772 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160550071 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.320809283 seconds)
done (took 2.315583023 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.365790117 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.162301452 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.096403551 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.101499432 seconds)
  done (took 1.387650723 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08397788 seconds)
    (2/2) benchmarking "read"...
    done (took 0.110287232 seconds)
  done (took 0.861849309 seconds)
done (took 2.923265447 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088181803 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09980237 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086322648 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09922981 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.08721292 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099678578 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.1306852 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086656026 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101233825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086191591 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.100548604 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.085295813 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101997725 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099034618 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087508426 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099030654 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088331834 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099630946 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087349481 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10114919 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085528689 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100726368 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.099667355 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087122803 seconds)
  done (took 2.993571302 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110566223 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.104798824 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107541561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09307155 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108978253 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105916736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093243148 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.104641126 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106169239 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090415006 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109292571 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107061726 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090596327 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.108374009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103483627 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096139446 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107076362 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10385735 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089852506 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.107461746 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106832287 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091272199 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.108851449 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106847647 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.094708754 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107912467 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103717029 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091070761 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108051344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.106755716 seconds)
  done (took 3.748108666 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096818879 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097917442 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085558974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.110673241 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083764946 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102802869 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.097094611 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086310459 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098953102 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084570845 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101783158 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085170567 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098422931 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085503645 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101399319 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104859264 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10454657 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.099689333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083939613 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101310252 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.104276044 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084863128 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.101599401 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085139223 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098443012 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.083714823 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09941827 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083562423 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.10021662 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097842535 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090687222 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105698088 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084434596 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.113431352 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105083732 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084759962 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108385092 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083950646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099994937 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084677457 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.100005842 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098092239 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085265286 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.110618925 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089619151 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099471689 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084726325 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101515016 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098326819 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.089068616 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098439307 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085052732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101272971 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087111628 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.105987471 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09730521 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.086620553 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097888609 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087172877 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09877216 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084596088 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098470281 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09215337 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100407585 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125543113 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097388827 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099859315 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100358047 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090377141 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.108049344 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086988958 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118879102 seconds)
  done (took 7.592804326 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091195978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114002766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08965363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104698259 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099466812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085914114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109796198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084732438 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105433696 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.228593868 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089173227 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105868736 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104189923 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090299417 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099747926 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091536943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112432738 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100280772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.086385406 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102600286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086068283 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111769676 seconds)
  done (took 2.975134306 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.259401414 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096402743 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.156732623 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119696434 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125178101 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119824907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093761421 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11101582 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105674356 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100408367 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114898293 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107949555 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.125199127 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099806196 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115373348 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116358117 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107249988 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101427196 seconds)
  done (took 2.861560706 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106438382 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.106711543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1291091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091216142 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.106165332 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091448324 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112569441 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120492439 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105124173 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092462742 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115425778 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105141491 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091077596 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105595201 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090750079 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10579861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105119649 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092056137 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114188035 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114165154 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113264555 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101020748 seconds)
  done (took 3.004093442 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10737766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106176712 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.141884437 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094919153 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102357992 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099964877 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097067116 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.106518614 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112743584 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.091598693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106743632 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086861703 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.113908091 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105226726 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099634961 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106697273 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105349366 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092192413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106525499 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08730736 seconds)
  done (took 2.759785857 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181047224 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105519961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121707492 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133793274 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120737394 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105926711 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133189563 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120672355 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105854211 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13741329 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121162737 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119223617 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132606391 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11444518 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121128946 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133217913 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132283925 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13220303 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106665413 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121856207 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135664879 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106369258 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132239865 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121374367 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119751957 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106711814 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120714742 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128475771 seconds)
  done (took 4.163319981 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088804868 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101389951 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088336866 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101756525 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08831071 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.103709859 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08854195 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103065976 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08777361 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103291231 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.102130783 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088887414 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100933765 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089015011 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103817123 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089119947 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103325667 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.088268697 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103025373 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087650564 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.104007649 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103136424 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088847708 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101616829 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089530406 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102488784 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0887603 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103167294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089016268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104412948 seconds)
  done (took 3.579150979 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105043979 seconds)
    (2/2) benchmarking "in"...
    done (took 0.131661978 seconds)
  done (took 0.932545532 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.090869223 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12248899 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086042151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110346637 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114260008 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08984151 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116367542 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113361344 seconds)
  done (took 1.540484646 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.156718539 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156234413 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096019014 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118153662 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.156478644 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148681035 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172822875 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.110195517 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093077405 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102123088 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152372456 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100809495 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095866693 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108122012 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109145031 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102049373 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102595937 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100431565 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.11310818 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107440216 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094846523 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118583922 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112843271 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100025214 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103361465 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11302615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.101105664 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.119564899 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107219933 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098990326 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.109507943 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.10009391 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.093646122 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.11055648 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087350723 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153350367 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122045987 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107294456 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095598994 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111783092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114490228 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088248383 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114122022 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107985798 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099661789 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111069567 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.110620167 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.088360283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101589633 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089642696 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.102681289 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103789888 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087436596 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112738462 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096099126 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122415463 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.107888196 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091517355 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106448314 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105794487 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09360838 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106184879 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112634091 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09543918 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.119626585 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.1108769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096377 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.103362821 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08592619 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104047121 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110766611 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113100614 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11501862 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.110531884 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096121774 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.105057493 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10609114 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097681772 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111259157 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11322454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095270971 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114794593 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097374575 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105392911 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105638726 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097667131 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107482961 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092956876 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102502371 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127330393 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091434156 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.111246131 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102003483 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098464757 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.107474164 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093126579 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103256228 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111511846 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.086766317 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.112240748 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09663832 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11047327 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115782198 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110337617 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09723399 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111475867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.147216649 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091990318 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106398595 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.102340135 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096142271 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105217169 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094705531 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.10281996 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106768719 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.091959317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112168057 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112543102 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0927507 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.11048729 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097257979 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115871739 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107531513 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086241767 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107016487 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.109347963 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100427365 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116769918 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092429201 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104393099 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.104307057 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097003283 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11048718 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108366935 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096879016 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109390351 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085774274 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105205312 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112931554 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.098648024 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105602926 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109747323 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098127254 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.110623653 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092455528 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112967429 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105553259 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086687138 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113637055 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107378803 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088677236 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115638706 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106648733 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09277395 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107588154 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099814767 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107689562 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111460961 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093635874 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112577478 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096575625 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102971721 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108702212 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092661924 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11694676 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10634291 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089223646 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10364484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098228819 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104022093 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.109806771 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087431114 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107881937 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097464854 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10532792 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.108805359 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090591413 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124834872 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119794415 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09695624 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111281248 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098584 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.111418636 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110286632 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095146377 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112963354 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111908605 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097637344 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11031505 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097067644 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107629465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.105223605 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09395071 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114502167 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087386227 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106143733 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102603776 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096640118 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116364157 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110602415 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097129579 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109003372 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095288945 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117269081 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107703158 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.094343882 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104604148 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094977572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11804584 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113105425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097498114 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116166278 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108615734 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.089143937 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117021449 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092741769 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11284903 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.103771589 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088099857 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104744548 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096478207 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.110444872 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105974776 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087704805 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114286844 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097769575 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10974355 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10321729 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.095076913 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119926423 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105135518 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095799396 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108832243 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111050964 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107952983 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104223011 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107989566 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101386678 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.112080197 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.086430581 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113013553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.109408141 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090610679 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.110274897 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.092454157 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110194033 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114640255 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094653526 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104653292 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091194685 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.111114837 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103338711 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08982082 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114857881 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093217051 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108781408 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11921659 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097560065 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113158199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109208169 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09530744 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.113357388 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113533749 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094687287 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.113771939 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08944896 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104638253 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108486629 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087229716 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.1058359 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090540436 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.113280996 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109220615 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094222327 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.111147208 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113962516 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094040531 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114193397 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.132696186 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089048851 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104313501 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108952037 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095496922 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108579043 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107211282 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08965638 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115102102 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095127576 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116665501 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107151018 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087801883 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113519221 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091502291 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.115876037 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.114615503 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09855719 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10739425 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094755724 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10972281 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120417589 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088155256 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117551266 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111716505 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09495746 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109361598 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109274223 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091490283 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104762182 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092544642 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114551192 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109654764 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09430481 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112053017 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10916067 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092018223 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107465217 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097883003 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110227595 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.114934835 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.088229977 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104901251 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088386555 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.114216321 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113130823 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097952114 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107787558 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.093348924 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115204291 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.110782359 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.087137745 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117632168 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097938459 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.113337817 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119743958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086588155 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109008751 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1209195 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086721933 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110806935 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.089000436 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105238487 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11523411 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09807565 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115255506 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110079463 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088206581 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106174617 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098362651 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111876787 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10487184 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.090308322 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113596278 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089315346 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110530134 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.112012749 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095775704 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114820934 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096089677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11223289 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109664893 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096948968 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104984493 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088843743 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104846906 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108795983 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.097759897 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105889649 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.088470424 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114097552 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.110027529 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093542095 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112902577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090490227 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115461747 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11210289 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092984177 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119418618 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.105048981 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094093288 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.112195643 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.095733899 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10556936 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110456151 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094092979 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115801874 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113675293 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096591378 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113781182 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095686134 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.107792884 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112793842 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096603268 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.113112666 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087361744 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116029423 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116803852 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08993305 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110753362 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109925317 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090615305 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111629771 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098073649 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110765335 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117462878 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097301255 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110998396 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11298309 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097192643 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111110419 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098346861 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108129562 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114454626 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088500561 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.119062784 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.110839581 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.098651708 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109161342 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08880137 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114214395 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.112119789 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095550818 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117634719 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097976622 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10726353 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105368485 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.090514624 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110981794 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118089321 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10075585 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111768164 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094109813 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.107441216 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105790359 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098495537 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107267853 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091974592 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112890085 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116013424 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093924763 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10782133 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094844462 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117090508 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115347564 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112692664 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09008296 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112990251 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098973116 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111127689 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107228061 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092824334 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115842799 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094810309 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109025965 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105395561 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103734849 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11538891 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116316713 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091294199 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113449948 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109003434 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.091354714 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.116293884 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092785967 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114306324 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110809601 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096732092 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122589871 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104639178 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092987111 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120955372 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095923547 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117678137 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.107511363 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094007848 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116011771 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115696426 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090680943 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106799478 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089783638 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111534043 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105555279 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090639166 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121677435 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115697643 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094433686 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111874634 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094811168 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.108919671 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.106688177 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089948299 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115985551 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092477894 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120470522 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106334953 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088998764 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10756185 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095861112 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112597767 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111657031 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090644108 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.107216707 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089605877 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.1117117 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119329719 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095555573 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.113532816 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111884772 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094892637 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.108699465 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102487742 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.105830915 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112822904 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105939882 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116464301 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114247997 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097521051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119209502 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.115617137 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092188462 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115580002 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094257417 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112613347 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115869692 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099127103 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129150135 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112067912 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08947724 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.11387948 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092233294 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108413691 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12025274 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099648254 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117020345 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113686225 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091935469 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117664344 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118698513 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096423992 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.11289589 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112133598 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.095344953 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110437835 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.094405471 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109647841 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.115856966 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099122284 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114127153 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.099845833 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107662778 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122623931 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101908777 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116756569 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105882378 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090351499 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107195255 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.090831357 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.117041609 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.090445172 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.114004385 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.111803588 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.095666915 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114825226 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095303313 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113308245 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117766476 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.097001213 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.107936299 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09663246 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112528014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114679133 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.089414754 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.115950181 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.11538665 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099379388 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121193774 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097919209 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113028118 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110603782 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096876944 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108956341 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11495381 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096427968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109764877 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091083527 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116473227 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.115941864 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096265098 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117213337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100644936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113556413 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116664947 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101635718 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.109258033 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.089417078 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115926558 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108982817 seconds)
  done (took 63.630735769 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.168320059 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09824818 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109557886 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090760396 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140206769 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111368955 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108145613 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093616666 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110963998 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125244771 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091550729 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108328019 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135840893 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141564086 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136792514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10841239 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110718002 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109653111 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090975273 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110246673 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133846607 seconds)
  done (took 3.192276847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115942057 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.131379312 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128506861 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131583261 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121462464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.109448145 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.129032114 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128162397 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130296773 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122677177 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13174573 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110059996 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123743628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.124321211 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122721228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105727315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.132084458 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121333215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127960097 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.128934171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105593029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128404006 seconds)
  done (took 3.468830388 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103096147 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.11455696 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099564705 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.110908125 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097582585 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.112214144 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119519038 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.094107087 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.121281799 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093447928 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108936425 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.111496766 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099574182 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.111822465 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091596327 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.111996718 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119206134 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097557695 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.117230535 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.092932296 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.136912918 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.112119888 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.094308016 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109624108 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.124497791 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.098519256 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115403931 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097170976 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.109620039 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.115082843 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.093798229 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.115523185 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.097754597 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110237692 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108168826 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098083423 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.115514264 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094375662 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.11252461 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.1153449 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094776605 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.11696909 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119206797 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094430565 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111767771 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09612525 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114585675 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093561391 seconds)
  done (took 5.908795648 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153300303 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169885494 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.106570139 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138246967 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.115741423 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.130370049 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.117889672 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153926002 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099046146 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12057679 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.13749672 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135096946 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118396926 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105831673 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124484394 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12260079 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104790644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.119519132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127833728 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101187393 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.129480751 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122427223 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.132655398 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135410906 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103947301 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120878502 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118394743 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10680218 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.137448284 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128325575 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.123213713 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127202087 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117576439 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.123806756 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120316706 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101880925 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.137888452 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121390505 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11957383 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098428428 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123735434 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125828412 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104079165 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137344623 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122743267 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.121800711 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101326975 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.118191108 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134004623 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121205717 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109626741 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.137476241 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122476829 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.123789582 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107693007 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136080078 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.120398905 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.12107484 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104491907 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133210309 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118864628 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104419883 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137175535 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120290239 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127934542 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135973655 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107262774 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126304114 seconds)
  done (took 9.273648452 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108618627 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.143123404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135454163 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136259769 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103437699 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123047627 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122922623 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.122715996 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105193613 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130705326 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122660036 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.209551375 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.1157876 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131186412 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104003847 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124512519 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122733026 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12299852 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104867307 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123459805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122297344 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134980681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10482187 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136131631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139232666 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115931632 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10550294 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124982163 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136279363 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122951823 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138264398 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.104402696 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123688945 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135591556 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138079321 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.123234563 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094707689 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124049841 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122454435 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104825951 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115164915 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135442132 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123450727 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.098580122 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123195886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123332583 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11726937 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138176806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13113222 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131262434 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123698945 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135460563 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104724019 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123393435 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135661486 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145174483 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135367731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134000336 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104079744 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13611793 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136481362 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145918398 seconds)
  done (took 8.538473751 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094725631 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112236184 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09562841 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11249875 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094862169 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11324904 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09423796 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.112465551 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093952093 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.114299194 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112444366 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095144482 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112198554 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094522711 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112419802 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093946698 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113797249 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094212295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113686009 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093763029 seconds)
  done (took 2.852300761 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106707355 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136593195 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116771224 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107515309 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.117835779 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124447992 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09814186 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117210979 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11658248 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099442508 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127735028 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127405511 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098976385 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125622668 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128038898 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.124457748 seconds)
  done (took 2.655326822 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.1208003 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130561514 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.172615985 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.121298234 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114196973 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10654638 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114968654 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.092570483 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.114083739 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122960431 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102385397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126678213 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.113686798 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.093451377 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.116763146 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101788083 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.114297159 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121223424 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.096116379 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.174059506 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123795105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.120800417 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09660583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117322772 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.118940255 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.103873727 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12510402 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.113820982 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096005457 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115864315 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.119286697 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108065212 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113292337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103097731 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113379926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112845819 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.096781423 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.115568792 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.102217691 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114886384 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.113036077 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101587916 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114614001 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.115545031 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095120647 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.115313303 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.093626398 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.124003946 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.119673627 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101764407 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.114513797 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122637917 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104437028 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126654247 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125318908 seconds)
  done (took 7.073518321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11118386 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120191026 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.121801455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094013787 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118021291 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105623259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.118667184 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11937271 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100212521 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112183013 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100161882 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121960627 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119204223 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100650252 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119771939 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118163095 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09256998 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118996747 seconds)
  done (took 2.797438767 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10464326 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116352011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1026278 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.117784567 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.116781091 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097948282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112933686 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.092890988 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113212389 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097448073 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118885283 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.116976452 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094060172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.116451765 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097131217 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1171742 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.116857445 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09421895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.117500427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095646963 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117337199 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112199945 seconds)
  done (took 3.175383692 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113048146 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.177700819 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.129288622 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18823446 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.118807169 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.115553598 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108551216 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.117506201 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.136204305 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.096685022 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.116211899 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.114800296 seconds)
  done (took 2.320588159 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128070238 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157342071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115571584 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098520683 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130998985 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123511533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122687922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105136938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134309285 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137663685 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123624641 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135044729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115342495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136568583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128959199 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130393878 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123550072 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104691777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118610768 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147086299 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123835387 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114762507 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124416064 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123617147 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123160869 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116898572 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135426869 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140172519 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123488336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13382964 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129907715 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104761042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13462972 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140902588 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118171274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115724183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125686143 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146482437 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129749989 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13639032 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099107615 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131551214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134498766 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132015273 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135453032 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106692295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132096361 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124306204 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12296672 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156203882 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130270622 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121306083 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130134106 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134680489 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135574656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153566462 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139297419 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136155005 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129064519 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137523825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136130827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110336594 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136366167 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138910356 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128710496 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136838314 seconds)
  done (took 9.263919217 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162528123 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097246015 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123363174 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140323062 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135107085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104945522 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123983385 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123463403 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104806903 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120494043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174066289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123799636 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137488529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136673036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105263479 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123117105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124127769 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136010021 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100421206 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154256469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12434527 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135944427 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136819023 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136263559 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139094236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11015202 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124635841 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123813335 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12410645 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105077785 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13249501 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12403899 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137408482 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097504864 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137653853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12387938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12408397 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112040802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124746486 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129085577 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136606902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146264327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105183421 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125798132 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139293756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124268609 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123813776 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102009014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123649851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099249143 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142721759 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140747811 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139735669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136997268 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125478064 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124591761 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105165037 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126219763 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124198405 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111496208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136583308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124370007 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154344318 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123862788 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12471892 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117603706 seconds)
  done (took 9.140763676 seconds)
done (took 170.111004889 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.159263575 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.181697397 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156229949 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156168929 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.112603801 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146273457 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126589074 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.156138413 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111171503 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091770189 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112561885 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095993807 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178964246 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111260969 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092139729 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115573057 seconds)
  done (took 2.907823683 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.21610069 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310406939 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134112422 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116931908 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101340389 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115553763 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.096160829 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119085133 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11321281 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106049102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11663898 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.114593489 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106877053 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.116467032 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112949111 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095497288 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.126759851 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.114326945 seconds)
  done (took 3.138328329 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119656283 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155626893 seconds)
  done (took 1.083926412 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13208619 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.221591851 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302472108 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173784869 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.144302427 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140257494 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.17583628 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131783839 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.210631181 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139399029 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.140537966 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100941518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146423802 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.126075726 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11031953 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12034332 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149530676 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.128734844 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.108920773 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.123090232 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142845206 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10162498 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125503756 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.129046572 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.200062652 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13877465 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.122051079 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103319463 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121687054 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.127250914 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107176381 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139321934 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.138273219 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.211625255 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105936123 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.209188234 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128960752 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100967173 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.127970118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.118541418 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104878649 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124343073 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136872333 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118366834 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103248724 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130083959 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.121171653 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101815487 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1298266 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132386021 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128928236 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107870148 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.206675212 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.132658121 seconds)
  done (took 8.312702374 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.92611986 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163349561 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098520487 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.056302454 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152005763 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134088967 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.924376035 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122871668 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285131774 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.914076428 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137536162 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110216186 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.291068907 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.278160777 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190829333 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374133611 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.77911993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132825102 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149253786 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.168249554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124898478 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128323955 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140512827 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449721215 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100859247 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116964331 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123976409 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11171833 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.204749069 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.096687497 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121538111 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.227420638 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291722339 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234613437 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121090161 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097161128 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116198422 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193498806 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.307625248 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.252982011 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188836669 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112882245 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115736235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110282773 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140433176 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112627921 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188350025 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.219368735 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.198630913 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122167872 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131106563 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128500675 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110025215 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.206307769 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.093886268 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.400036309 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379804639 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095737139 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127146791 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137950443 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.302696723 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117129448 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263562504 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146505331 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247018438 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096628737 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854293115 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.211822549 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096243703 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127208581 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124876599 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122673664 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109312586 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.202118134 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398413075 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13240822 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10264783 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116263999 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251376505 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097028055 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115647721 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188882007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120838522 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125958026 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115225827 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131958099 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.21812479 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.275362672 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135007416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125594548 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102112941 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131786123 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120974437 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237018758 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.256890001 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.203627242 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.239592643 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133346397 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.210819557 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191943201 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130790104 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.197101406 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126814822 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136929001 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132074314 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.254178655 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160010954 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.117555321 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102541314 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126367904 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162626974 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120481094 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105682476 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.215535306 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.492602982 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.192397415 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.116010648 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102376221 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128075531 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187348995 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125935631 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297164394 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128196591 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193611461 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126876523 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114347209 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107359701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.210680995 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13286736 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106425094 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132805523 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126594664 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276158752 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.276360467 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113423251 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266150733 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192115823 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128981973 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220568812 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106890881 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.215776687 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127776519 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110986443 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121722027 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.853861495 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133580524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125831157 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103276547 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205548704 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117468159 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117829654 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.097263041 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114389833 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842189754 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100543109 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115035631 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.097766728 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127047898 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127699698 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125244729 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103027387 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.21020987 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273299736 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131852392 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105282416 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.117336007 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185372656 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121301412 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.117987378 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098453502 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.118783017 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128897852 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102406822 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119397272 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200027146 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.204158289 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.259237261 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.562567576 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095781415 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.118941492 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267509847 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117403463 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349090714 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126376661 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.26391222 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19381134 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.115026718 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374336333 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.216581501 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208336238 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.099797943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.219287243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09350874 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12579832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.208340911 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097499717 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125663864 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183652935 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136408624 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13384979 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.195900884 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117735035 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254129818 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.115011591 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195582011 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122518316 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130666337 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347477299 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117674086 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11929412 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208659986 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121162428 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09800665 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635919835 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.096842862 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130200758 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12804933 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.262620845 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.212316218 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106168589 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127193188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132422218 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190435012 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.259404006 seconds)
  done (took 48.73180527 seconds)
done (took 64.980592684 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.325556361 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281060278 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.345759762 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238166621 seconds)
  done (took 2.113369007 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.230456146 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167186195 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.217206919 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095043709 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.226564632 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096071195 seconds)
  done (took 1.87422784 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.538590968 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.440946534 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.374296929 seconds)
  done (took 2.202643068 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.268394731 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.29732426 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.369820373 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.514747282 seconds)
  done (took 2.405833868 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.255576061 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141930961 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.135055597 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.187654697 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22434332 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.226501423 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.159859748 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173620067 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.144069062 seconds)
  done (took 2.549077608 seconds)
done (took 11.993229939 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.294337424 seconds)
    (2/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.206870073 seconds)
    (3/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.341708265 seconds)
    (4/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.325131438 seconds)
    (5/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.225784457 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.201810843 seconds)
    (7/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.219406852 seconds)
    (8/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.290156858 seconds)
    (9/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.236082054 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105540716 seconds)
    (11/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.151064757 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.156358816 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.202794652 seconds)
    (14/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17667762 seconds)
    (15/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.443201709 seconds)
    (16/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.14273655 seconds)
    (17/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08717244 seconds)
    (18/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.137973306 seconds)
    (19/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.21479204 seconds)
    (20/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.137963646 seconds)
    (21/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.230019324 seconds)
    (22/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.28265608 seconds)
    (23/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.231451772 seconds)
    (24/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.322787357 seconds)
    (25/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.231358032 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114655819 seconds)
    (27/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.305482353 seconds)
    (28/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.170617225 seconds)
    (29/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.163402625 seconds)
    (30/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172325975 seconds)
    (31/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.170979306 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.158522657 seconds)
    (33/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.191592958 seconds)
    (34/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.214720824 seconds)
    (35/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.207465848 seconds)
    (36/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.289492725 seconds)
    (37/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.144314955 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.268342903 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.159895373 seconds)
    (40/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.088568639 seconds)
    (41/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.109871493 seconds)
    (42/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103505355 seconds)
    (43/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125034 seconds)
    (44/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.125160403 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10550835 seconds)
    (46/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139813834 seconds)
    (47/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.218733714 seconds)
    (48/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.21670513 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095708621 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124825903 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123046988 seconds)
    (52/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.177146248 seconds)
    (53/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.124745211 seconds)
    (54/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123940894 seconds)
    (55/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.224117317 seconds)
    (56/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.2152861 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197811512 seconds)
    (58/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.202463877 seconds)
    (59/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.163894478 seconds)
    (60/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.169733647 seconds)
    (61/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113160585 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12579916 seconds)
    (63/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.232307014 seconds)
    (64/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.232790347 seconds)
    (65/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089403965 seconds)
    (66/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.11079759 seconds)
    (67/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.222486813 seconds)
    (68/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.093928961 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124837687 seconds)
    (70/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124727308 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.155066164 seconds)
    (72/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.087983433 seconds)
    (73/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.200089296 seconds)
    (74/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.147031644 seconds)
    (75/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178765018 seconds)
    (76/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140818958 seconds)
    (77/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.121494764 seconds)
    (78/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.224225513 seconds)
    (79/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.161895562 seconds)
    (80/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19506366 seconds)
    (81/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.139983783 seconds)
    (82/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12576167 seconds)
    (83/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.12162273 seconds)
    (84/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.127187415 seconds)
    (85/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136124658 seconds)
    (86/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.092829499 seconds)
    (87/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.173834505 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125193287 seconds)
    (89/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.224081206 seconds)
    (90/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.18604454 seconds)
    (91/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.088245574 seconds)
    (92/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.127536812 seconds)
    (93/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114627438 seconds)
    (94/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.110480149 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.138383219 seconds)
    (96/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.143241986 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.15774867 seconds)
    (98/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.11261421 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10310763 seconds)
    (100/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.110055835 seconds)
    (101/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.088728425 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13991779 seconds)
    (103/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.164396167 seconds)
    (104/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.088643331 seconds)
    (105/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.126673734 seconds)
    (106/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119766587 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126984707 seconds)
    (108/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117167143 seconds)
    (109/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.106298428 seconds)
    (110/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.129807106 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096564298 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.128889221 seconds)
    (113/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.109312781 seconds)
    (114/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088855851 seconds)
    (115/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.169459621 seconds)
    (116/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.087955171 seconds)
    (117/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10978108 seconds)
    (118/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115406772 seconds)
    (119/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.11108639 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.114439066 seconds)
    (121/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.199616607 seconds)
    (122/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.128376082 seconds)
    (123/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.087640054 seconds)
    (124/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.129128093 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087607614 seconds)
    (126/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109330165 seconds)
    (127/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088022698 seconds)
    (128/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118688991 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.134320449 seconds)
    (130/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.224100798 seconds)
    (131/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.201152229 seconds)
    (132/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.1492207 seconds)
    (133/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.211022904 seconds)
    (134/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137293735 seconds)
    (135/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.170547111 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103371486 seconds)
    (137/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201265171 seconds)
    (138/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.166226483 seconds)
    (139/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219070808 seconds)
    (140/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.088340571 seconds)
    (141/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.111079689 seconds)
    (142/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.095269456 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.141653741 seconds)
    (144/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10450934 seconds)
    (145/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.146643254 seconds)
    (146/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.111422488 seconds)
    (147/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105236247 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129613772 seconds)
    (149/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134380161 seconds)
    (150/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.088953552 seconds)
    (151/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140017648 seconds)
    (152/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08889552 seconds)
    (153/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.109086041 seconds)
    (154/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104055749 seconds)
    (155/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118426745 seconds)
    (156/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.142694835 seconds)
    (157/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.116005074 seconds)
    (158/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.110823365 seconds)
    (159/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110445059 seconds)
    (160/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.110627796 seconds)
    (161/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.136674214 seconds)
    (162/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.088674121 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.140651523 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118767409 seconds)
    (165/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.11058645 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126119581 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104365311 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118127433 seconds)
    (169/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.088857796 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.128194464 seconds)
    (171/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.087995066 seconds)
    (172/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.111048999 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105150691 seconds)
    (174/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.110583175 seconds)
    (175/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.094510742 seconds)
    (176/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.172759036 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.125460717 seconds)
    (178/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112642803 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.126309105 seconds)
    (180/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.127579006 seconds)
    (181/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105622085 seconds)
    (182/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.110942721 seconds)
    (183/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.088680512 seconds)
    (184/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.109688501 seconds)
    (185/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089425549 seconds)
    (186/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.110636677 seconds)
    (187/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.094152609 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125597636 seconds)
    (189/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.088825665 seconds)
    (190/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128929363 seconds)
    (191/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.178733852 seconds)
    (192/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089861352 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.118358721 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.113041681 seconds)
    (195/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.117558304 seconds)
    (196/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088362315 seconds)
    (197/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132414237 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.105416712 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130288267 seconds)
    (200/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.087794566 seconds)
    (201/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125353093 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.141657669 seconds)
    (203/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096862899 seconds)
    (204/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.168069598 seconds)
    (205/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.088330124 seconds)
    (206/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.128329252 seconds)
    (207/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127633715 seconds)
    (208/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.088532235 seconds)
    (209/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.11117532 seconds)
    (210/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.089260595 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.140837417 seconds)
    (212/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.094686477 seconds)
    (213/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.110317225 seconds)
    (214/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.089447061 seconds)
    (215/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125157045 seconds)
    (216/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104618962 seconds)
    (217/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130432064 seconds)
    (218/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.094496104 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.126967903 seconds)
    (220/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117204088 seconds)
    (221/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.094386808 seconds)
    (222/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139098554 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.088996354 seconds)
    (224/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137646127 seconds)
  done (took 33.430414637 seconds)
done (took 34.287455317 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.508953761 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135845395 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107969306 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.132412177 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189950065 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.133958468 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.115623951 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13534723 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.135771982 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.104613365 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.120893021 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.13471516 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107843037 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186276448 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.13383436 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.122840154 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099392873 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.136233234 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.137339102 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.117251337 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209163848 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101468517 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.136448861 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099285565 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188515885 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124573909 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.131404522 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107860756 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137282075 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.128781778 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107862756 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122565831 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.13805468 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11555416 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120391665 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.104506922 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119604034 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.11793918 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107339527 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.128938283 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135009828 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106335731 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134736976 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12407149 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106608413 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.127304611 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097969607 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136238323 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120251973 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.1085882 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125064459 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.1402059 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.105237887 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.121577569 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09741483 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.124697638 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.136135526 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098130179 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.137448587 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119951492 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102204421 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119984405 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.107692599 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120535126 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.127599508 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100603972 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.1281166 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.109337067 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.129881693 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124129653 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098664134 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.128294943 seconds)
done (took 10.245839711 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104963946 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181618448 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.184686027 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.192715191 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156169893 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141745609 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.143204952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.154336166 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137793337 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124482923 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.160444449 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.152052116 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194555617 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.137039708 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140151788 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.106849361 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.135794559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.13486329 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.196272587 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125194267 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157201474 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.136736401 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157778094 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145339678 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106626702 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163154852 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132183068 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12959622 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106263528 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137286097 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.147497867 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105816368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.130555516 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149534579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116983678 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.134635762 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.139667599 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.106542778 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.128481314 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127255877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140725823 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122275454 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128253936 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140580513 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.106608973 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.135423493 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136906016 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113149429 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.130859053 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.130590202 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108700766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158286094 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.136270049 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.136130527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114383602 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.135177437 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135667868 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.112484998 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131659704 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.134624794 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105069368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129877832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130596651 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153929951 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108438856 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.135905017 seconds)
  done (took 9.916845075 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125864645 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.162448795 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138029275 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.139137616 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110986318 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.119491788 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118570161 seconds)
  done (took 1.830402727 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.098472011 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191335641 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.190103535 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212568678 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.181665249 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.199928688 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143723432 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.097869855 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.157418085 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.132559221 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190129796 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.221494281 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.129370614 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140236271 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.192928536 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.097813466 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21878959 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.097992847 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133871014 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.19059353 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136347656 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127260193 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138155714 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.120959426 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184089435 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.098645776 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269307164 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13743151 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103946372 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.131705979 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110623114 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.230952693 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1847875 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136688359 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103438621 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18705053 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183916392 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1333305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200034419 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.128417877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183466111 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.132941651 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110000929 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.135036398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.132007736 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.172024932 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.115674024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.134983861 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.130932103 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191426644 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.133577287 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184833442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.106771869 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132862501 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.134290619 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111029458 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13961429 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.133540499 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192470651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111852366 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209470385 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185070944 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18518599 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185781894 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144750141 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186758853 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182358176 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.106711862 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130832425 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.134310442 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187330006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132000488 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11134126 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.172017379 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138290289 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.184942275 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184760537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130634209 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.112236333 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.127699101 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.131642464 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.098045911 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172772262 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.132912454 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130135256 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118297791 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136770744 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.134183789 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.102755116 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148863783 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.13249996 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.135203282 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114724015 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.133574026 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141061961 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189510545 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13498427 seconds)
  done (took 15.424301272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.101073821 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.122721572 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.104557017 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.125261444 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.12410992 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.100637697 seconds)
  done (took 1.608112571 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.133356278 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.135743049 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145475141 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.110959911 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19117353 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.215943043 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.194940916 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133665868 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.128097611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145439544 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190441776 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.193324719 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.192102402 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.140862717 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.193802265 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.138428399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.196759257 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.135087187 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.145650807 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108398526 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141378114 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136795942 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107891739 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.188102079 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.138929193 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.138169619 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1336321 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.120063505 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.143766208 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.134248808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.113943485 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.138011761 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131195687 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.133833233 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196054276 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107537759 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132612383 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140947786 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114017669 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137481682 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194200596 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133937873 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142226469 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.115746203 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13626905 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.133745691 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.14008881 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11148134 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.195524814 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.140836493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141029595 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.135976658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.113657774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140215035 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131332801 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110265867 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.140641344 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.19622661 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.140255834 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.132012356 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11204271 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.139053243 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134210967 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116348227 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138732411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.13972014 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13178141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112489619 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132640288 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135824658 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117018106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.137384354 seconds)
  done (took 11.210512536 seconds)
done (took 40.898130022 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.077256081 seconds)
  done (took 2.013126377 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.972491625 seconds)
  done (took 1.912365218 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.033040643 seconds)
  done (took 17.008438316 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.577984803 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.649571332 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999639587 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179543168 seconds)
  done (took 3.34540246 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.97544261 seconds)
  done (took 1.937708151 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.372962774 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266390229 seconds)
  done (took 1.584256364 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.858162855 seconds)
  done (took 1.812599534 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.362918324 seconds)
  done (took 3.313311616 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.383545218 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20299014 seconds)
  done (took 1.552704835 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.666855583 seconds)
  done (took 1.629148661 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.425776229 seconds)
  done (took 35.384368468 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260813532 seconds)
  done (took 1.233706676 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.320659133 seconds)
  done (took 1.284266647 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.39268589 seconds)
  done (took 4.356154092 seconds)
done (took 79.312374422 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.111769191 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.138816859 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114108566 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.136949678 seconds)
  done (took 1.453933303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1215921 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.13742787 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.141021932 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.111522173 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.147310946 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.136243029 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.111118039 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.144774365 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.134873188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.114715851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.138298245 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.135510119 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.115499829 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.134884133 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.10900056 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.140662996 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.142311684 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.112655302 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.139204877 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.1379161 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.110314346 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.138859897 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.139675666 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.112076264 seconds)
  done (took 4.074409927 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112780413 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.128492798 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106531112 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129638993 seconds)
  done (took 1.447383544 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.120720189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.155632473 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154400035 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.120096319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.155847952 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154383866 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.106426454 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.131764407 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.134330315 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.121553281 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13577996 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158673698 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.155180143 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104671155 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.14799227 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.099802642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.130302468 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155267006 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.120756343 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.148064602 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.131780724 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.11953483 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.14271073 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15057273 seconds)
  done (took 4.223035672 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.22211009 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124941722 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.160175958 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.190730986 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.165093537 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.133145903 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137870053 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.142844048 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.143006346 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.114564697 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.141419852 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195986679 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.139432578 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.14093899 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113068017 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145478309 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.142103849 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.114523761 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.142050971 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.149525327 seconds)
  done (took 3.928475026 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.113367067 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.129312424 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.099480153 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.128432981 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.137045541 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107485437 seconds)
  done (took 1.689846752 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10013555 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.122911784 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098807738 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122450375 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104120294 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.123691325 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096422539 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12342438 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097695602 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.124099031 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.121820609 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.098291786 seconds)
  done (took 2.315502604 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.323657537 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10226339 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132594624 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.127390445 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.133474101 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.101857529 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145225847 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10205491 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267600665 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.130220721 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118457805 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.230824303 seconds)
  done (took 2.898727129 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236914721 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138245981 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270069901 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402186986 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183731619 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188429272 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293557138 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186114576 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.238677774 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131986943 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246039381 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178025639 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174229032 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204084492 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15693279 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.210768288 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199244923 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228020191 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167134572 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233549603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186811113 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191601949 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23042928 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172626726 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131288183 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186797441 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.136298241 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148569052 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197743613 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192835525 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196714943 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169555808 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163185804 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253794029 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251253081 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227383096 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.338187666 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166041536 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.21079205 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.21145288 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297946615 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134023927 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248753147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17426744 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149436396 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2068541 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178288871 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205412922 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152568841 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132826463 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236696835 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200864172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207016187 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170100473 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340214804 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171148811 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139769171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224341087 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21652755 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216329433 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191504257 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.13875005 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205821162 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207790254 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204919561 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166541473 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194623784 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118018883 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22482037 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22123737 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211205199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188131495 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240737759 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151565004 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18721239 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191580864 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174608649 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203909543 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183157679 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.112469101 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170789441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161973529 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144518087 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.208844059 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114527917 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257706253 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127188741 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209502684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256503881 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180232695 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185230196 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188192187 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191311647 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168071896 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.136449725 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13901418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182781725 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179186212 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149838393 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178087251 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165280656 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.146963256 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173793612 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.11327693 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18208885 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.154340795 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190298796 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187893977 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155641028 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188253778 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17129597 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.183357103 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195024843 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213626325 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149963523 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153495514 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220667523 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179678401 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.157573673 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200121296 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215886903 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.189301933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15908132 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197877628 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220907432 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162161556 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215930478 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173163678 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156595787 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.174829316 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183743743 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179516808 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17554513 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119029199 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.17742488 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247847552 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122869228 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157280919 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198274463 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145822401 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144586712 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16247097 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132703984 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.162001505 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173720565 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.160961425 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17748916 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182909789 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17787968 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180483622 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164846242 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22890557 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151000421 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.183687487 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168485486 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.110514803 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.234593863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212890443 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150158044 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212877922 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.195615307 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242247679 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187608201 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120442378 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204720559 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151693784 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.138355664 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194457409 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186605811 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186413111 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212069851 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239171277 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195436505 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179100547 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171368289 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191481814 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.200923418 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180568672 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.164891604 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185846222 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19617242 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.138286934 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.115903215 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.147927604 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159647158 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153877061 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124012254 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234055107 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187701448 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208564718 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184859999 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159151449 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209536019 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.145414203 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188545683 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199946293 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157291703 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215501257 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206821012 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191200373 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163347582 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195151912 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14025734 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142558784 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.127154637 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219250462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123861189 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158620963 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168239566 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20916269 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198389898 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171225237 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251096045 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193631226 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220458963 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.141366502 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.184480653 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193532745 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181643729 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.204481438 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1264949 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184160186 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203593861 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176036918 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246655394 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185827245 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193169191 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228430366 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.17994355 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152759923 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17096616 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191903105 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166398773 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187017948 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16437606 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12769843 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173367814 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.156301186 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146722307 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205168163 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163313885 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229158264 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152487155 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227000496 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114963545 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168141445 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182721053 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166266693 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135193945 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194222709 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212164188 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166036309 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179880439 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195987594 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151761849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.32830695 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213798419 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237754721 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167708207 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166530826 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182598815 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154283306 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212016817 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20571627 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165279487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205044287 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181977108 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133330137 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155291109 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16794757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171549549 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.175060985 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154301987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178222696 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.160657406 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213607408 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162117238 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181222236 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188523271 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.139797989 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176193195 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158318819 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22891313 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181277695 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229766499 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.177148967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190294362 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21154968 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115695931 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144554135 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.145212601 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206039649 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147351513 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18107264 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.200914271 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216280929 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180539926 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218798371 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127916566 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.14219539 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181205344 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167848053 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218326092 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161894953 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156171197 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214630725 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.17244082 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150555029 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185981341 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298720624 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163745155 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194834198 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.137101979 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290119956 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142329217 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126473797 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181029638 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191101518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.166434477 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.202384744 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188114384 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163335397 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180836339 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157160453 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208643794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227594425 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225026061 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198907545 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.161603208 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178885134 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185140628 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199688744 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161336394 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.167935838 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183165304 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207560476 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.212218484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.153185064 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186216641 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183050348 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181144999 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199172059 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151372041 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213475084 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146172454 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188921999 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160416816 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113846952 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177605018 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.225055228 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123672334 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223098437 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176561337 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120901727 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145080645 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177841875 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180188844 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173336708 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122663888 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232537528 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1146294 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184001067 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202287377 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145574583 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176557906 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165060361 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148713036 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137542198 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163286521 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154715448 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.18670324 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206156898 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147899948 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199207175 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193789961 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184941248 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178487432 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161015279 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.683445717 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.144886388 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205524971 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165467611 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214085228 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166606785 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187262717 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182166836 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166816239 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194027686 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167672874 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245837629 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188630484 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182358443 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123305212 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163077803 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163148383 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.150883436 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169834569 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183471815 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163037269 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127318011 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177815315 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163366123 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.162903907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156571319 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208232568 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16614523 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206943338 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204586633 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166108451 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187860796 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224895421 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117803455 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182865158 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19088073 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159338183 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179568309 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.148370686 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152423493 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200676991 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.111966691 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179349211 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179180795 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182319335 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18317657 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.154320406 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182358409 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162789435 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181374404 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143136002 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.175625914 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149752378 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148962668 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.145578154 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175338809 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179523193 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.180703426 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14363047 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160082274 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204354306 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.139257998 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152271954 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293610601 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179505894 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216251211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.173481591 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15133379 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15991397 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178070275 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173883926 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154279961 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.145906153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146941682 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148227753 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195988009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173374842 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150677509 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229319624 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179416619 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210148711 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134528627 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286960392 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156522153 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17482837 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.152675374 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146110328 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130652579 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154608573 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17289886 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208440035 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2003138 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.173323006 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.162733443 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145401063 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.110822575 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147827283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180472519 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173440966 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177824935 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168247818 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132557484 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137548783 seconds)
  done (took 88.405769758 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158207945 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153534704 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.159894722 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.210180429 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18181502 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272625088 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.220029709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240779952 seconds)
  done (took 2.659719225 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.138685446 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.123472735 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.157006265 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.137993505 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140227182 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.447733263 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.148127592 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.110022328 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.203616826 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.172208647 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.109071642 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.692518272 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.135772997 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135570882 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127278953 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135795405 seconds)
  done (took 4.167461159 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.351857113 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542626572 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.754495628 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.260477422 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.244220522 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.196073077 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72223304 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.182937377 seconds)
  done (took 12.30780285 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.14003346 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.154658498 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.34763002 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.220527318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.172254009 seconds)
  done (took 2.097840299 seconds)
done (took 132.62451552 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113614827 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.155826605 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.113043758 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158749817 seconds)
  done (took 1.586694847 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.15689383 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.123923766 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098718958 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121735481 seconds)
  done (took 1.562668415 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.536482 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094637522 seconds)
  done (took 1.723625304 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.138509306 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.155972461 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.159772613 seconds)
  done (took 1.518423682 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.120821877 seconds)
  done (took 1.177502659 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110458575 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.136697627 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.193393546 seconds)
  done (took 1.502367927 seconds)
done (took 10.130346337 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134891365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434758018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423763086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120345398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731664429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.416007486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039696283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169087667 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178110012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100845247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150882732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679647176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027086748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373096535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982320618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.466155791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.710266891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103545359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136698776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1284718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989160267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127686173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101649426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130020592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706533351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.407573047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128700388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.479482937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100749462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133504557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390838269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128853688 seconds)
  done (took 17.381606192 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14727396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195283938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138849334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102190589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133507338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129055106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.113181625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143014994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192376339 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128226121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.122680002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127811288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13337058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101144751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152740888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126413843 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.105020244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130894165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.108760134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130396359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149557634 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10105219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130434361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102895899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128627341 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141112093 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101770583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142403131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12801395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.108395513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.134604064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101612808 seconds)
  done (took 5.201029747 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151653341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204863487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138383879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.165184765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182249802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102875475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22343512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171074281 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195929573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128813939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.151588606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100831606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.171229837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128723545 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.126035333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128202654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131222903 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.105053276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137671889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103637721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150389845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127577497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103222826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130990033 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128072994 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.116872693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128145902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143306318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101718266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134256736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107361105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128200969 seconds)
  done (took 5.521214076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.114113233 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143166759 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.124825464 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.154425242 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.136791401 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.113870434 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.143757555 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.134569705 seconds)
  done (took 2.139145395 seconds)
done (took 31.30406787 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128323125 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.149626783 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.120562954 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.142820444 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.200842102 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.130365698 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.119423826 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.132440499 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.115769191 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.15286911 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.100032532 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.13497692 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.149617854 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.110956956 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.182300669 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.144844195 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.188971264 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184150684 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.107446208 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.144827512 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.135076878 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.190235393 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.112780364 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.136911179 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194072785 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.106128174 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183263516 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.140479568 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.138504978 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.104598859 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.182218522 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.140971721 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106392441 seconds)
  done (took 5.773777065 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.197760573 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.210831004 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103829903 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.132693755 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.20953042 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.131263402 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.197696918 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.102886762 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132089461 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103414817 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131749917 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.198592285 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.205533626 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.221160506 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.240631374 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.207972704 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.193590984 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.207133234 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.221022252 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.212093138 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.19819522 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.10392185 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.208137597 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.21338514 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.132057753 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.10300774 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.263887002 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.205344229 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.236051909 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197776909 seconds)
  done (took 6.506945114 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.117031349 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147265034 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127334596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200675469 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173058675 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144922318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113722815 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154732225 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155940043 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.101851652 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140814158 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.166495378 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120831415 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141261141 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106715908 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.149092289 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157555805 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.103098019 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.137338812 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152120718 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.121509618 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.149883864 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145556579 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.113380567 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.130427973 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138935079 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108924463 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145560142 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.109563497 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.139118027 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134819857 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.1073539 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134529828 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111181105 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135364115 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.143526555 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13022485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141388031 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142849897 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.137876157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140346994 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135899343 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123822253 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.182609468 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.133039952 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.114189712 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.143864071 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140032006 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101816419 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151233419 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116494969 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.133326805 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.153477155 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.10248231 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129349772 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138971833 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103741029 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133969489 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110520518 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.136180457 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.157976768 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110237001 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139034015 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105186455 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136872445 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.129717126 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.103447449 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.138316495 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154521245 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108694295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165712401 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102722314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.14153753 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.139112302 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.108722252 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141189386 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101971669 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138793942 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138957779 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108873694 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140294492 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.132735351 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.106972689 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.151704803 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.152702898 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.116481127 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.141735045 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.113556786 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.135207252 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132049618 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116930554 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133347794 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.107033534 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142863536 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132405583 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.105626869 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.144191247 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.1405163 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101445696 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150374013 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107540042 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.131276217 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.148169197 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.104417724 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.135662577 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.113061115 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.14388832 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130566915 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.11350391 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.143085457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.10155294 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137505054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.134986004 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.104284462 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.149421563 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.114192125 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.137656274 seconds)
  done (took 16.472664037 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.302178839 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.31087547 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212365128 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.399169253 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128572304 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.229266757 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.275534833 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.228873104 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133568413 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177008555 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193658048 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.268049118 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.103941692 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.16547857 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.307461255 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.375115797 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.164829119 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.180068378 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179140773 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.159414094 seconds)
  done (took 5.595495753 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126060652 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175102468 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16526004 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.164549334 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.109287607 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.148346279 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.132061359 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.155494802 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.111410183 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.139752771 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102721402 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.145196673 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.140630854 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.114499828 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.151044926 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178797796 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.109791762 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139201518 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.15433349 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.110321245 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13931012 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160512594 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.142121605 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.133240527 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.144788962 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147941427 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102209048 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140123447 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.107181598 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.138214913 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.139250862 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152587765 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.111724908 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.139686587 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.11222666 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.145460429 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.105522614 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.134902679 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.134002458 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107386387 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.149762162 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.113943123 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.137148472 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100228807 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14572908 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.135097019 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.116682187 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.143219364 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.143498479 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.121055411 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.143749373 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.115712992 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13943459 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.153454569 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.106715824 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.14830657 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.14692257 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.116553475 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.1400541 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.131843387 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102716097 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13619621 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.108427586 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.145886044 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.141777108 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125627893 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.146902169 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.132475826 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.113024147 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.137199942 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.13625251 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.122378239 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158510437 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.138817951 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.107139633 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1565236 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.107135726 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125813105 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.114694545 seconds)
  done (took 11.62272302 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137343947 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13928024 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.153097234 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.143752412 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.19936688 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109712174 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137241681 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.152800512 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.117594029 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.148212652 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.146060018 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.119953983 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16305435 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.147603365 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.108713208 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.151437487 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11363741 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.180628343 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15548985 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170780636 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.166052702 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.139145181 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.148660791 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.119017455 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172031967 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.146364683 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16968907 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.115407996 seconds)
  done (took 5.191221301 seconds)
done (took 52.230262013 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.271438231 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.392407326 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.18376078 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.182220083 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.1905981 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.209846038 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.183649591 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.376411912 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.879476439 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.172673161 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.184314725 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.182888681 seconds)
done (took 27.521010437 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.504329378 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.755114643 seconds)
    (2/2) benchmarking "String"...
    done (took 1.570281532 seconds)
  done (took 4.436583427 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.178963337 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.178380719 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.426557898 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.183701703 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.176852616 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.195613162 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.179849663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.183235723 seconds)
  done (took 15.634280254 seconds)
done (took 25.867403496 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.233479717 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.381516576 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.432931795 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.192774479 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.199193267 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.1818505 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191346743 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.210287927 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.19130065 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.173337665 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.170958476 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.455622354 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.174915662 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.566582397 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.181892171 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.183352194 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.197079067 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.408483698 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.178022572 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.226202831 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.177418965 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.173343536 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.202040784 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.219429837 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.184580407 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.186490389 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.242570092 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.17941074 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.384936951 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.210583038 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.227624953 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.181595335 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.244226399 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.185649698 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.28845567 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.21036924 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.355415053 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.180302325 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.174191519 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.184145426 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.369460738 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.559035356 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.19103702 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.18504417 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.184557053 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.267215368 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.182326805 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.883735387 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.186357425 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.188695147 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.218204756 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.553347926 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.187115702 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.187482563 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.212094754 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.414550541 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.203889155 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.202909351 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.209390193 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.184911546 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.180997207 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.196492395 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.218216624 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.184178841 seconds)
  done (took 142.189169572 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.181145837 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.184321435 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.180933559 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.203314617 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.181306486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.186368864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.181120285 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180436016 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.183032695 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.187250009 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.182172282 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.182784968 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.186995712 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164583481 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.185503873 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.201573757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.186092677 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.181308917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.20600263 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.183077664 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.202255313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.181992976 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.198694037 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.183315104 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.210088412 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.267940022 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.211390849 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.192725981 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.187657199 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.18358555 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.217490498 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.202074218 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.744448661 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.046445446 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.192362936 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.214751925 seconds)
  done (took 79.459141883 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182894365 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184203229 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182495027 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.212193686 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.182755239 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.705340685 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71333762 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.91692919 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.437732285 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.415961887 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.404209753 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183376559 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276581512 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.19656514 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.184921276 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.198820462 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2270447 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183223039 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18518846 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.713510601 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.19900138 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.417254531 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.354213129 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19892864 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213521636 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585125312 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183471531 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.214705092 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.510692075 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.230722923 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184805161 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184931168 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.505539538 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.168473416 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296406578 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186729404 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215375821 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.184718051 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.462406496 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185548073 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.185113243 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.187246214 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.805552768 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.185544263 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.709600506 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184667601 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.091404645 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.183912829 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185052901 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.215014667 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.732906473 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200700489 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.184778315 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.186646224 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.185873113 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185153841 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.21498112 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.206692143 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295921914 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201039954 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.188419298 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214155584 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185288872 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.282143462 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189942838 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.996449816 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.248038642 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.301096059 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718333578 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189290768 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280885899 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304463303 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.186101063 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.186666428 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186395781 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.186882115 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295277609 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.185619237 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.185672687 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.578488574 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.355384646 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.204250694 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.417809908 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284946288 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.186579596 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.52688042 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190263975 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186543476 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885364538 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.186890025 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280390945 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187657435 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.186610177 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186412562 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.186990954 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579474994 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719662558 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.396343013 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.190440372 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.495462648 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.189492987 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.587212313 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.707295164 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.817492719 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188702593 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298386327 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.356866354 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.204017171 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.18789149 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.422960459 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191003642 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245991001 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189075538 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585429234 seconds)
  done (took 362.315109082 seconds)
done (took 585.074343576 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.882146124 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.837208348 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.971153578 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.86247932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.831085772 seconds)
  done (took 10.50223897 seconds)
done (took 11.620311829 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.370559334 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369005824 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244875912 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.373093089 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219653937 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.388992036 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357282011 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20906667 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293006063 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.266197567 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292095937 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240651348 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224602935 seconds)
  done (took 17.969228862 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447235066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195100646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263369825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.426263916 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232625875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.462942858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482135222 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.194980457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345378953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208515348 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207925164 seconds)
  done (took 17.587406035 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.45144202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195905663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264285329 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444038384 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235142698 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.461543549 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512224547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.19494513 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.349370403 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209858487 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206284983 seconds)
  done (took 17.645534821 seconds)
done (took 54.321552237 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.233028095 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.357510976 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223220756 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209850878 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204393625 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20499392 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210270264 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20488928 seconds)
  done (took 10.97410924 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203844751 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203988229 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.203609119 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204017681 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204224848 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20420294 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.203161206 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204156443 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203573621 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.203937713 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.204005689 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20487673 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204906284 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204171579 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20306269 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204459762 seconds)
  done (took 20.388218623 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206793773 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.203708643 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203630957 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203207836 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203345761 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.203644144 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.205468642 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203127547 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203469412 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204219157 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204222441 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204050767 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203763887 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.204180612 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205148365 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204614089 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204105814 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203610332 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209236124 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204110873 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20377568 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.204230185 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.204100827 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204736522 seconds)
  done (took 30.038433892 seconds)
done (took 62.52045276 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.193402766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.207249321 seconds)
  done (took 5.52488142 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.265720499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.266347618 seconds)
  done (took 3.657722642 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205280115 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.204962239 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205848094 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205330627 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.20574326 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204704092 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206128076 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205062738 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.205321145 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204912365 seconds)
  done (took 13.179407133 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207746732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206719299 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.206231386 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206425883 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205740396 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206716996 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207064295 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206215428 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206615459 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204837848 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.208342833 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206677392 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206458568 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206386146 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206445551 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.207142792 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.20658216 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208785983 seconds)
  done (took 22.846010525 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219478418 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226730449 seconds)
  done (took 3.571498471 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.346765491 seconds)
    (2/7) benchmarking "second"...
    done (took 1.250311899 seconds)
    (3/7) benchmarking "month"...
    done (took 1.323194435 seconds)
    (4/7) benchmarking "year"...
    done (took 1.314101649 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.248494743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227708658 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.247897893 seconds)
  done (took 10.084093509 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209519626 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400724833 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.506333956 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813183166 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208462289 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252443826 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.065893142 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.253270884 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.243372753 seconds)
  done (took 14.080979355 seconds)
done (took 74.068803533 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.196247991 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.21673907 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.215709119 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.218775644 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.503345126 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.250473013 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.201844264 seconds)
done (took 15.929273657 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.198768991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.191693621 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.190056362 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.206522121 seconds)
  done (took 9.913010399 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.187820937 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593561629 seconds)
  done (took 4.906893832 seconds)
done (took 15.947452157 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209891549 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208761326 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.207637639 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.20820887 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.208620198 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.2073562 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.207492945 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208295007 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208555745 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.208520999 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.209026626 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.209053519 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208936585 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208890914 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209961067 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208889862 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209024819 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208737929 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208881253 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209424356 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209665606 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208082262 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208684546 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209314992 seconds)
  done (took 30.138633882 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.209291366 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208282869 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209476518 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.208195936 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209547325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210192325 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209688866 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211153246 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210732993 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210078261 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209739333 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210684632 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210377404 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210176824 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211705918 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.210091034 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210953135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212154203 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210219801 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209840628 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2096548 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211162817 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210572758 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21279809 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210759318 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211466862 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210856054 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210843807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210798123 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212325352 seconds)
  done (took 37.443126209 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217421154 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.217795488 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.210526528 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211925797 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.210896039 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.211700116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.211613899 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209247084 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.210766039 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.211390718 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210943451 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211723392 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210877961 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.212585819 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211587299 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.211603612 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.211621602 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.21136672 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212012933 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212905941 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210104341 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212246541 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.210881127 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212456785 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212556336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212543599 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21159556 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21336164 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212255994 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21270095 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213529673 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213054402 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212578081 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213268916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212019122 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211994691 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216176773 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.219347138 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212457493 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.2130206 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213162975 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212437696 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213162933 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213348893 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213515412 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.213289517 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212979444 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214059044 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214444629 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.212528762 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213255165 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213633425 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213985553 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213270657 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214007406 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215301409 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215497509 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213871388 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213670498 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214047903 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213503412 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.214707607 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21539059 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214601491 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21517005 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215568081 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215024782 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214831872 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215301546 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215919603 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215065641 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215944501 seconds)
  done (took 88.487568623 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216846154 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216063493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21443464 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215936133 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214677227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215564132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216373231 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215317049 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215078937 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216470665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217213213 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215360363 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215486455 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217219017 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216092375 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215783152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215316886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216125936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216841061 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217636701 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215911236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216422199 seconds)
  done (took 27.88678676 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218113943 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218579414 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217213138 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218286305 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216337087 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216444275 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216422083 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216499015 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21587557 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216648848 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215680184 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216301258 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217995292 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21787245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216255634 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217586747 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2165437 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21814266 seconds)
  done (took 23.043154736 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217786873 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218287822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217237811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217228001 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216530564 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216328447 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217540536 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216923192 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217599164 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218469517 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.2175467 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216876025 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218275022 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217128087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217272087 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219501273 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219017682 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218146154 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218495105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217476577 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218065328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218412876 seconds)
  done (took 27.927682865 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220201368 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217749086 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219075163 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218476845 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217779711 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218743387 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219351672 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218464914 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21866796 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.218402267 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21728618 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.21852213 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219132303 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218812678 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218977421 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217919316 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218336803 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217651361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220351392 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218735457 seconds)
  done (took 25.50919316 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220827673 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220326077 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220474531 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221712563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219935089 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220581511 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221029973 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221040231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220692921 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221998095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221354361 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221641378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220628553 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221558788 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22117136 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222159686 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221652302 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221168912 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222129714 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22163483 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221340312 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222117726 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221526559 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222132045 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221746675 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223088598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22200101 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221068498 seconds)
  done (took 35.337482577 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220891349 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222042171 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22077748 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221318949 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221238886 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22172497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222016853 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220961073 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221348097 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22274752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221284571 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221131118 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222477881 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224311312 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222051885 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22215874 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221577334 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222309609 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222428921 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22150465 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.223620757 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222496163 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222700765 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224081382 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222968558 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222484413 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221897836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222707497 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224007329 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22252504 seconds)
  done (took 37.806131847 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.269345449 seconds)
    (2/2) benchmarking "in"...
    done (took 1.268881365 seconds)
  done (took 3.678504699 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.223855788 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222463992 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223186312 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223203734 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224949175 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223770491 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224341045 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222969298 seconds)
  done (took 10.929368348 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219078109 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223366743 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.222829474 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22293216 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222154416 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.218898415 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223942065 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240233848 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.218061678 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.221129667 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.22450417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.225911357 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.220803859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219288119 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.217399387 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220317467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.222516107 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.222530097 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.222858601 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.222389211 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222085886 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221578215 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.220765121 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222747457 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219167619 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.22852708 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.238411099 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.222755133 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218543315 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.222693242 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.218427946 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223085302 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222523594 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.222910813 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224036886 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.222836215 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226828152 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239084374 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.224554063 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240647487 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224308278 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224171355 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219868923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.219553564 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220655525 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222576529 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223544571 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223229825 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218703818 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.222832298 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.230771976 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218576859 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.223413172 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221199637 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.220821322 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225145327 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24048372 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.222086669 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.227406174 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.228412944 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.24792403 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.24300321 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221865054 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.223291722 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226071149 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.235984268 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225415032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.239959664 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2235666 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.225098193 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.227748323 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248756146 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.242579864 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22335066 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224110741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225031629 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220273017 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225809397 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227866152 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.237563855 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.223873571 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225058044 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227576451 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23603787 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218960911 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224416087 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226101967 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225148742 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.220662981 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2293207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.242921066 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225166891 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.219752934 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.220252163 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.220530362 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226532777 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.219166555 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220129388 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.22387459 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.224916125 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2235984 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223132837 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.228098182 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225026487 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223913064 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22485795 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.240658659 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219253316 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.224833039 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.22405266 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223143851 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.222542242 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224812943 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.223929188 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222404691 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.225650624 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223065922 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.223240711 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.224516413 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.22581278 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22750159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.236758984 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.225133368 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.224090352 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.224582558 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.233801916 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225268837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223332296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.22396291 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.223139251 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222791693 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.219950317 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.22410552 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.219757693 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224717703 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222257676 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22507351 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.223308391 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.228221282 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220621554 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.220121439 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.220290048 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.220340089 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.223172484 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.224529857 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.2221037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225087992 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.2366323 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.22062918 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220885052 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223564575 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225672384 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.221984541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.225053768 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.220914537 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225574956 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220401575 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224304992 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226257854 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.224369219 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224482197 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.22052862 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224357866 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22469449 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.224765801 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220739221 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.225590057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225660654 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225448506 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.220923418 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.225337274 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.219438991 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.221938204 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.233031283 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.226164685 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224816747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.224230372 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226953197 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225231013 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22502529 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.223405696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.228553388 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.224827818 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227010702 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243284535 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225728137 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.225383998 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.220649251 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220224048 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225937979 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.223176647 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.230938888 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232336381 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243407121 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.221601624 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229148393 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.222161752 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.229165983 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.224834949 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227292607 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.226011208 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224825543 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221592841 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226936632 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224059564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.226509828 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.221172322 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.226334113 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226937756 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22711985 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228636992 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.222123427 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.222995427 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.226212693 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227478812 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22619991 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.223386147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.226693054 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.221880654 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.221933434 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227416177 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.226454988 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.22776759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.226876396 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.224167573 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225191226 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.222863881 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.222655052 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.226725359 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224904251 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.222488953 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230555883 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.24069598 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.222730639 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228203171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.241848631 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222728605 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.224580892 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228162028 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228291607 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.225326415 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.23523192 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227454259 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228462165 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.229263659 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223819201 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229380023 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.229308847 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244450808 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.223882674 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.230071603 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.226818659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.229321312 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.226529282 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.224586157 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226565408 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227619567 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230654034 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.230396926 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.225778419 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.229659751 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.229419862 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.228990111 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227387942 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.234463983 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.228937038 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.226145095 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.226470548 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.225922038 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231703836 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.223686003 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229303583 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.225756118 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235019064 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250948437 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232605834 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.244019802 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229910105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231144122 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.243424438 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.228070864 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224981266 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224664727 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.225471244 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.226022191 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230673701 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225768058 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231274574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22725307 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.226714569 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.232981906 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229915794 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.225735352 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230125881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231055341 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.232433079 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.225721461 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.232603151 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.228432275 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227868494 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224516107 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.225801826 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23280093 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243660935 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.228214648 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.226644266 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.227514609 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.226342511 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.228398475 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231974392 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.230204616 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237022615 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.228746001 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.234082051 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.228179649 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235963279 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.233091843 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.230202444 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.239539976 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.232847031 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.227688004 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.226909543 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.233408421 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235505353 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.25065418 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.229915617 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.236555856 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233576849 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.2330757 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.23411811 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234036963 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233736139 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.233233124 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235660459 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.248271256 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.230620003 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230122729 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.234247497 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.234817148 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.235580849 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.231462958 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233287918 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.236007729 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.231744329 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.229502236 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.228988049 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234805272 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234711252 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.234223538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.234163178 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233571482 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23464039 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.247594168 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237260111 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.23366641 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.235585368 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250767821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236126177 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.250440146 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.230411778 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.234992703 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.234282058 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.231208269 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.229895643 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.230756437 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.235726587 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.230692953 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23808892 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236447089 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.23197178 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.230071166 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.23484493 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.230239754 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237974503 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249654722 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230880305 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238374456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235688318 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.231867726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.239577924 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.235209577 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.230616176 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.233386436 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240599645 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242061729 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230781979 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.23592503 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232226742 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235761715 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236601716 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236145532 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236058137 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236415633 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.231331667 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237007663 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234042373 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.237464928 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.232966811 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233556925 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.231749496 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.241900084 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.254093091 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.233771597 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237240192 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.238691103 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.233050397 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.232878087 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237475562 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233017461 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237484198 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233008484 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238488835 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.238419105 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.234987505 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.233669929 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.236543575 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.232846619 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23516645 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237800129 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237573325 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238176672 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.235120842 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.239731152 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.235750056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.232655099 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238025567 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.234490911 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238724569 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235502954 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.240081594 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234728488 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238471728 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238678013 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238643431 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.232323679 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.233459881 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.240984796 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252670247 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.242930051 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.239645422 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242398784 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.23507073 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235803052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.241326019 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.2352506 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.234787469 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239615621 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.236048862 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.235698567 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.237639423 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240232904 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.240585383 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252664903 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.235028211 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243033706 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.254513906 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239512413 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.236556857 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.238735614 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235294682 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240029419 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.239233177 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.234820929 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241659004 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.254144007 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240373516 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237181229 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.235378481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.236953506 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244639393 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241842868 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.23678985 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.240350385 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.236287833 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242046616 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240698604 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.242086233 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.236787937 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.236477635 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.239043274 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.243129793 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.242378143 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237690488 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.236275561 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.238241324 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241521657 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241185122 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.242096469 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.242354735 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.238048151 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24189525 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.238139021 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.238590165 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.236910836 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.238714888 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.246551041 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241355395 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239494084 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.246090372 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24995614 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.242810936 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.23812958 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.238132748 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239378328 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242363407 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242487881 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23962819 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.238375763 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241875547 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242577978 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.242927069 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.241138587 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252079351 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.260581537 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238212319 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.238676164 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240416966 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.24263562 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.244235072 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24393758 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.24063987 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.242087224 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250234438 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.245560811 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246002572 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259581187 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.239258487 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247429324 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.241020308 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.245028207 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240646517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243761089 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.244159643 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.242194497 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.25275878 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244278641 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245563539 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262136937 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.257435573 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.240218416 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245472599 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237860503 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244434669 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.241089212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.24470245 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.244476518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24568181 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.24500906 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.240049662 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244753608 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.242917908 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.245775573 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245109409 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.239484622 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.240495811 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.244260024 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.244346742 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.245778829 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.245701031 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.244962729 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.245472796 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.241754706 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251298254 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265008839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246023389 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.24570246 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.244403316 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.243915478 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.24251523 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249424922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.251326947 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.244203931 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.246644508 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.242319824 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244898922 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.247532527 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.240051063 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.240902334 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24011039 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.244465417 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.251019532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268096911 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.245500994 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.241293954 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245467837 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.245233035 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241799427 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245942492 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244580085 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.241387776 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.238031985 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246267621 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.244092091 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.243106916 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.240910152 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.249767321 seconds)
  done (took 735.883878726 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244041828 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239181215 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238481602 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237504469 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23859138 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237876922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237652891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237965822 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.23764265 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235726289 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.235389988 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235966444 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235679376 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237728823 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235723577 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235747372 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2367073 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234149339 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232674255 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234588461 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234313038 seconds)
  done (took 27.133510963 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.23419107 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.234221464 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235370115 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234575071 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234804368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233062988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23444026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234289992 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23387718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234622934 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234874717 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2345121 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.234753354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.233841424 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234399109 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235520134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233689043 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234772012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.234854039 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234663424 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234336813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235385024 seconds)
  done (took 28.30999742 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.235457312 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.23524414 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.230786108 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.234691921 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.235807297 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.234693884 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.235015672 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.237047631 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.235609149 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.231005523 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.230865215 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.232322056 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.23708995 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.242482043 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.232920566 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.236594942 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.235576229 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.236544069 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.236068167 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.237033978 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.23669952 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.254859185 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.238096618 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.232544427 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.238241434 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.237827197 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.237195497 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.238118661 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.234882379 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.242220949 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.238323323 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.233440315 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.234574753 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.233314607 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.234671417 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.241742741 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.239103861 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.237973154 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.239328197 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.241061675 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.25395466 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.24029907 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.238583635 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.256510534 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.238676047 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.235577649 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.244193568 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.239287506 seconds)
  done (took 60.56726504 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.803939041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819941258 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824453646 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824344391 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.818329247 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.824507068 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.817013143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.814846821 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.815216354 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.812868006 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.814770135 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.815671204 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813613377 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.815708951 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.815420554 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814669299 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822567908 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814321386 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.816098139 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81583399 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.818291786 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.8188883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.817321818 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.820340669 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.818586262 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820986724 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823355347 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.82460733 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820610376 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.81808753 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.821010336 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819315009 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.820545401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.826034393 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823554217 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.823138191 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.8261706 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.827331308 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.830376549 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.816977026 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.822203749 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.819060807 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.821068408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.821372793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820481481 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.818953086 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.817390226 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.817886591 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.820726272 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.831846055 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.821866745 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819692943 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.819176578 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.821901876 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823808628 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821272217 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.818845816 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819519544 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.820446034 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.817543574 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.825717732 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.821134641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.819416268 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.82140263 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.819991077 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.819755609 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.82052912 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822075123 seconds)
  done (took 124.91302223 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243413773 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.244569603 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24308603 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243827441 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242212206 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.243200422 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242726704 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.244599791 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.242679479 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244259371 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243894686 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.24450983 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.242739971 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.243643461 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244467821 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244243326 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243725734 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243636609 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244942284 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244008893 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.243346419 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.24501941 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243822446 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245183721 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245305623 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243500528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244496105 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.243614714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244852148 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.244157781 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244351203 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.24446398 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.244091737 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244859316 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.245142285 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.244601417 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.243915956 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244155863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.246056109 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245356114 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.24420866 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245123985 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244647864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.244723234 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246059449 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.244923261 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244558 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.246209278 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246012908 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245955558 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.245194596 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245792048 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244869103 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245050656 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246968765 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.24688959 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246438998 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245814441 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246659664 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24694325 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247116378 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.247322258 seconds)
  done (took 78.334410336 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245997375 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247067708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.246868452 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.246234249 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247705058 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248731411 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245642172 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.246111244 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245934573 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.246470486 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247301899 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245857164 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248419573 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248989196 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24751708 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248477021 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247251856 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247397697 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246635936 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245555548 seconds)
  done (took 26.102234615 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.246505416 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246968874 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.248045098 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248480393 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.246551161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.247240941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.247547666 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246767706 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247029754 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248005345 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248728758 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245969089 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246891502 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248538652 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.247456832 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247012658 seconds)
  done (took 21.120338679 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.249401778 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.248867396 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.24758552 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.248966452 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.248945302 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.248171099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.249552518 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.248286115 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.24881124 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.248797487 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.248987638 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.249232635 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.249630512 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.249427595 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.2497558 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.249330563 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.248391101 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.249565278 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.249550189 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.250560055 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.250774031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.24987323 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.249771628 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.248219073 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.249706303 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.250988835 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.249314761 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2491808 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.249557484 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.248647525 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.249739399 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.24986135 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.250011151 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.250046427 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.249375209 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.249979524 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.249258051 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.250232754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.250210548 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250957985 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.249614644 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.250740093 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.250266553 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.250190576 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.251186913 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.249381928 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.250436308 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.250502442 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.250694439 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.251439959 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.250207586 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.251692954 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.249905731 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.251065437 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.251861604 seconds)
  done (took 69.902377957 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250846706 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251571583 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.251043673 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250913649 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251611354 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.251127981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.252349894 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.253610521 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251569054 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250934797 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251557403 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.254365636 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252295674 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252270383 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253488898 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250494831 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.252039534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.253961328 seconds)
  done (took 23.702607484 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.254184096 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253239925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.252231696 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2520798 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.252858544 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25227234 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25291356 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.252359127 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253799951 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2531534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25295599 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.253450573 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252217001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.252607034 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252861535 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253470128 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.25315335 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252848454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253614155 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252924442 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253856399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253286664 seconds)
  done (took 28.733805537 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.247653542 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.248253361 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.248924778 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.263229607 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.26558785 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.247873968 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.248719545 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.248329484 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.26590744 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.299604239 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.297146175 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.26538133 seconds)
  done (took 16.314243733 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254368605 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254667622 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253857981 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253710551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255111514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253179636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253880522 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254299003 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255494 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255073651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254603965 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254035294 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254822128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255977713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25399432 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254397556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254779775 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254890484 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253866257 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254515541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255191163 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254540969 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254532108 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255725118 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255057888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254728999 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254395104 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254618166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254971478 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255052652 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255057494 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256039863 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25687691 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254765965 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255027371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256528487 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254772935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256522736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255808518 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256566949 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255902928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256027795 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257090837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255584817 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255082656 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256529261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256302665 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257017382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256460345 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257262585 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255422048 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256017899 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256629748 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257216081 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255773911 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256753795 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257218906 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25720667 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255950892 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257416011 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256623964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257244368 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25696876 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257992095 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257071819 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256976339 seconds)
  done (took 84.041248103 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257951914 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257401148 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257931106 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258193604 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258321484 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259132743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257887252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256567242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257679005 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257612097 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257886667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256647778 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257309882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258804241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257161894 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257515138 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258276398 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258084001 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257745809 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257933665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257777328 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258545717 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257475987 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257606826 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258270967 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258422796 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258803674 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259410094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257772702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258139624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25779671 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258892121 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259604252 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258403944 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259470007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258631532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258291661 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259065066 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258997658 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259954096 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260095374 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260417312 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260248014 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259802075 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259043959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259133836 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259747919 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25946688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259793252 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259979015 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261489185 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260273792 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260047602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260338426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259903447 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262184996 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260368981 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26152754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261318138 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260905788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261125831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260729865 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260423957 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261080831 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261320827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260646241 seconds)
  done (took 84.274626905 seconds)
done (took 1758.648469175 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.421545303 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.374968063 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.255251251 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.266210921 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.256090669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.249978313 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.269055723 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.255247596 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.255180862 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.254532677 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.255370826 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.445505171 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.250012572 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.255772212 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.25618573 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.352587815 seconds)
  done (took 25.855521052 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.280604044 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.26870768 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.374225189 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.287223402 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.290812746 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.447722248 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.319947557 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.267094558 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.429989991 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.285079623 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.261755306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.289044452 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.266650742 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.26202331 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283531717 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.449662066 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.502819396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.261100243 seconds)
  done (took 28.003159247 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.694601333 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.272861408 seconds)
  done (took 5.150096796 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.285373201 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.266740268 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.26784651 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.266711693 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.259526211 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.276196241 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.265147254 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.274243707 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.261845167 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.390677343 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.268217032 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.280514022 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.28612621 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267881393 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.271697592 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.30910926 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.465391783 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.273559457 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.27031246 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.2731969 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.267277789 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.398038383 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.308046713 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.272688825 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.387776482 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.264632802 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.274653733 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.274992702 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.418356532 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.271591681 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.268365828 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.268461363 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.269777827 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.261537043 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.73079755 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.276251674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.308528219 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.275971326 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.272000478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484007648 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.269780965 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.274888074 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.260411546 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.721565037 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.405481385 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.383316315 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.276920041 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.27240058 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.269868772 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.332279049 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.268638596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.271068866 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.326274101 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.048027308 seconds)
  done (took 81.900834337 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.262704231 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.262369963 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442671027 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.289259565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262263755 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.261641142 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.262039302 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536774012 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.283868502 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263247128 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.543981712 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826572593 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.284579204 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.313593753 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.125311357 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.333015556 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.264505934 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.278265812 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.268607238 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.266446136 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809664707 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267150443 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.265129784 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.338318942 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.302145329 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771061274 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.267037015 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.267196588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.266812448 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.262895025 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78077157 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.291153009 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.329554783 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.266416121 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.535119565 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628184685 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589557056 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.266457031 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309773954 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.269538098 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.289812001 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748657739 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.609711827 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.264279133 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.263996193 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758065822 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.26352979 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.271533357 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.269427359 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512812898 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.263571289 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.266470387 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280223782 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.269130208 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.264146739 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.276025141 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.363000858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769668849 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266072218 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.267954015 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304785855 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.266139362 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.270508192 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.270140707 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280426458 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.61378142 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483614028 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.264140986 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.611420234 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.775689338 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.282452296 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867115318 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.281903369 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.28804396 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.450173935 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.277150254 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.265426926 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776662625 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.287262197 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.266582392 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.597521875 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.265835658 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.551244071 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.282658983 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.266636507 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827280577 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.270121729 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.26944755 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.266230351 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.28205256 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.264618308 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283756063 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.557518075 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.290557569 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.267039293 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.267760447 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.29361043 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.267792844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.26654344 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.269691412 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850024849 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.29220047 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.270468356 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.269075833 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26795241 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.272374567 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.267363306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.268566701 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535947854 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.268221434 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.27030655 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.268434835 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.267838441 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.289559685 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344149429 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.269044139 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.563979967 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.268975811 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268250356 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.273686176 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269053973 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.312373169 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269227881 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.276701302 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.153601887 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.530048973 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.285806881 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.286821907 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.27297695 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289194062 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.272721096 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.275186086 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.310103799 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.269503965 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054337982 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.314409361 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.274986205 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.26785132 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.275492694 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269276648 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.275083004 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.270418698 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56165625 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.540704172 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.474459164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.273025732 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.269461786 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.034152238 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.333620356 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450177091 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.289056576 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269991177 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520492467 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483583352 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.272817495 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.270480709 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.271019199 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529974477 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.270135882 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588391172 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810855808 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28775258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.278485549 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057196529 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.995424535 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.272798058 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.274889549 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.551398997 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.287197596 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.270568736 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.270472345 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.271186313 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287691361 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.29089795 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.274929293 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.271425123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.271498277 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.597060761 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464335916 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.291073644 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.272767588 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768776849 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335472294 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.271808901 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.279106081 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.274692809 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.271558538 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366234619 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.273013592 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.315384891 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.2707166 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.28455307 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787789128 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.272333054 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.27274948 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46311265 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967809303 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.290381401 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.271879233 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.288333473 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.213766648 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79763904 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.307071925 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.570582369 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.284469126 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312558358 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273872558 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364440902 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795059585 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.275757444 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29062688 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928828051 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.290433003 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.694320258 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.274260911 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.273604071 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877821645 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.291236463 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.277913811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.274407587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274018237 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.573269856 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.274403909 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.317554741 seconds)
  done (took 484.055938564 seconds)
done (took 626.139672299 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.273444092 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274308158 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.269777375 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.27412666 seconds)
  done (took 10.290112995 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.285858735 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.276572233 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.28339421 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.276964354 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.283841562 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.277156405 seconds)
  done (took 8.876057527 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.270449445 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274072101 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.274357301 seconds)
  done (took 8.013459262 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.47655052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.287236911 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.592134567 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.289564972 seconds)
  done (took 8.840435651 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.287220423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.286454338 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.287503084 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.287799004 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.290196049 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.291251479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.287382555 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.288410306 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.289726274 seconds)
  done (took 12.793045835 seconds)
done (took 50.009848339 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.414658669 seconds)
    (2/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.321837903 seconds)
    (3/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.380946274 seconds)
    (4/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.384257951 seconds)
    (5/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.361726096 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.349475601 seconds)
    (7/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.413483848 seconds)
    (8/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.26807356 seconds)
    (9/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.393246812 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.310862571 seconds)
    (11/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.295191931 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.370532512 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.386042638 seconds)
    (14/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.272379843 seconds)
    (15/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.282251751 seconds)
    (16/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.299047487 seconds)
    (17/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.266876459 seconds)
    (18/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.415206444 seconds)
    (19/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.444802377 seconds)
    (20/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.489345299 seconds)
    (21/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.269310852 seconds)
    (22/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.508131381 seconds)
    (23/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.277696393 seconds)
    (24/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.303718053 seconds)
    (25/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.060902691 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.333718575 seconds)
    (27/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.031513 seconds)
    (28/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.339474674 seconds)
    (29/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.341303998 seconds)
    (30/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.32617445 seconds)
    (31/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.434952362 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.27874944 seconds)
    (33/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.175303465 seconds)
    (34/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.44423199 seconds)
    (35/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.279404346 seconds)
    (36/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.631742816 seconds)
    (37/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.500512025 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.966615836 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.352504611 seconds)
    (40/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.281090949 seconds)
    (41/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.274683324 seconds)
    (42/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.385632772 seconds)
    (43/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.373704385 seconds)
    (44/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304958268 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.31249449 seconds)
    (46/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.409878854 seconds)
    (47/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.415490579 seconds)
    (48/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.478111889 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.389269776 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.427781476 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.381252104 seconds)
    (52/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.43769657 seconds)
    (53/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.32200649 seconds)
    (54/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.369899489 seconds)
    (55/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.31681268 seconds)
    (56/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.388513947 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.07345369 seconds)
    (58/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.053591888 seconds)
    (59/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.33531075 seconds)
    (60/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.345275104 seconds)
    (61/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.29889728 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.338124965 seconds)
    (63/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.416072429 seconds)
    (64/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.389447859 seconds)
    (65/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.971154105 seconds)
    (66/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.965580575 seconds)
    (67/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.933536979 seconds)
    (68/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.478104256 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.44023298 seconds)
    (70/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.289594777 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.424063187 seconds)
    (72/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.356996265 seconds)
    (73/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.405517068 seconds)
    (74/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.500536551 seconds)
    (75/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.42028379 seconds)
    (76/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.476842955 seconds)
    (77/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.480246584 seconds)
    (78/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.53809372 seconds)
    (79/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.291346563 seconds)
    (80/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.442818531 seconds)
    (81/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.360086631 seconds)
    (82/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.380970599 seconds)
    (83/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.322603742 seconds)
    (84/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.318124588 seconds)
    (85/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.358976288 seconds)
    (86/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.341672036 seconds)
    (87/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.435580439 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.301761641 seconds)
    (89/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.302760169 seconds)
    (90/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.315475317 seconds)
    (91/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.097694742 seconds)
    (92/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.328466953 seconds)
    (93/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.318558045 seconds)
    (94/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.388680565 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.364637065 seconds)
    (96/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.350260332 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.490623879 seconds)
    (98/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.199577914 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.397778795 seconds)
    (100/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.463519085 seconds)
    (101/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.530048495 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.359939284 seconds)
    (103/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.378214088 seconds)
    (104/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.272840205 seconds)
    (105/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.348368199 seconds)
    (106/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.296918671 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.491143497 seconds)
    (108/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.380122493 seconds)
    (109/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.334147846 seconds)
    (110/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.423557923 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.390050732 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.313918996 seconds)
    (113/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.282438971 seconds)
    (114/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.278309126 seconds)
    (115/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.366850662 seconds)
    (116/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.358866018 seconds)
    (117/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.484519819 seconds)
    (118/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.336669236 seconds)
    (119/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.461851194 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.337339732 seconds)
    (121/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.384628271 seconds)
    (122/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331827691 seconds)
    (123/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.408976747 seconds)
    (124/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335033856 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.273853306 seconds)
    (126/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.3152096 seconds)
    (127/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.979420966 seconds)
    (128/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.41158429 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.374287468 seconds)
    (130/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.033688582 seconds)
    (131/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.430670297 seconds)
    (132/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.424933963 seconds)
    (133/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.274159868 seconds)
    (134/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.323180919 seconds)
    (135/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.421043918 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.395835362 seconds)
    (137/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.44894082 seconds)
    (138/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.319648393 seconds)
    (139/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.423620605 seconds)
    (140/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997404486 seconds)
    (141/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.289177494 seconds)
    (142/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.548568268 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.434912193 seconds)
    (144/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.314119341 seconds)
    (145/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.291202561 seconds)
    (146/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.944340655 seconds)
    (147/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.321464137 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.463506331 seconds)
    (149/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.490951444 seconds)
    (150/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.277511195 seconds)
    (151/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.311477437 seconds)
    (152/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.463709723 seconds)
    (153/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.159365556 seconds)
    (154/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.299021736 seconds)
    (155/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.343447191 seconds)
    (156/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.302057619 seconds)
    (157/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.395180918 seconds)
    (158/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.487884677 seconds)
    (159/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.356322076 seconds)
    (160/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.370505247 seconds)
    (161/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.301138091 seconds)
    (162/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.210155541 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.429304083 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.362895803 seconds)
    (165/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.354463356 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.427942762 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.488233813 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.356838732 seconds)
    (169/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.074470258 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.334662019 seconds)
    (171/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.9525836 seconds)
    (172/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.454174483 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.294591526 seconds)
    (174/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.400115636 seconds)
    (175/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.461201611 seconds)
    (176/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.458380074 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.380508416 seconds)
    (178/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.48875189 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.370277693 seconds)
    (180/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.322523486 seconds)
    (181/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.318166239 seconds)
    (182/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.054379845 seconds)
    (183/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.454095608 seconds)
    (184/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.325805866 seconds)
    (185/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.637224312 seconds)
    (186/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.402433064 seconds)
    (187/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.345692114 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.374462685 seconds)
    (189/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.076391506 seconds)
    (190/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.34734186 seconds)
    (191/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.342445315 seconds)
    (192/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.461582846 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.338514685 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.429286945 seconds)
    (195/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.416832032 seconds)
    (196/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.011087175 seconds)
    (197/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.582587717 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.324350312 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.36547906 seconds)
    (200/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.372784548 seconds)
    (201/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.348638037 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.396508148 seconds)
    (203/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.450830592 seconds)
    (204/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.377576745 seconds)
    (205/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.499699946 seconds)
    (206/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.342070536 seconds)
    (207/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.32390324 seconds)
    (208/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.046530349 seconds)
    (209/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.452192975 seconds)
    (210/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.117963609 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.51389581 seconds)
    (212/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.444171458 seconds)
    (213/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.384250809 seconds)
    (214/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.947601205 seconds)
    (215/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.29083613 seconds)
    (216/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.324939103 seconds)
    (217/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.4681282 seconds)
    (218/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.442506489 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.398901995 seconds)
    (220/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.279827567 seconds)
    (221/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.396436716 seconds)
    (222/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.336350838 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.033352249 seconds)
    (224/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.683243917 seconds)
  done (took 361.803851073 seconds)
done (took 363.001877942 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345513079 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.478699426 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.296914579 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.29571817 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341048766 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.292188262 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.342175872 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.303670974 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.307336549 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.307583249 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.291830245 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.311815194 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.310935532 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.336228985 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.411777662 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.307450531 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.298266146 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.304336134 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.345462236 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364217566 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34222458 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342180349 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.316508685 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.298416618 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345878839 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344846474 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.305483486 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.289285279 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.309060177 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.345818712 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.293760844 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.303947899 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.35601955 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.355003742 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342425926 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.303172147 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342354655 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.481552311 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.339556824 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.336773195 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.309167501 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355673455 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.309584995 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.311531947 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.353566037 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.317801096 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346606561 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.421741949 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.290187973 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.290804515 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346172152 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.365523756 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.309505958 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.291649105 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.30024338 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.422430447 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.305366664 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347196501 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.307623741 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343004072 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.413769054 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345097972 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.366104211 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346779927 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.307025626 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.311777563 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.306319736 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366230749 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.305517761 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343496617 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343607744 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.310135794 seconds)
done (took 105.213283734 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.421936094 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.299572744 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434770234 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.304268377 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461917451 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.441718629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.30325362 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.303136868 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.302865753 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.095053702 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.303309365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.302505651 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.296774268 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.304774183 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.426107127 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.303936761 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.301440604 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.996546274 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.304194555 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437766385 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.297335669 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.302573992 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.304276404 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.090070276 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.298728658 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.293638138 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438693657 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.302873126 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.990287853 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.292872537 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.296748412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.991832207 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.438986549 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.324339547 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.312310716 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.312838774 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464335726 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.321744831 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420933151 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419792914 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436422664 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.343159198 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.294606792 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.299182892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.305326613 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.304158279 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.303752287 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.333536963 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.298918954 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.303898863 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.000264034 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.314459245 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.3027784 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.304987447 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.303424034 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.333760318 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.3061035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.30658829 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.440660268 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.304626266 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.423320093 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.091864916 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.096958688 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.305041913 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.298243613 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.305878366 seconds)
  done (took 106.138495424 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.367729363 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.377394787 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.411303966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.320178915 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.355066152 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.415410287 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.319838786 seconds)
  done (took 10.782329544 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.307264227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.305368084 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351096986 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352408511 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.306244527 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.458579928 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305706179 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.313000136 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.305941084 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.355361815 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.307258908 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307874564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.315643234 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.299662627 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.349766549 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.314407896 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.417476743 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.303451251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.307022076 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.459393166 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306820158 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.316742487 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.353920031 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.314439881 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.308124557 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.30915856 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.078201761 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307350308 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307276706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.307863943 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307239569 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.356633092 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.308404363 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.303500031 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308115325 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419117374 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.307060747 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307428126 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.307538759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.304299919 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.307552169 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.306628256 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.30802994 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.307600513 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.308613826 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.327118229 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.309641648 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.307949546 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.30818272 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.307623472 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.35508411 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.308489857 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.308803712 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.307760783 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.359114356 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.31792321 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.308524733 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.308397239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.309438926 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308936863 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461158594 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352571518 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.309084053 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353401035 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3090654 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.310164484 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.308578392 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.308592483 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397249093 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.310385664 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352739467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.309941307 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.487688543 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.329840708 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31011 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.307869325 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.309639687 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310128698 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.300373243 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.311801116 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.309829384 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.306853536 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.311922406 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.31033713 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310036286 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.464118157 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415911772 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.310528502 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.318862892 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.313977061 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310800227 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.36048173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.310338446 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.310075693 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359170444 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42155108 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.360647924 seconds)
  done (took 134.950865413 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.318743009 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.319573403 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.310382322 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.334324707 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.308005862 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.307466568 seconds)
  done (took 9.119078973 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.30975435 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.313651427 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.312298556 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.312652263 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.311443961 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.313416798 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.311646229 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308550964 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.315400297 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.311880391 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.313027278 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.315641503 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.314096569 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.31275614 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.312998301 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.31271833 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.314457507 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312176645 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.312917394 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312712097 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.30749656 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.312790408 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312276285 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.309319591 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.31677397 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.314598596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328882594 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.313850138 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.313245497 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.315637983 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.333449492 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.314720519 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.309674911 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.313798108 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316474047 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.309581955 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316409883 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.316247464 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.314212762 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.313530933 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.316510634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314453123 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.313911174 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.316204422 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.311580173 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.31428545 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.320428321 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.330500732 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.314822604 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.31612862 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.318069867 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.315758073 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.314239281 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.317426295 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.341406227 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329859651 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.320723636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.316217075 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.315104043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.312471916 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.317913016 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.316733816 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.311421271 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.318660207 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.316124277 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.317735647 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.311954776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318493254 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317054107 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.316335763 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.317515961 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.316596169 seconds)
  done (took 96.948859835 seconds)
done (took 359.151688088 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.30263318 seconds)
  done (took 4.527893837 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.316237805 seconds)
  done (took 3.543933641 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.120117953 seconds)
  done (took 22.348035634 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.338919143 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.311219297 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.342085916 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.310455971 seconds)
  done (took 10.52822992 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.592972911 seconds)
  done (took 3.818732222 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.30995348 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.322708862 seconds)
  done (took 5.862017652 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.504049725 seconds)
  done (took 3.731850197 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.773738869 seconds)
  done (took 4.00133947 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.316323092 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.326828244 seconds)
  done (took 5.876555554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.298627687 seconds)
  done (took 3.52511597 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.193481634 seconds)
  done (took 37.422450503 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.324313054 seconds)
  done (took 3.555271821 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.336758347 seconds)
  done (took 3.5642806 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.822911256 seconds)
  done (took 6.052215775 seconds)
done (took 119.583604829 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.302881087 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.302551605 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.30042063 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.30077982 seconds)
  done (took 10.42993468 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.364824499 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.366158038 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.360016103 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.360564587 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.360735129 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.360654947 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.335489788 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.335425336 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.361246625 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.359925978 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.36120427 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.359042199 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.358291107 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.334399667 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.359393775 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.363756966 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.360675589 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.36337089 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.333684849 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.359512466 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.309164221 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.36086815 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.361017915 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.309020441 seconds)
  done (took 33.681226414 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.797174401 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.37339566 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.457087724 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.356183211 seconds)
  done (took 7.201938993 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.385866715 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.386221734 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.39824241 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.436739369 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.450518044 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.398052255 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.332579759 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.330545462 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.315946662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.384843301 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.435527743 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.378094965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.462964271 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.308071772 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.514575897 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.308282622 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.309489663 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.386806328 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.438182531 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.441951141 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.310031397 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.386857293 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.38908788 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.379611397 seconds)
  done (took 34.488286027 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.31871882 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.324550603 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.310127714 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.326729567 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.310718767 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.311973716 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.311613119 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.3175604 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.310695834 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.31081133 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.311365677 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.325507317 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.31542746 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.3113272 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.31831197 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.312950324 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.317304384 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.315793146 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.31100036 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.31777083 seconds)
  done (took 27.531004664 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.298708214 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.298550623 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.651495534 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.555111201 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.301606688 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.300222083 seconds)
  done (took 13.627133227 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.374559545 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.530873573 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.309467732 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.64898052 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.73456652 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.310966655 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.309029053 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.552442075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.859257319 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.837707973 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.36596765 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.376785604 seconds)
  done (took 19.432019844 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.306860463 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.307626799 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.309591613 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.323444475 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.361691547 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.329088021 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.317911772 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.304074754 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.366390922 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.385477785 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.333159203 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.363031096 seconds)
  done (took 21.233022196 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402444309 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309228356 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308940671 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307283853 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309196881 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155837023 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30386229 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001825187 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.331908113 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583826531 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306811873 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405005101 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565755099 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311258581 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314114097 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305085412 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543779136 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800495569 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311741544 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315140182 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346889624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324388513 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.757292486 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.519215369 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329848287 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310202094 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.574038558 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309725602 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590318662 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329078516 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319961506 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310441602 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589519273 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958282608 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430737977 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513028171 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340812525 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312105731 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.318544783 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.317643393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318459272 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312997215 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32205139 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311250453 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313592733 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318879684 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016506171 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.337484677 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.31212897 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313604234 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565826776 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412155029 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.317836434 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312546506 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349969463 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311411505 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.318516383 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437683836 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911314787 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320996218 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329103799 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.316331689 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314177349 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320234419 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916990162 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.336703636 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.318368618 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319808881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312767364 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317261315 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335585563 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3128554 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.338843503 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311855371 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012907511 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331149214 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31504368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863925725 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318223703 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.316277527 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544995951 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313684756 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314023316 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.313781267 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31347422 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022198292 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321813603 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.3000072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374964717 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028688576 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.536434721 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353969473 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344783135 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538095985 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.301837217 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314580032 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.314500626 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335509144 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337056189 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013209264 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333277336 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.321185171 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573355015 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.526383758 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327157224 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.305394578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810327437 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341105516 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.337356143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327864374 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5226251 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.907829572 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347251938 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32881855 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339129898 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316383482 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066869801 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321254216 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.422948472 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317597954 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580711642 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.119746545 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317834603 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384630441 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319363889 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315960828 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326440273 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322951231 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317325707 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.512653424 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351050029 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.330430348 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.317751075 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316983277 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.3220626 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334748952 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.32257145 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541216705 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324189068 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598728073 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317848841 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317012389 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318572744 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.539331411 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.322050182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.663350786 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581219774 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332506944 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336283816 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331564444 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335260347 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421127067 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34023918 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.332191911 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.577720112 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.323498434 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.324450282 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318293352 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343020415 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322801784 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.327418143 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321807562 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896943511 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313715397 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327165204 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210115735 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.335427588 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38702483 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327016685 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523539508 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.332088028 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327169075 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.328667718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.323012002 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549989648 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328430573 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.327294716 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402280587 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.778777839 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912497318 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351757979 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.319702509 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.321945686 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.320179677 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319536159 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319625845 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321188719 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523989226 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355055807 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31449551 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916924041 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338595443 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331652662 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.337888344 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333212109 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.329340189 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321960681 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.327372193 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325452685 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345463649 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.337643644 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465608532 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.337573882 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322835944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.841990046 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328983187 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321315196 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320870077 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355643462 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331883714 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120529262 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603762977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321122161 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595301652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335132739 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.343598854 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.32149614 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322571879 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322980083 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.348997859 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350040248 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.332462914 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332120493 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327469123 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897187638 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042539917 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851662292 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341008451 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.323934817 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343199163 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034282931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340972575 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322460931 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556255077 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041905821 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342194627 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789862533 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.351949916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076750972 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582665144 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559183995 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322636329 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.324067438 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58171003 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539737651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357195815 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322482468 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329008179 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.310512681 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865101122 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343396231 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428380534 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029653751 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341585154 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32514884 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.383598842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338989413 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7159527 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347558067 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324634095 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326045519 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336037858 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123319146 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350303696 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324414768 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927968227 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355433708 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.788587395 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343639718 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529766851 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.357159999 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.331138971 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.329369345 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.338386714 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.584844233 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582790609 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330918209 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335846943 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859381154 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.214404392 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.333659453 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326514962 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080628582 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339235365 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612182955 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.332146144 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.329780663 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346134499 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327562425 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326622086 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.325956338 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335148716 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303143683 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82305732 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.327663577 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349045714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327458323 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3324379 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583015522 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.343802739 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905834786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573429568 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329839679 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352175648 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.331709198 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333735819 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.316307594 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325613529 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327202398 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346919041 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.550696259 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344277808 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.314982229 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396127348 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5579736 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328850312 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336109937 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564085322 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.331837359 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.334342337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068852386 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37769281 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341111479 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330212941 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330525265 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369450022 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41523873 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534909191 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.360295809 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340324713 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720637142 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362021818 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33122878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.345264321 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425369344 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32845864 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.333775682 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.123632254 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90926854 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062311641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911273888 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606004882 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33077082 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331172261 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330483933 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492936399 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329902326 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605225747 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331011982 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.326124587 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353391397 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339485453 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331939098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546730803 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608748278 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330949698 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343942037 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334499527 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.330856526 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341214954 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.54244075 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831339981 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890176923 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334133769 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331579837 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0426803 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625882797 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331745256 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331472464 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332584032 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.337967287 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.356197816 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.35964999 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331395447 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476833247 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587617745 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990522281 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.360204095 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.362788668 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.851157572 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331859675 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601888363 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332448601 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557072814 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933070378 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042660274 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598432089 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400631669 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538857886 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.334615938 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495764185 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.345257533 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332734293 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333561645 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333814225 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.332172143 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.342944963 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918163627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616033264 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.339001141 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.344134161 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364177578 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.341987236 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.556410999 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05764343 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55821126 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344225657 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341934732 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332990051 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91845288 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610839957 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335770628 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.340709042 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56823769 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354335609 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359572652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852877248 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.334572623 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889582788 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.305960951 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357793343 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334747374 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039533066 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917364616 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.355485003 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834845142 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338279091 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347092937 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615582646 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.343639594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33569647 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637650903 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.340938969 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334613629 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549298291 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.932861678 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115668782 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.341225269 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359239984 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.338141628 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335618791 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337314748 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33584048 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336281836 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.743794776 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358242737 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336866322 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349739979 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.350598771 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335015183 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.340713728 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336739691 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.345561412 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.331974562 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.330234152 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338671141 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467266682 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884267952 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355986827 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.01487001 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.662083461 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59451948 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337067354 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.328513582 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.343254323 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337625087 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337945793 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339520504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353025138 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895026488 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.340822549 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.353486497 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343346267 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.338190225 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549519264 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352897195 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546471867 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359101991 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36067526 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.32487759 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338631591 seconds)
  done (took 953.195738063 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.348823373 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.356115686 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.356398747 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.350120377 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362938642 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.344919194 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.344956935 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358907973 seconds)
  done (took 20.074985319 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.347254915 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.343861408 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.347197005 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.343896428 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.344166862 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.803987415 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.359261643 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.343218575 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.359070816 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.338050736 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.34450785 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.334753494 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.344052094 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.340190525 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.33591901 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.349504117 seconds)
  done (took 32.231393702 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.267748076 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.463847838 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.153744454 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.362037774 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.375516252 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.345218891 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.545925909 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.352570617 seconds)
  done (took 26.121086553 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.346165407 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.344910513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.346999931 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345418385 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.345300088 seconds)
  done (took 7.982534672 seconds)
done (took 1208.454786916 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.346618898 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.347320413 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.345495968 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.347061025 seconds)
  done (took 6.639593788 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.328130845 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.329021318 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.329871882 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.344807019 seconds)
  done (took 9.586587426 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.039871394 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.957558108 seconds)
  done (took 5.251109183 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.823110168 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.8157629 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.817122748 seconds)
  done (took 6.709934161 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.628460308 seconds)
  done (took 2.881872383 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.2366859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.328533756 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.004291369 seconds)
  done (took 7.825058364 seconds)
done (took 40.147947289 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336462247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.584641194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.492618834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344235944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.497930606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.493118568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.073350555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.33724024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364305152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.343227138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.336293808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.498975349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.057629895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.59356624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.057674806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.680615908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.498848441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.340484694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.344120817 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.344568681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.075282217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.340768064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.337599845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366165997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.501961969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.482012612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.338211318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.681101174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338362727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.337434049 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.501869898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.338594402 seconds)
  done (took 81.515779653 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.338518208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358436051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.353880397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.348950322 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.337564981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.356065224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.340376464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.338790374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.338837002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.356130194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.367222446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.338842963 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.340330534 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.339559198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.355360451 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.339248355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.361979819 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.338444015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356032168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.356307024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.340842503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339948896 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.356163686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350035157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.338947952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.341553651 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358721955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.339358041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.340119743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.340516528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.340920107 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.368292536 seconds)
  done (took 76.375160281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.344989294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.343876788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340372839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.35316754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.340688127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.361354084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.339755637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339845672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339519264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.370472206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.351365321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.339871097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.357397418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.340499369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.358145312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.341207726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.344470415 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.350635099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.343883865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.340875886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.341357024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.3452538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.341867334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.346523583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.347046678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.342050194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.340613321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.342517235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.341221042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358585114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.342976055 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.342000722 seconds)
  done (took 76.333509459 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.626715304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.352605348 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.356232463 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.347440138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.356126625 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.353111518 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.347686323 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.631433344 seconds)
  done (took 14.630920438 seconds)
done (took 250.109366372 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.347389207 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.855166133 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.394570318 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.348000169 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.371260555 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.375512387 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.565470992 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.390331516 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.569369226 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.365445143 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.369224473 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.357473454 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.138092259 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.495322407 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.216459779 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.327389397 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.217879085 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.346486627 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.925363808 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.627068634 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.376002893 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.348900673 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.218799139 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.24496757 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.339009877 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.427357692 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.450416794 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570654345 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.509535814 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.42964351 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.863342974 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.365409752 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.358155337 seconds)
  done (took 63.366148937 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.348931007 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.47997969 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.354599314 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.354859089 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.481298016 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.374837397 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.350567598 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.354830433 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.355283853 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.355040302 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.355805312 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.356377353 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.356676584 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.406947274 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.486326573 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.369928993 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.35173714 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.480349123 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.351582618 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.349545602 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.404768965 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.355891411 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.360082549 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.406510262 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.356737547 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.357250931 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.482500863 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.376461621 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.359148397 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.481577379 seconds)
  done (took 42.877856508 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.358317601 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.96863501 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.103593021 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.363612651 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.353228701 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.356731986 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.633681298 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.357199808 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.356448431 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.356808653 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.856735914 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.36058487 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387817417 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.131308564 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.360991472 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.358822027 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.358777124 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.354392276 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.969437624 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.363114175 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.653413146 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.358934902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.634968822 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.364378271 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.376514612 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.354691896 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.359349977 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.181152198 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37412448 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.859412604 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.122830059 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.634904404 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.117184539 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.140145674 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.124297611 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.364244969 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.359545038 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.860459373 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.357561311 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.356253364 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.635579146 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.356031136 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.119318413 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.057137381 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.372881249 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.359790161 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.201223757 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.876384023 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.597395327 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.36210799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.14328911 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.358638751 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.361648316 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.358148723 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.595304137 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.362051501 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.355287483 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.222932303 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.381022845 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.637279911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.360997242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.356628206 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971794788 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.357268478 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.966268275 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.358683833 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364095355 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.375904441 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.125013112 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.359971891 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.077763684 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.377806741 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.361869602 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.857164321 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.96534364 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.27290758 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.358143637 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.968998854 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.146385576 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.652497895 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.363694334 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.160851662 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.660087325 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.364006141 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.364435777 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.363439031 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.361819111 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.438294908 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.635111744 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.028184896 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.079291094 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242705887 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.659813149 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.369435362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.35856956 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.225280037 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.382523353 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.363886999 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.120344133 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087593285 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.376667973 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.366344928 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.080547795 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.379080887 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.641624358 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.366820152 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.131203035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.359872941 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.438218729 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.362842567 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.366308706 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.382290726 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.641277462 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.365172288 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.364911332 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.060834852 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.888578456 seconds)
  done (took 191.484778637 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.354335469 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.370293284 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.369613552 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.353625512 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.353520425 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.360956761 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.354678997 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.355147703 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.358902685 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.354348186 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.353837873 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.362138343 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.362158392 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.35458053 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.355187494 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.371863249 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.353732493 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.354333912 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.3700952 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.354909188 seconds)
  done (took 44.448884295 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.366202143 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.9063823 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.89256786 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.369975837 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.36565531 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.361374479 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.416256004 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.366061633 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.366364007 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.656928037 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.533751415 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.386861425 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.36561516 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.365601549 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.878710008 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.359812783 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.653209371 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.907071825 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.367577322 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.909943788 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359767606 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.365839652 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.361460342 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.910916463 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.683625827 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.645236089 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.422439744 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.913884422 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38255298 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.366836962 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.909064569 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.368003856 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.363104972 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.91257701 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.383715934 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.38253988 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.367620381 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419352076 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.423168438 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.65964028 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.363344629 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.6494732 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.378612407 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.542056551 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.368924279 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.356875359 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920132712 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.384549711 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.359015152 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.369057037 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.3735402 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.896336096 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.382589112 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.891313609 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.388623053 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.368272712 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.912807799 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.89083622 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.903934129 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.53404519 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.383208361 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.643026858 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.372339965 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.925426953 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.388876941 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.368930844 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.369437031 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.532725819 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.934115076 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.644095185 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.662352031 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.662763187 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.373534451 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.42678634 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.388788161 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.271189429 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.429313839 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.773633132 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.662924215 seconds)
  done (took 125.119181815 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.628394633 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.479941384 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.765387922 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.972604489 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.414996462 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.498081533 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.475810192 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.621180113 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.371698702 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.441197507 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.995955266 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.480877424 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.131104783 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450622431 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.474478245 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.541454736 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.757599394 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.339876573 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.067279678 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.979848112 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.365395817 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.467971962 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.952762992 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.574912117 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.363265563 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.950393724 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.329248311 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.039310741 seconds)
  done (took 53.206042047 seconds)
done (took 521.76274895 seconds)
SAVING RESULT...
DONE!
