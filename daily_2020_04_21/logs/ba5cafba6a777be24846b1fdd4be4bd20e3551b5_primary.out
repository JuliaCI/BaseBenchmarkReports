cset: moving following pidspec: 7121
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.344195532 seconds)
loading group "string"... done (took 0.578679828 seconds)
loading group "linalg"... done (took 7.676590094 seconds)
loading group "parallel"... done (took 0.160816212 seconds)
loading group "find"... done (took 1.133362163 seconds)
loading group "tuple"... done (took 1.859136945 seconds)
loading group "dates"... done (took 1.236429544 seconds)
loading group "micro"... done (took 0.234053847 seconds)
loading group "io"... done (took 0.906266452 seconds)
loading group "scalar"... done (took 36.846357066 seconds)
loading group "sparse"... done (took 11.48744813 seconds)
loading group "broadcast"... done (took 0.915758797 seconds)
loading group "union"... done (took 12.258793501 seconds)
loading group "simd"... done (took 4.54285533 seconds)
loading group "random"... done (took 8.632603093 seconds)
loading group "problem"... done (took 1.783052825 seconds)
loading group "array"... done (took 19.971518516 seconds)
loading group "misc"... done (took 1.762310823 seconds)
loading group "sort"... done (took 3.128743303 seconds)
loading group "collection"... done (took 17.080872492 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538799113 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13009867 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140814032 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12997692 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15613745 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123589078 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134112936 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.092666182 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866878345 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157692891 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118898683 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42126137 seconds)
done (took 5.39615517 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176259205 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086948106 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088304663 seconds)
  done (took 1.235113669 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071876195 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131576934 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.076856154 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073147509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072463608 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072851602 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072438932 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072608312 seconds)
  done (took 1.632063679 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077878984 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07450014 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072330754 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073425118 seconds)
  done (took 1.359342301 seconds)
done (took 5.544200482 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.781394648 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215375103 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18902168 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.402837705 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133285709 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182485564 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662554528 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330381413 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194916403 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082425556 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11225467 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348509606 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125686167 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.652553578 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082789469 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09495957 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140860498 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449885505 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072966825 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087310345 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094590047 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136677365 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092089308 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080013711 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151794436 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073118156 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139396052 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087517281 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071482251 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220296932 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179733551 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673321156 seconds)
  done (took 10.434333745 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103410698 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103717197 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074446596 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130648057 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105037863 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078049929 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082752602 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0743774 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.100663086 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13494125 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100149195 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.113080386 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074025801 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076849723 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090984791 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217348377 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088736011 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088616781 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077613347 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084829365 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115967196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084815583 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084606145 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085543863 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135246305 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188782468 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104996788 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105198799 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073630565 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089347803 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.121755545 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135612728 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073570985 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072975889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13307232 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102228855 seconds)
  done (took 4.808945902 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.993586302 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146245974 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094263295 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139733225 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072274983 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115379696 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.075644126 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088492146 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21678866 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.386897768 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.119059656 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.593626475 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115108785 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115844061 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107792097 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072433294 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074190778 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072314647 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.48839038 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107382427 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112935892 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085143503 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075193819 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073495242 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070884965 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072201474 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069138355 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073504593 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117959556 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079797044 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30517581 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12513593 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074169176 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.936544464 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169371081 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07051578 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244810842 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176725623 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100028604 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149047609 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076605152 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073224218 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165898484 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072485238 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076606056 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07370896 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092705159 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111359293 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128134331 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072422161 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072187669 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172895142 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073330674 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076113593 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086907533 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.139979032 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160185804 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073496278 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299321239 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097765891 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077518617 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072372455 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178761479 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127309094 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074052834 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072063587 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073374172 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073602839 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364510652 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071545296 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.167313561 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075947189 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084086475 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075968223 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074632808 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077508974 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07830873 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069882009 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093507339 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070493315 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080351809 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070469412 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071024367 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071126677 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086935654 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.485142785 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072787546 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074215537 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071070018 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096166382 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100707053 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075378558 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073076661 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107487342 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073840402 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072621705 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072396624 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087814367 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075362004 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11852218 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0753118 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0709424 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091549347 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105016912 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077679437 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105810961 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088143423 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075054192 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.445089367 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070460084 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074057566 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072899734 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075993557 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073839617 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08931869 seconds)
  done (took 22.479391239 seconds)
done (took 39.775874266 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247839951 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076889792 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077423498 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077581319 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077334887 seconds)
  done (took 1.701965439 seconds)
done (took 2.835825956 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124317537 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102100438 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069991769 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101328899 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070175055 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104381036 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103945409 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084667059 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102682191 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07173713 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103598958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071356878 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071432948 seconds)
  done (took 2.325082531 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088496189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088844462 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07538897 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087943069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069571074 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087453528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086518545 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094727976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088080045 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080204784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070622784 seconds)
  done (took 2.04337054 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086923893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088509327 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075157625 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087405899 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072596451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086342342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086349601 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090583553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08651856 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07902718 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068972277 seconds)
  done (took 2.028625722 seconds)
done (took 7.517215788 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081522204 seconds)
  done (took 1.19266683 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532770788 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.629203217 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084083031 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108565028 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192568206 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114861279 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.245051258 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086600412 seconds)
  done (took 8.262014478 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093842025 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075124714 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086800034 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077069368 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076841194 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074109689 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073649388 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075865186 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073386445 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077219341 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077440113 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075853274 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079331454 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076049041 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07453 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074594041 seconds)
  done (took 2.427209685 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09758173 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095643909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079254069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082190416 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079230322 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078618362 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080850968 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080346267 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077548526 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079255672 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0821981 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080071027 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078547853 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068917449 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078676328 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080425218 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075798056 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078490651 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079263055 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08062101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079330737 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068483987 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076425833 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078503985 seconds)
  done (took 3.124245404 seconds)
done (took 16.126894325 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111308508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073608967 seconds)
  done (took 1.304314041 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08406743 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085663436 seconds)
  done (took 1.299614936 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.0853745 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070148444 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092682669 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081118188 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070746475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070244937 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089440636 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070703488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070039516 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070458956 seconds)
  done (took 1.900711162 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072076285 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080702809 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07422585 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084418044 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0769537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068822643 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075300232 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.07162088 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079923658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06760713 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075236066 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087633767 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074800057 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088929945 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075287654 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072587059 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074456649 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071930603 seconds)
  done (took 2.506056818 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070572717 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071085339 seconds)
  done (took 1.275550377 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071512726 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068615962 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071033939 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071172342 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068432339 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066993009 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068336629 seconds)
  done (took 1.616236212 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389000738 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120541901 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305691663 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07735239 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086014522 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258456438 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071941049 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076812897 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076640526 seconds)
  done (took 2.629995542 seconds)
done (took 13.667891091 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085920105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093471554 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100246282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382947376 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097465185 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072479133 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118323573 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18606065 seconds)
done (took 2.280565938 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218147232 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.664118334 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404773537 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208389174 seconds)
  done (took 2.411124822 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34189707 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093044952 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065407263 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074224034 seconds)
  done (took 1.718807812 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072345896 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074917751 seconds)
  done (took 1.289448642 seconds)
done (took 6.778712562 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072538219 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071847248 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.18359397 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071925308 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.069350146 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069449044 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072447047 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071571034 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.07159029 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090923694 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.071309354 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072213587 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070855338 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070707842 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070940763 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073169542 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070446822 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070510146 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070535244 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072838803 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07056363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073066986 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070733488 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070807155 seconds)
  done (took 3.013054365 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087712003 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071663825 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075703748 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075154791 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07348446 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075704978 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075241174 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072521224 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077867803 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075753808 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075527853 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075758033 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075173947 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074935355 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075311804 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074313016 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.076924073 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073269671 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075607476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075115244 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076297422 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072018061 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073916422 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077017209 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072897621 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073014037 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073726323 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071091448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075575505 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073196205 seconds)
  done (took 3.401011069 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075205685 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068310351 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069304777 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076181239 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068665322 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069226571 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068276999 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06849157 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069226657 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068127676 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069899142 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069362965 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070306875 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070785815 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07068889 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07447356 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087780335 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070126333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070154977 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07061749 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077083856 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069627296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070044759 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069691758 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070015336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069965875 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070325555 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069345566 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068535844 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067862853 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072264974 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072090043 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068871628 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076027092 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072510713 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069205992 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075019686 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069548558 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070889846 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069903943 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.069697789 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.069876767 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070388001 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078076656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070222298 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071237279 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070586164 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071464294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071021551 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071702589 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068201485 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068608989 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070251387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069223437 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072638927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067748202 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068993367 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067924197 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069209146 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068516727 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067794242 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068253792 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071314041 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068832986 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084481307 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076150076 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068344179 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06976921 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069225008 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07177719 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070172763 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083867036 seconds)
  done (took 6.271996269 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093893061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092528869 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073186824 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072754984 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068377089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070992215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076699096 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070699002 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072791332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090474246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070944152 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072961178 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072627505 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075108565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071026328 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072704623 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079087053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067052193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069081281 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072828514 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069192669 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074163889 seconds)
  done (took 2.816158277 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15307278 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075518507 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110407788 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080275796 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074852307 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07964998 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075153484 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074839331 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07513805 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072789486 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072277029 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074831712 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074843161 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072414403 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072942971 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072763847 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075058833 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072406127 seconds)
  done (took 2.616882367 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082694615 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071290408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093401632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071227648 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072007708 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073566597 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077574208 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08112817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.074855048 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073798615 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080673806 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074505772 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075388316 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072836821 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075578735 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073306309 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075527677 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07336069 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080770945 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076195859 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075526357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078670378 seconds)
  done (took 2.84150117 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085382501 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073196047 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085983823 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07350773 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066821929 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06976452 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074845209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071762978 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07507176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07308044 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071342737 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070603125 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075419153 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072886563 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075253696 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074035039 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075141486 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072687536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075340738 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068432507 seconds)
  done (took 2.639427374 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089110473 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072883399 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072851719 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078673007 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072389309 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072419851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078665574 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072312931 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07256937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092840616 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072632069 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073024547 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079856833 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080099407 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072567312 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078925971 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078522536 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078478113 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072460837 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074529246 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09396383 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072364728 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078586697 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072496577 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072425235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072623222 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072496548 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077133715 seconds)
  done (took 3.309456326 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072276283 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072523856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069302281 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069448533 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071009077 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.070924304 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071269478 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071107178 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073223765 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071331396 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073583621 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073352246 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07336451 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073417838 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073693931 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073679667 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073165486 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070514889 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06990364 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069451602 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071467226 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071456835 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071879026 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069214329 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069248067 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07152961 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069084512 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069465635 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071836943 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069110065 seconds)
  done (took 3.305749902 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080146168 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078010272 seconds)
  done (took 1.323007151 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067939778 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085645279 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.069251365 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076820134 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075451109 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073023456 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077981425 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074269288 seconds)
  done (took 1.761758679 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08716236 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081088959 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071650301 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081774248 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080156892 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088744791 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128962263 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071508425 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078526199 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070072202 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084257831 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07098453 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078178815 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072178516 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077584441 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079123403 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068986876 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075405159 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072484462 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069761736 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071465274 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080514245 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074901785 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066606045 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073229756 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093930523 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081741318 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070337647 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075121894 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079312544 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077896537 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065729661 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070910413 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070836904 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069034431 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079597464 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085047244 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07457381 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080296201 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071395768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078922373 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065889263 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075869719 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078357331 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082165109 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070608833 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071281971 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065830183 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070091613 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073848855 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066132441 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072184554 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065960796 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078728748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074859053 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081806243 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069693078 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073369844 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074295102 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074500593 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078280464 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073548615 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075620265 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070153236 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082398057 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076745151 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079010791 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066145708 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065648767 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069032787 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080717122 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094689802 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07736169 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071368778 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071366511 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069238226 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075337764 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071658011 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075931759 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077770852 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070123026 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074409168 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078186062 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071509868 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073621477 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076669904 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06875359 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072647083 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069781679 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086558935 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071910051 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069457733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069574684 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080956056 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074878917 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069498077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069106459 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077809355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064263027 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070007036 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069825394 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071410874 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079283451 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072745805 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073812885 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0788037 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076420562 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070941505 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072855538 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067149398 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197617713 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073091541 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081262236 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066899229 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075740362 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074306085 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072104555 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.081189005 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06985337 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071425554 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080877026 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078438619 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070140206 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067999975 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075542118 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072041373 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073835162 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079935183 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069765587 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066243816 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067252741 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075606269 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070991333 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075767474 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075224362 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07522928 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065923701 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069162169 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07551338 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080549548 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071957339 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07337735 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079355387 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075385748 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072149887 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080467063 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074575668 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072080393 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077249308 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073239525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066593704 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07367322 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07423753 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.07028518 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075803746 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073494294 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073426875 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071064362 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069127261 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076205942 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071239738 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071090337 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072620749 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070001517 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.0814692 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07368825 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066342916 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068566255 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077504757 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070209476 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07001688 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071173734 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073587574 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07116193 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069104662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070273865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073535506 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078325892 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07370553 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071167376 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076865268 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083642755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070198384 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073820457 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070010441 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071213224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071055828 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080625182 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077533747 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074901635 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074524438 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06813993 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075858389 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078895288 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070517404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068228302 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070532419 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073811878 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076691372 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073601938 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070953228 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068883414 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072365865 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072497855 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074249557 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06986688 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070625394 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075220565 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068648352 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075209388 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069511389 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080145882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073467336 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065445473 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071637371 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067902019 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076698295 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065476387 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069388184 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069953811 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069937306 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068181701 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072276577 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064390288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.207716089 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08183093 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073854124 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072529559 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.072244646 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080112258 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074195444 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07625523 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076942692 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077670249 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082231185 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072773227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078168457 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083450153 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071337626 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065781215 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077152105 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069886228 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070008197 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070323886 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069182215 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075275724 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078819889 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077956128 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065805639 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075191069 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070223359 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071058375 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066582749 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075643167 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074584401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073200852 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07838096 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07168252 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071093299 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075828411 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070801594 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071214981 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071724901 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074653044 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071480287 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073431443 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071056619 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075190014 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070681154 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068849532 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072942159 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070957875 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072594182 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076191087 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07036699 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071919397 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073906568 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070986774 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072226392 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071963761 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070828105 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07456419 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07313148 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072171227 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074351412 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066105759 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079802699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0702331 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079523212 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072384909 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068091475 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075967106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0742878 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075336953 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071433861 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071280227 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073075278 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070187861 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074049075 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079092192 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069954162 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083563 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079833317 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074844051 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075969906 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073087395 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073256931 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071140725 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072515058 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071203391 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072073007 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069993126 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075120127 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074007508 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072062429 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073247832 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070674343 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072042768 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071550579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065583195 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07108194 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071497123 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070039609 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079545691 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070347163 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070569878 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069707176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070218812 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068743555 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066970726 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075001951 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075728283 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069633404 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076208644 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069815475 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071677398 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080300077 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064242355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067719696 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.200640888 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071730117 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080857374 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072997014 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082476566 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073401545 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072995836 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069414364 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071910261 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070799443 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066678243 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06956611 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075376192 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071107131 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070388605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071020174 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075267712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071924991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080105908 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070800226 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.0730166 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070969312 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068961033 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071880986 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072144891 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075010538 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071348178 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070356868 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068485154 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070796901 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07395412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073904989 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070840621 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073584751 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079905334 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071215175 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074692856 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073608554 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066708757 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074509944 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071245236 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070967293 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070809712 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077946416 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075627261 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071689612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080564766 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070255012 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072900648 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07090268 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068632634 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.0700096 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070303891 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070390212 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071017105 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071716838 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079342772 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069180467 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074930819 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07211019 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072721054 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077816127 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071367656 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07498859 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075996353 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072730295 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073479871 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079861991 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074481483 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074593135 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0715832 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073060265 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077657665 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071220743 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078120007 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072218368 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071618759 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073584147 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070280811 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070660714 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070571065 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070204296 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077291302 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07094902 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071105218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07131239 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069008313 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072582276 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072481195 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078968108 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073796557 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074733515 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065499221 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068330221 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070845875 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069337082 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073409909 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073772366 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076657776 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073775345 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072033968 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069641164 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0801884 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077037241 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075323734 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069374986 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074078281 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070137259 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072834149 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071464774 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071153087 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070736821 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074402625 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072210003 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070340067 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076260259 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074094814 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201787369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075543606 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074826561 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074428538 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067940726 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072326822 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074754568 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077044061 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075038348 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071724812 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082272815 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070617073 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072423762 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073999236 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071401707 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.077325741 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066944373 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073390255 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07153508 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072147611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066759633 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071261951 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070336756 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074532676 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071333426 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066828121 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082317079 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081105093 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074958274 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070613544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071536154 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06771489 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068059996 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072153393 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072519549 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074379317 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081551413 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071875536 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071028946 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066515452 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070613473 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075135073 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075839258 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068764699 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066849051 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071324233 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074468018 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077064008 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069613769 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070528008 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074760509 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073652835 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06935882 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073062401 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068085548 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075164706 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083150903 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070863122 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073399244 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077299943 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079080227 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070791774 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066208216 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071439366 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074271872 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072800492 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071752928 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071827719 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085900845 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074561485 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070650044 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070040673 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076578331 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071673581 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079435451 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071266324 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071028311 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076477109 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073467269 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077498318 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075005047 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07847486 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074354926 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074690538 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070009805 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072891183 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069002704 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0708612 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071368072 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070961991 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074294457 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07646841 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070884777 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081477646 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079791999 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072672311 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068043601 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071197291 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071083236 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066050693 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070955372 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068833151 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068712821 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06891963 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069242011 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072188011 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074821955 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071998681 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069887515 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069267984 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064276185 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073383574 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072531828 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072166157 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067004206 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06933679 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.202646894 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078166096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074839339 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071426104 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075443447 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074979621 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074334012 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066690811 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07910651 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071531969 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074328692 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07200705 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070966978 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071846915 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075406182 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0757736 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072018176 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074210046 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075747838 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072626629 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069632696 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06884818 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077703148 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069742223 seconds)
  done (took 45.515276765 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104575358 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067496198 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067000812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06684515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076694404 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068034928 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066375242 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067678406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067741514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069739881 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066681225 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066365598 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074404344 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081539867 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076445223 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070635336 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066754519 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067712753 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06675102 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067396827 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07440826 seconds)
  done (took 2.752411099 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077452367 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082886047 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078963897 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086582364 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075522068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074225033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078701057 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074042871 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082314956 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076973962 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081843134 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074560789 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076514805 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077001242 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076705014 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074311701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081745673 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075389379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074292286 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078920623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074122853 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079044548 seconds)
  done (took 2.955333428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071530142 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070322609 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073371023 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065545628 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069904628 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066126913 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073373425 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068589767 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07353529 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070434368 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070288162 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07811346 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073235458 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065742285 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071492131 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068748715 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110551887 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073424829 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070517998 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071287381 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066332347 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072782896 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066037465 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066529702 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070655826 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073005191 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070970241 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068987179 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069796254 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070588972 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070067827 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068619682 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073446708 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071512771 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070605925 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070358795 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072715968 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070598315 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066314228 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068518025 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071186082 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067068819 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070660502 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072314639 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068654598 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06860923 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073213918 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070233233 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065787422 seconds)
  done (took 4.728379439 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081997101 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113792203 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073378945 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093242396 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.0829687 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076010493 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074641413 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092840846 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068320661 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068704627 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084409522 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081943236 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070411041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074012363 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075273293 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069558219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070527731 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068841532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072965092 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06914728 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073445313 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076292289 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083407538 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081342836 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073116643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068961528 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069144154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07380626 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081379959 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073952367 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074552534 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074796839 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084177189 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072320324 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069303318 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07243779 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08477685 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070204387 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072288444 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067842382 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071892581 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074168372 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076432027 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084372974 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069746887 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07409502 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069834235 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06750271 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080764814 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071834329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076612861 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082758776 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07332411 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069848841 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073852705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084030973 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069831003 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068969087 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072785508 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081022189 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068173372 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073435623 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081715134 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071433994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076055998 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082229973 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074544059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073300875 seconds)
  done (took 6.519180524 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079696889 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101242686 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086680608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103327314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079809342 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080091876 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079779609 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.081372703 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081987697 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086000049 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082236438 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120601126 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084469295 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08379222 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080882274 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080023161 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079878009 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080263305 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079580866 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080071563 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079955679 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086234874 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079818819 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086291052 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083017531 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075542944 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079830538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080132127 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086495055 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079728064 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082542875 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080292265 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080445421 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08629554 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083203111 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079684575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06967732 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079710279 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07988513 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079495023 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075734639 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086491034 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079722341 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075591877 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079901803 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079752532 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086046895 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083013564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081720351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083533272 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080071805 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086142345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080035787 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08015561 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086044295 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088884732 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085917249 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086140551 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079671743 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086327547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086034979 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088668482 seconds)
  done (took 6.429168831 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08476897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077093815 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089574473 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066158987 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069306737 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076537127 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068685713 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068714261 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077562731 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079536788 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082099318 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07873618 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081246818 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081761431 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078725376 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081291106 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078660867 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078483094 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0794651 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078711396 seconds)
  done (took 2.845476463 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080678062 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089280324 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.073351482 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078333022 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075529255 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075975245 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073199653 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073919746 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071690258 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074006917 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08010716 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080257344 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071866831 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075822526 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079791694 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076093282 seconds)
  done (took 2.506220047 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087215254 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077440302 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083240772 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070618749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0715897 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066721854 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06997472 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065768545 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066754661 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082592836 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070653498 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080915293 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070140323 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068918098 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06722223 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076284766 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068640132 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069430013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.07195438 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083172012 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074490388 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068695204 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074025679 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070017879 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072657573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074384464 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069268305 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071706626 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067390407 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070804419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073504832 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074048465 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067515133 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068146495 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069636229 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067759286 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070223681 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.071150629 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076272758 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070258367 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068849489 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072756837 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070507787 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071394211 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066853934 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070725675 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067152872 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073277574 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068316017 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073868858 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070241384 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072876718 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070898704 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077316588 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073040482 seconds)
  done (took 5.233688749 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08504164 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074495199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066648691 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069420199 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073934949 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07274835 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074783427 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071855011 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072307909 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068933846 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072584275 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074013105 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07238776 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074274438 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072153369 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074236892 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068638405 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07380852 seconds)
  done (took 2.601433096 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077359853 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071367839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07905512 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071485504 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071595498 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073983685 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066933233 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068954805 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068996697 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071373207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071159629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073333652 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069030543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073376764 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071163297 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071145223 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073997928 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069334721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071303466 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066632978 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073089972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069173913 seconds)
  done (took 2.855080061 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098220818 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088624006 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143289388 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084883628 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091337686 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07648956 seconds)
  done (took 1.863668697 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096679918 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10557325 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071336264 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073770832 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080294121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074683593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074730134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074538764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081865587 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079797733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077731723 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082335459 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081662123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081934614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079971909 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080104412 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074672611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074648555 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071539433 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08651689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074854248 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081878052 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074993279 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075106553 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075092678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081339792 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082082352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079674101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074728386 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082192125 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080025402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075328308 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082435307 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079644375 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074609573 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082323802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07516362 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086858326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080018027 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08186707 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074293196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079854248 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082068208 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078681957 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082352549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075163146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078744054 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074898438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07516472 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088132031 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079729114 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080915561 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079892801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082134899 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08183157 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08794492 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079731863 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081394608 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08019906 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079435946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081179724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079790959 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080829027 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07942423 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079603588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081622187 seconds)
  done (took 6.555626465 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109725836 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072245391 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075606254 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08054677 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081376772 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074899353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075055495 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075412981 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075254302 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072028902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112070264 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075573685 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081255584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081533544 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07572431 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075013432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075246907 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081382512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072099663 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088275302 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074628402 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081458395 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082820927 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083193677 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081849834 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08208968 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076127439 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075016582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074815911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074796388 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078572309 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074692677 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081785858 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072116341 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081318005 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075184989 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074912678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079256179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074779986 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080178425 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081508194 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086376494 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074973088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074993139 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079820354 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075008453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074730885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072059647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074888813 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071725136 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079596102 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079900052 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079570697 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080924525 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07494784 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074796617 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074855549 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074660086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074920428 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080126777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081460576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074879011 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088067573 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074877536 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075643449 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081211729 seconds)
  done (took 6.493140527 seconds)
done (took 134.294954163 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199864404 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175357069 seconds)
  done (took 1.648601182 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073348296 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100609833 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08095717 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133486053 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07217889 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105652334 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104132298 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081872825 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071050311 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070880943 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071246413 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073800659 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135705813 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071383011 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071021136 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074148081 seconds)
  done (took 2.683104216 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102608182 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160841663 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10556915 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070300373 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102247384 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076474597 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07278411 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079396301 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075198421 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070220256 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077110673 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074659441 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070293324 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074804475 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075876867 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07652722 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070191259 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076775679 seconds)
  done (took 2.801460459 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101962236 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095086444 seconds)
  done (took 1.492414544 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162236312 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137478331 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205821518 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34149242 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157593335 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146417945 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145830067 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145050482 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118279622 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140692979 seconds)
  done (took 2.99241063 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104661825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153996663 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277637749 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120476956 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078034971 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095186186 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122631695 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08389494 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083780947 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08503482 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086279192 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.082714323 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105163975 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080451659 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081650504 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082522249 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107825142 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078255026 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07987779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08020783 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10610088 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071858398 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078072565 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078668358 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081015947 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081372204 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071357071 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071644166 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07993188 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079985481 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080708851 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093883021 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081158366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105625234 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075979062 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106326643 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080883443 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077434835 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079870866 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077291148 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081638732 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081288011 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078445848 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080332842 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071525021 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080987883 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071685362 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071707889 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082266441 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071926752 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082067738 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080530745 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105482182 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072220941 seconds)
  done (took 6.158334199 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111299303 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111681139 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075988439 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115870076 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107801059 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07479985 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109493627 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102627236 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111438885 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07481877 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072983304 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075295398 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083463356 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085214002 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119469596 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111637963 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07673192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073819784 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111494744 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110918559 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073719917 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105468149 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101191741 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109754339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07269574 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074409811 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073124352 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07470985 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07972527 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081432881 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073855493 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082712918 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087300511 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081593085 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072362161 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073542544 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073506707 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082071875 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083051375 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082133977 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.08041973 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072290161 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073666522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074181795 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074197645 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072292886 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081153421 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082415151 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081329015 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073474026 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074759262 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073134591 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074432416 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082059428 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0803429 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083459533 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082142266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073456828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073078149 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076299877 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083665536 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081912711 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082158802 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076701042 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082745309 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07333043 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082983222 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086746093 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073582777 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073941391 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073321577 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073155324 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074309024 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079872795 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07966225 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074276582 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07303429 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072848145 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082144438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080861338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07285144 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079548202 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072051989 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072687468 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074010902 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074292827 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079709391 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08174369 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074124671 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072635313 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072258326 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072203335 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071293574 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078268825 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080716017 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079744841 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079426604 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072851011 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079770049 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078831562 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.206709731 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.084074249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076054444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076540686 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075712887 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082106395 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081711833 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083784121 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073971539 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073749236 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08165322 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084839231 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074295791 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081728587 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082942587 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082726894 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073331836 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084236703 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073696573 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083691985 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07401505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083691335 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073920022 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082772628 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073903402 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072987498 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073916084 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083221721 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075389849 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074505279 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074608309 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073321702 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08242368 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085815251 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076123765 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081682072 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081925071 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075404295 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081926133 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073771063 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08186517 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073515389 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074588845 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072688387 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084041895 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073633053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0732904 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073352618 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082678683 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073644291 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082775714 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080281845 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072690692 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084292239 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083787049 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079876812 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082931802 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074403887 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073281919 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073131216 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073294389 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080166243 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081663558 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074469422 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07335005 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080245511 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082145144 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072645556 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081216674 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080607664 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081260613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073253774 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073058536 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08351969 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082933621 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.08060451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080962272 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080951551 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073247032 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079596206 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0810016 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073121861 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086094132 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072898363 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084288374 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080600989 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078917836 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08067994 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082005958 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08239443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082495316 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084127446 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071793722 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071797819 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079328454 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071448641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0718437 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078360122 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072865749 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073506308 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083394149 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07230468 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216748226 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074673345 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083422878 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07427752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075739996 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086962803 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074701204 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078897028 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082922329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073704005 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08132742 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084315183 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081774939 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073471859 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074572974 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082458685 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082705315 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07423166 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073599757 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075605765 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081628738 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080415791 seconds)
  done (took 19.468643682 seconds)
done (took 38.553446606 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19783726 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149380747 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161246241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115933247 seconds)
  done (took 2.008395414 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11423918 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102621609 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093312633 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070202782 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098798348 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070008471 seconds)
  done (took 1.880745723 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277927165 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193453554 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177083554 seconds)
  done (took 1.976181712 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201401267 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186813923 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.432805651 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263081552 seconds)
  done (took 2.508865062 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140743648 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090567734 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071680858 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087420213 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128870482 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156795438 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09956833 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124227842 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082967622 seconds)
  done (took 2.358117285 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14722547 seconds)
done (took 12.211218906 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.223541222 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128029154 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096142523 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072929711 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203770162 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087154314 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102194467 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175040856 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152842299 seconds)
    (10/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078930417 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094930115 seconds)
    (12/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120760732 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.082845107 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.234951766 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.188786541 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079688058 seconds)
    (17/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.177705571 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.186706982 seconds)
    (19/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.199110594 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078704278 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.412231646 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093514226 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198440917 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079365304 seconds)
    (25/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.239526357 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100706925 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.107582845 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079045597 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213758341 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077609696 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12173928 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080008437 seconds)
    (33/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097765967 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077877329 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091757506 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077764761 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.17159564 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071423553 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096084848 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078315438 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120873849 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.214186423 seconds)
    (43/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081586262 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069451693 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.080353073 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195305341 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074720244 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.15829324 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.164946757 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081974889 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.077873809 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095338109 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070683408 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.071949735 seconds)
    (55/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.167647866 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080308771 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076962457 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09243981 seconds)
    (59/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.152410592 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114629223 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081702623 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06967421 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077814563 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093237131 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.179011746 seconds)
    (66/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069355296 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069626917 seconds)
    (68/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167272476 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.109238846 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084155777 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152202868 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187837011 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090942923 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080992641 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071495758 seconds)
    (76/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107448132 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.115653321 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080531732 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077805916 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05897823 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143499229 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.104794833 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.326872773 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 0.154772102 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198020272 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.078359581 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131159173 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071059266 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069776713 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16062556 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.20003649 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154146199 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.11622843 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082854772 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070764003 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057285032 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080316938 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117504304 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161109943 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07585399 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164981134 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093104992 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181395901 seconds)
    (104/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.111309121 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.163445133 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131264739 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076554507 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057126443 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057573545 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058984314 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070975275 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068164413 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102758921 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.056629905 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077840938 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082814407 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073911536 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069209061 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077096736 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081176025 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.057062325 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078167128 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079249515 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078398747 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09958889 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.176123054 seconds)
    (127/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.171492023 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.060509223 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069730971 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137849483 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204883537 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079537881 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070293237 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080049459 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091708025 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077559909 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078952882 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.154612683 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077588541 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070636365 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078809625 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.171034523 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076424397 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078398317 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057147671 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056985605 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.07056255 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056906858 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069146284 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069363447 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.07047578 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094882642 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079315902 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073967076 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090729569 seconds)
    (156/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082525595 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074488892 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070377472 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058424129 seconds)
    (160/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078889462 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141917897 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057394374 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180966404 seconds)
    (164/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083346008 seconds)
    (165/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10538833 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057307319 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148432685 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083452737 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095706124 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.058992835 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09388468 seconds)
    (172/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.107472101 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079130053 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058039047 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070218853 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070798846 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 0.134341598 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058142581 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120728968 seconds)
    (180/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068999753 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070967668 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084536373 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076853523 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094498479 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082069246 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078302775 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0710639 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069964571 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071986336 seconds)
    (190/309) benchmarking ("sort", BigInt, false)...
    done (took 0.349228239 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.071451928 seconds)
    (192/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157060248 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.189497137 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122075024 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.197748652 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071327177 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.072199105 seconds)
    (198/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058865645 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125562129 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078926304 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.070008633 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095145335 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057772211 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098106087 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078855442 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057009258 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078048878 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094649579 seconds)
    (209/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.153717546 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.056975003 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.071299241 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071457662 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08168733 seconds)
    (214/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15578474 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0788214 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079986262 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092805365 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14585221 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161207933 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091137803 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177621001 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057482379 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081767715 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091377795 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078861311 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057264702 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184215604 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058594499 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078643536 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058252475 seconds)
    (231/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069461915 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057278795 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057043274 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072495185 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057120569 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080693374 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080041644 seconds)
    (238/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058371769 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072123879 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.0587833 seconds)
    (241/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05810544 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058217225 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114120611 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070552681 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125702721 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069420155 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071459448 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071239894 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071737667 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057381016 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057046477 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082595209 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120695048 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058606557 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172962852 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070930908 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071119271 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060034049 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091981457 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07806906 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058604742 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076850333 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056998241 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073362765 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073044738 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078864581 seconds)
    (267/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.057187034 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156740694 seconds)
    (269/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08622536 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.057051383 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05763307 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076518711 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066780011 seconds)
    (274/309) benchmarking ("sort", Float32, false)...
    done (took 0.136065489 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095924257 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139314792 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070823581 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083253926 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12919395 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056527862 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057528157 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141060095 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056709384 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083297569 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076334653 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.071009987 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156205329 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071799981 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07163685 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077815034 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.056797073 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082626907 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056862515 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079940589 seconds)
    (295/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068074412 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095577439 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073122543 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077972832 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076435929 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070353244 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069288884 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057987418 seconds)
    (303/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.057727308 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071819278 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092894496 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.23573025 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.063900637 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059879693 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099847525 seconds)
  done (took 32.547016032 seconds)
done (took 33.886915414 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089832487 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100560954 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083141329 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09939684 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088391637 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083425667 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.080110287 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084393485 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086392022 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088142589 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085039957 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06184669 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081069504 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080814454 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081266877 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096647177 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085522355 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079833193 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079700851 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070722109 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079870632 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071847134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073291917 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061357886 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085544212 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07824566 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081438628 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080569218 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071970854 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071717971 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07578941 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080492519 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071758304 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086072239 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079778891 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079351545 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080984148 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08327316 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073129017 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071992819 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081504949 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071746524 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079542659 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080277309 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078684661 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077357836 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079657138 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083221098 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096300765 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073661887 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0814189 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082133809 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082950235 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079167336 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076188825 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079539788 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077381721 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096194643 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080072218 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074383418 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081451862 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080786741 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077529166 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079541094 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07976705 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082187527 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083583734 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077354896 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081596362 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078200879 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071550675 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079660222 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075897325 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074225459 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082654278 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08376522 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070077802 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077719478 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079209397 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079981836 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070618301 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073408898 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072833501 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078135652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073678022 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061071344 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075849723 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078339103 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070396794 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080033447 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078240545 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079188686 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073018889 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083606405 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070943996 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077179705 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.072009189 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071760975 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072463504 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075758801 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071005277 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073949806 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082014929 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072418202 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077654009 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083764282 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070902639 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078327751 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070042445 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070110757 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084341707 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.08234271 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.072081884 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072902013 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069636726 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077596812 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068929311 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070097593 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070212237 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069916347 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076311911 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070360191 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072437938 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077471195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.226798707 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074270951 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077566174 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075131846 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073950682 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078986528 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072549276 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072786582 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.074699837 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069514177 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074833426 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072087616 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079654906 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074420455 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079968946 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073123834 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080530189 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077299806 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078256961 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078084527 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070192372 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066952028 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074890996 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07391875 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073555124 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072219029 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073579264 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071302511 seconds)
done (took 13.354739361 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073216158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137006673 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097817131 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099089415 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089493602 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072280774 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080311962 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099243903 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073434265 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102436753 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093581241 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.09306511 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114469603 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.07058544 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071387947 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075720199 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073325573 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085344046 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100571516 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091758388 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116192634 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071246645 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09547903 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092701797 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090787988 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105857614 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072590691 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076159527 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0755223 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095545821 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093832071 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075966694 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07289288 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100190307 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09626861 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086263568 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07450032 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086397322 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072623727 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071873558 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073209745 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10042914 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084054611 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084643659 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075729675 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082162153 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072988738 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086467125 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092885072 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083009898 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089051756 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102670548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074066458 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087440103 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070285142 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088721929 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080565205 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074439151 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072854298 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079403091 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072139912 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074939064 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084570926 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083468246 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075436671 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087790696 seconds)
  done (took 7.0463124 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.09004284 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102558398 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088684399 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089157213 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071595787 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071969051 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072224572 seconds)
  done (took 2.023466396 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07294626 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09333042 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092969666 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094114889 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086962901 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095477516 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080916725 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072171888 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096888255 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073440268 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092532284 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102260883 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07548828 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08516368 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094022429 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071991702 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09482857 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072435653 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075192013 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094195241 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077608563 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100548653 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079800679 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072508485 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085480245 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072626423 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117625284 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075886049 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074522333 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075712171 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074034959 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111140452 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085188224 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079396838 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073006551 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087118306 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086185625 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075630841 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083477546 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081695456 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08527631 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073177853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073229584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073979922 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07649717 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081811425 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07379416 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076642839 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075075627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091038065 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070929197 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085157889 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074914421 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077345963 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073989274 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078681032 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082495658 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073187488 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091343308 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073933388 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087206298 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086661692 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085027093 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086724668 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074158298 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084892484 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085306022 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075008247 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074449921 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0759209 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087307238 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070762983 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074112708 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082390158 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074927543 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094119851 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093685703 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074057219 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085726096 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073218058 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07268663 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072397299 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093937992 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077226221 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072730578 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076516515 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076550632 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076246444 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071523483 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076423716 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.07103768 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078142788 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075111399 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075302601 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075055172 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086452416 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074575364 seconds)
  done (took 9.299047985 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07577707 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074448599 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075462444 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.074196552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074634385 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073779076 seconds)
  done (took 1.910771844 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095223289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074294927 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085707325 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076768294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108111431 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091352812 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091195062 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081845366 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088273647 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083900091 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090644538 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092325124 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095674655 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077139568 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091469139 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076265374 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091479284 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079506152 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083751835 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077698512 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089968414 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077444415 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077812237 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085685734 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080943152 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077091069 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083282754 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083538235 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083237506 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081851877 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077272125 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080790876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075734971 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08172658 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091244633 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075613451 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078791078 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081923102 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076726826 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080520341 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091462211 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077921314 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07889523 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.08190378 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081717154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075597727 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081882282 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08350271 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090576233 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081598918 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081835093 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076913187 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080519595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081664938 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075652198 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08167418 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081789932 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091226492 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077061974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075694128 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074079017 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080802578 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081323777 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081272289 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081939552 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.08186319 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076215157 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077452061 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077483652 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076691744 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081691566 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073621248 seconds)
  done (took 7.358592859 seconds)
done (took 29.059753192 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544177515 seconds)
  done (took 1.963621535 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611456207 seconds)
  done (took 2.059320891 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.484997398 seconds)
  done (took 7.927051448 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.376966387 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488721091 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721950592 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139271826 seconds)
  done (took 3.207846244 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728151264 seconds)
  done (took 2.182142041 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241624368 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232131183 seconds)
  done (took 1.937704282 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382729227 seconds)
  done (took 1.825306154 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.125902548 seconds)
  done (took 2.573221092 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.243465492 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181183694 seconds)
  done (took 1.876565289 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44466287 seconds)
  done (took 1.894232323 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.87636593 seconds)
  done (took 6.328421657 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233165586 seconds)
  done (took 1.724650027 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242078328 seconds)
  done (took 1.693660624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.759169791 seconds)
  done (took 3.210477368 seconds)
done (took 41.859936548 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089559513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091117581 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091423672 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087493612 seconds)
  done (took 1.79228214 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082394988 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078751589 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081854893 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078762086 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081918658 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078370934 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080481839 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081806432 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078722588 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07868818 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07873792 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078397601 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080804525 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.080184017 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077459571 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080889952 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081483438 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078680533 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081121824 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078226338 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076477327 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080606572 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081116652 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077908178 seconds)
  done (took 3.368871472 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084808751 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078822707 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.082135152 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07807355 seconds)
  done (took 1.785929622 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084039587 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095662189 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094179045 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084622958 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095738407 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091359852 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075010371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074876724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075877141 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083855833 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074307 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100060988 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092974539 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083851277 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086055479 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071276642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073853873 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091861587 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084885457 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084244014 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075786884 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08446079 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073915071 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093925993 seconds)
  done (took 3.485952756 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086484754 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106108051 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08562895 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095683854 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097909186 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071465552 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085580298 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098105213 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131920278 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.0715926 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.077138204 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071348587 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080732154 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074045124 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086126484 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113571658 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117369443 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075034009 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103370956 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071589798 seconds)
  done (took 3.269429744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079562775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075775477 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076255077 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071878652 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083524543 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.079099599 seconds)
  done (took 1.935656749 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074055139 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074169581 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073354544 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072547624 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077770524 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073478673 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072151939 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073444344 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074080894 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072992639 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072570014 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071547611 seconds)
  done (took 2.346441893 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.187965395 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074261152 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074920777 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07199003 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076984161 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072641757 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08750261 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073451172 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09814585 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072648848 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072869959 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074379025 seconds)
  done (took 2.504226664 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199966003 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081394909 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229666985 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153711167 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113269734 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115614774 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115160359 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114686666 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139224451 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102070832 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162888431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163543753 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109638053 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139083469 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093789906 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106712299 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152616133 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165718529 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1095561 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164249037 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14375026 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129209615 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147159859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104578098 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108111681 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120793484 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076781432 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084401519 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166031778 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132541365 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141967425 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113951378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094723372 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172679441 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170438707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138738562 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149930542 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088102492 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10687764 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135512654 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204380867 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095223151 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305975222 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116351629 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086855197 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137209079 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122086664 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123667912 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109069911 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094796905 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146604988 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180543545 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136750271 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091455488 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125944411 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114565908 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114954735 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117090015 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174639805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159055708 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132638998 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079969458 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112602549 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150827616 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136632723 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110375708 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124949613 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096002142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133107654 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15404642 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124213454 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141370339 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119623058 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09387009 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122815751 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13831728 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128437764 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160092897 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127286924 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081633112 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125283633 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103506071 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084992244 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149187558 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080011209 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171922651 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103393477 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108784099 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124998636 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110238363 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110589091 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152663945 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288785596 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109534531 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.074322134 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110382133 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122794467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144987598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092478874 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111660844 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119360538 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083927737 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136363719 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080972064 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12677435 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082716429 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127339229 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132699123 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083657874 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126433961 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108100061 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106141986 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133297542 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157836354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092995513 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086081199 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164279504 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124570216 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106197948 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143123784 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156039408 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10637412 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102656607 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146671623 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167406921 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094397852 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161697285 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107861315 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08812883 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092262511 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125448081 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11432533 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126268286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085885838 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119298349 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162296113 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079987488 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099104863 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13570095 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08328463 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08524176 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106978678 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106598978 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100165633 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101435575 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104974094 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134929289 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276989997 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110992619 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127416748 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103699521 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167968736 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093700239 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109233947 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108346995 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.076369916 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134669404 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155775751 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084119666 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159343906 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124260572 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119779834 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123115228 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089268715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138128471 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084097164 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.076180453 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142178819 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114540106 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112564252 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149642977 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118103076 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124744716 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120707734 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132062553 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130681923 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130811622 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110499336 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093649505 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116039384 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128530627 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079390553 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094192527 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085296887 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108595729 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098503508 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088292355 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140991399 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124357328 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11056436 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11457463 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099864993 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145232227 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081010741 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126490773 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121270936 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099126763 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14960166 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150347818 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133167785 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101479044 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285152756 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078246856 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081015426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092949476 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126153709 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089460047 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088902802 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118651348 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146505634 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130534386 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137255012 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126745939 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122184103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15583241 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076368376 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124417789 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144119363 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123943392 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10941136 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096001523 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104620263 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143181936 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108568019 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175081946 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117285314 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127137307 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157927193 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107330767 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084996081 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106797147 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132989875 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105945312 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143605909 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102824203 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092245081 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111162618 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08171556 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101313979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128138131 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119887136 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137699155 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115686819 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132401365 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082341622 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115204564 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123376741 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121560064 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.07019112 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119906947 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162875666 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098331441 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118266311 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300720432 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085933006 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140871532 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17246862 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145972659 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090311462 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111231914 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124497527 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128832344 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122688118 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137913619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109179356 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139561986 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114337838 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091739014 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091593197 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100253599 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108325936 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098850712 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10644939 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116287287 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100857501 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132257162 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107203512 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113985322 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120418676 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104904209 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097694475 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100730743 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173830308 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121140203 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167021368 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104997051 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141329699 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158896699 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080806447 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084644271 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083984399 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137155223 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089738631 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13192334 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11424118 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11835395 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124486228 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137983198 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098619936 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074479995 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11127648 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133510648 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124970617 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102590407 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105852892 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158969894 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10170394 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082312817 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263265377 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121862471 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108341507 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169058146 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069754228 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111884884 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083281369 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085661491 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12792363 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150067278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086295262 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104158893 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12379174 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114645132 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128263858 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102771248 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111201867 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126710922 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145924603 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129481044 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094503271 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114006107 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131229073 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154300736 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105875311 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102260053 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168434724 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15082 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157267506 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090307968 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117071501 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117670092 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112628242 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137747149 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08862612 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15847803 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086987021 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136559669 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105532288 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091092124 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128044678 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113075706 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092388034 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143400356 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118618035 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087472012 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082329896 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116613504 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120106121 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106177908 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079767708 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287454103 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.082205007 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136442985 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161566142 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087360646 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109294445 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101515307 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086447416 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10903812 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107162964 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091743898 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104988748 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169067928 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090904074 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146815232 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134920769 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114815676 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135388821 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106353333 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645295394 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08285726 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149878201 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117060876 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168568771 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103754879 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120477674 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113486762 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122379153 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142312812 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105677836 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182605904 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132282581 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118600995 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084116654 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105731921 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107056514 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091106176 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110814543 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116397291 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117771886 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097577455 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118647669 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123704145 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08691845 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099656171 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152491786 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116520366 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141962794 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135996762 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088690022 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119389719 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135794675 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235594381 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121625003 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151576969 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109433675 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103790847 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087425416 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103735389 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158182621 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0801686 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156924334 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126886477 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114364262 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116845024 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111901126 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150470167 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108694908 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125531813 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095939809 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111572099 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117608536 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086539528 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082179594 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108821732 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112671473 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103638577 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099557318 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104458665 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149688995 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078606502 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102488627 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119089012 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142407979 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168192448 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093659392 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0884976 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122419524 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11819512 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114596828 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123659267 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084252453 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086667805 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084612302 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086820036 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110618471 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116903083 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116008957 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112003825 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156892351 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087993699 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229516938 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097846202 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106758463 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075240798 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08214646 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099132109 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098967396 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257362374 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113769823 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161183424 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102644031 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095672217 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09700974 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081643391 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089155138 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129369441 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115296642 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121408579 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104756351 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069421409 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110650005 seconds)
  done (took 60.08080287 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113015528 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088492353 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102951163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149918918 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128081505 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206107948 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158211211 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194067373 seconds)
  done (took 2.70695435 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074460866 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.10049763 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109439257 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089579321 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072869768 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075618182 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230284223 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087240872 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072181779 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098331527 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084602071 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075566223 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413509087 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072215395 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073938103 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068410144 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073762081 seconds)
  done (took 3.428772606 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.4044898 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620406088 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351306133 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.087806012 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.99938695 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097641517 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.313611759 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141070828 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086248766 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534919564 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41431348 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139887687 seconds)
  done (took 18.761091792 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087992601 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082730122 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09480625 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095252215 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083978578 seconds)
  done (took 2.008326771 seconds)
done (took 108.978394064 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090090866 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427954567 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060445738 seconds)
  done (took 2.079030971 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09262509 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090831282 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090706204 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08888275 seconds)
  done (took 1.936568316 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081084223 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082719603 seconds)
  done (took 1.727264058 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235309995 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173771427 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101721565 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089634148 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085392229 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08597032 seconds)
  done (took 1.829504643 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079223322 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080395725 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07956575 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082024604 seconds)
  done (took 1.88461321 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08157381 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05837587 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0607839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063900776 seconds)
  done (took 1.829493016 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09232547 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089626968 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084832368 seconds)
  done (took 1.832502426 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106151586 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094312901 seconds)
  done (took 1.766354943 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086697475 seconds)
  done (took 1.653550284 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093997442 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104699728 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137385697 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119724705 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142524736 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118885577 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090077051 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09067517 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083961278 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092051158 seconds)
  done (took 2.639837624 seconds)
done (took 21.339634596 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084981319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378447427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366218474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095575822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675468714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362851847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003081275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099003566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146282755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073945949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090360636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655477133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993790013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335825404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981663183 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331554879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655305288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075318233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074609902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07477477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.988937628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074264641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074959333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075172636 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656027594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378742928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074967276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.336395903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07457264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076269714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362275941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075132281 seconds)
  done (took 16.350186358 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094152375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125050181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079147882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08985857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077144214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076714923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.078587842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076165402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128179477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075045709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091970885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075035276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078636504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075151824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094024072 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077807327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075616163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075771207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074854965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075140698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093571697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074925947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075190687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075313692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075081331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087353572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075053278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074978642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075412568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076471276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077798526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075349025 seconds)
  done (took 4.210929341 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122153044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129931684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080058366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110835646 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119338894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077174727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150797839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099837295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133548406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074713115 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091820887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075107055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107524502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075897871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095047284 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075109906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075535549 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075474993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0753243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07500341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094154829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075095635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074795752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075654403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075320087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088649652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075426224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075181632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075297836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076705332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078305681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075706246 seconds)
  done (took 4.442138098 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078875604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081738335 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088213504 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08997273 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074654836 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077653564 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079732781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076131179 seconds)
  done (took 2.230415888 seconds)
done (took 28.805207679 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085325767 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076200052 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079913807 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09543132 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080462796 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08395857 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073576157 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08283634 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080184875 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079856111 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081208117 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073663315 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078174454 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072998451 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080664621 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074349038 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084805559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078161464 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08456139 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085327888 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076967727 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079429298 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082349528 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084315344 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084471201 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084054477 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08361939 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079698089 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074404075 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076943637 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082524341 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089130128 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074388559 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084081331 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073343806 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073621446 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077694195 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073480412 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084224917 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082446195 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075562019 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083110606 seconds)
  done (took 4.927769514 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093736124 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097450834 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090668431 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068377354 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073694601 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071903225 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095039982 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06612564 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067238718 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094471775 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06307056 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065931982 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069587197 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061665584 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066815646 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064068798 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068082841 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06229639 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066990148 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06678716 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095168456 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061061939 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083708103 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069201153 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063077976 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069092866 seconds)
  done (took 3.507128774 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081637047 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089182447 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096854371 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148578806 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116764821 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084366717 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08499303 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09906174 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100219989 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073244129 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076970451 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099541297 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093946386 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079765983 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073810334 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090545362 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091465816 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075464358 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078680873 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100635279 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09165921 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091538375 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097910994 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087258165 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072698847 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07636721 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077341486 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086433452 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075895564 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082750884 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076689978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076798123 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075650894 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084476666 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07660179 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075033085 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099213194 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083877521 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084763807 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074449975 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081910208 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07485316 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096998224 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129828674 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072911483 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079815228 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077114589 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083614178 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073754574 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100515098 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085012126 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073318905 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076730015 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073049489 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072824701 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076267349 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075345228 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075596672 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082449484 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079455898 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098028777 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078754622 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089372974 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072788566 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081752425 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072588836 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074282199 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072538114 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09876053 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074918354 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113676386 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074442414 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074537257 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083158011 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082143683 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082160625 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074124747 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089554281 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083854169 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076861478 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082397251 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077065996 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076278256 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102885211 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076567045 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075543242 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075048565 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079120471 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076516911 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074800358 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086759434 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073749453 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075932976 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089997337 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073541155 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075294197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078274778 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077543982 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073027962 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08383812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076941616 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074099682 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082943096 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073160641 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075848489 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085252618 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079972012 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07221997 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07797202 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078398951 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073784753 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07467819 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075152239 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075171657 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081407904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079816423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077443868 seconds)
  done (took 11.264170118 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170918909 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160625125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080578846 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156135506 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086857974 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088207214 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153922068 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10075619 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075596424 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.076183667 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.075267732 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113821749 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108921133 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119098137 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084402625 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073661856 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096519762 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118323759 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153656216 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149240933 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096852321 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082621206 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07622864 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075321981 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075556615 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083207204 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09034523 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082620632 seconds)
  done (took 4.542447553 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086058477 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109915251 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081514461 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.098033895 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096024295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07470729 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076535552 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075610477 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090999806 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083654046 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073743897 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07827533 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080104865 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07671482 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07485928 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081035172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080417242 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075258535 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077570845 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081530909 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084590049 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096959334 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076953936 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07313322 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078538431 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073397449 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068622202 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088853413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074634688 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098672012 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071432428 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078701874 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087626583 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074812535 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073963024 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073934577 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073841425 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074264746 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075668214 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071978988 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072253124 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064030231 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072796593 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083996005 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086946906 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06272447 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078172554 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079337342 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079428237 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071447017 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077015836 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076775562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076862014 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081271869 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077521217 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079373265 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075943654 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081656833 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082694697 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074247055 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070582471 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07237329 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078552734 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070768542 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089301424 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078705434 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072588812 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073817023 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076125462 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087132045 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074099361 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078842973 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071518513 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075810874 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078385852 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075896703 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0752781 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072281383 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074203733 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074099317 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061546921 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074206237 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059749319 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076732291 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07196861 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072315538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073638509 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078388662 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084546147 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07510446 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079650406 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075071481 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072983575 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076601405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066284791 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076407769 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084226725 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087509114 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074551297 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.07182322 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086377148 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07881762 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07274244 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063500268 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077518148 seconds)
  done (took 9.767642149 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098858585 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076736272 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088145851 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095759297 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092681376 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080926873 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.085276179 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076221974 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090878943 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080708605 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.084062025 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074074055 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084676665 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083961025 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076373762 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08458027 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077825854 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089378913 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088881636 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074606047 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082984359 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086336724 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095660506 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087060166 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085384205 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087080012 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095244316 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083554485 seconds)
  done (took 4.024012896 seconds)
done (took 39.60967782 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.701107834 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.848215086 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.671408482 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.966484794 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.866505956 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.698762384 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.855949606 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.66726129 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.902852899 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.711964292 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.995276374 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.754788295 seconds)
done (took 64.367959736 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.764189252 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.802080835 seconds)
    (2/2) benchmarking "String"...
    done (took 1.900614249 seconds)
  done (took 5.295749511 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.881964814 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.472685059 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.908701268 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.663421329 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.670943552 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.948483065 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.470239452 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.198307335 seconds)
  done (took 29.928571231 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.854024345 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.896288272 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.372184807 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.406872635 seconds)
  done (took 15.175611752 seconds)
done (took 61.734537636 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.656306512 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.699434166 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.701828741 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.650082439 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.725032602 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.675071194 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.020412302 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.704206234 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.668612431 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.659970731 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.667735851 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.101362564 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.670817037 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.863232746 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.667107292 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.674757635 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.669910783 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.182054644 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.823682244 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.683154481 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.679940033 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.683075572 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.673191655 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.670814241 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.675226648 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.665860537 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.068018223 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.669045508 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.499460196 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.668011556 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.714886426 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.151991825 seconds)
  done (took 200.57915605 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.665226256 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.895174958 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.917038762 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.676984587 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.377460335 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.845156252 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.74387551 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.394622137 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.670872101 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.687740708 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.939996899 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.666782094 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.964500271 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.611029779 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.715301125 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.773142253 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.848677289 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.964767579 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.720018867 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.835798301 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.667696535 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.784343996 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.742896697 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.930592705 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.666971046 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.678276981 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.699033276 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.691561761 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.861216086 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.828977324 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.669628561 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.69747419 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877477137 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.539055013 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.671323735 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.68331233 seconds)
  done (took 167.202929064 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.875575751 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.669540802 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.666074682 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667180025 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.673505844 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.667132059 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792812467 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797446165 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.303850203 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.979116643 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.671302188 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719629791 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.667391911 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483073088 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.667753776 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734976427 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.679129919 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.66835147 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.683003792 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.695594471 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.667877941 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.668734293 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796896725 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.681278116 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.668068049 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.675091464 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.669590952 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.674626842 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.038379783 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.667787344 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.832861837 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.669988947 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.673871362 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.908701221 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.669938633 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668474799 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.516194249 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.532294994 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759751736 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.670192321 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.673760556 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.66804237 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.887682061 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.669710717 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.668094322 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.669220591 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.671966242 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.81332693 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.672930225 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.797310786 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669646131 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.158095242 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.672724597 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.669401877 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.669946456 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.301655489 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.254661427 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.672609552 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.671180478 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.670019141 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669626864 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.675465733 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.349351012 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.74425308 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.671328459 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.673430263 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676003165 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671171246 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.718215819 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671696819 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.926526069 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.731947511 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.787218277 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795535261 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673061506 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73670213 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763429244 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.670578675 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.670047483 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.670445808 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.67025332 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.669714622 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.750438699 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.670141565 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.79693206 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.678119273 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.672399677 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.721920156 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.739828575 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.671298231 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519389782 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.674286996 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.67008811 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956743791 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.739390666 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.671997781 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672160179 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.797013536 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798244412 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.387114097 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.674864832 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.670880359 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.376057021 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.811568079 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.672425061 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.823532295 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.675467197 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752051864 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.677284285 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.673780347 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.703979922 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.672964032 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.727385189 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.671690502 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.043624432 seconds)
  done (took 389.717504743 seconds)
done (took 761.028793071 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.279415195 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.249224784 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.353427688 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.269129962 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.244075462 seconds)
  done (took 12.997161923 seconds)
done (took 14.597286543 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.758510493 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.765627031 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.696363278 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.761836905 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.692660848 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.760514216 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.743982481 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.697184502 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.728952161 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.69798613 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.732784894 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696712053 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683591246 seconds)
  done (took 24.019253805 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.907003831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.903952782 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744002 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90335176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718269314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902928969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834110904 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822798199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.823796796 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689205304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68543967 seconds)
  done (took 21.538976034 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.904305268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908115885 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.751466981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900630353 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.722167008 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.905084141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834322275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825685174 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822773074 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.690721461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686802209 seconds)
  done (took 21.557334144 seconds)
done (took 68.716942988 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.682107623 seconds)
  done (took 3.286222674 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.709263666 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.880971767 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.688244752 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.684802179 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.681568934 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.683375966 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.686563597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.682343808 seconds)
  done (took 15.303215994 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.678333064 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.67845218 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.680659185 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.680221375 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.681077892 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.677733434 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.678092717 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.681788905 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.678762025 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.681437943 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.681795996 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.682641373 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.682114764 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.679433857 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.679263231 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.677871763 seconds)
  done (took 28.484934129 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.681532832 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.68001448 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.68008772 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.679685639 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.678613746 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.680549619 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.680528371 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.680908445 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.680909688 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680920184 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.680217683 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.679832391 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.679109894 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.680224543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.680950471 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.681077803 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.68073148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.68054097 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.685271703 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.679192148 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.680608403 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.68128058 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.6807392 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.680596794 seconds)
  done (took 41.942359401 seconds)
done (took 90.620014843 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.397269808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.626971796 seconds)
  done (took 9.631661731 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.68426727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.683792708 seconds)
  done (took 4.979452956 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.684226789 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.6832837 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.684012205 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.683816134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.682416938 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.683650134 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.68320921 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.68472523 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.684344006 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.684056215 seconds)
  done (took 18.444760703 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.683806667 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.684245833 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.680611187 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.684189356 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.684903356 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.680755509 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.68368306 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.683630428 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.68403768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.681289482 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.683648077 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.681451007 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.684468809 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.683029127 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.684767427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.682590597 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.681382025 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682023322 seconds)
  done (took 31.902221909 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.686671406 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.685269129 seconds)
  done (took 4.980650923 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.683392968 seconds)
    (2/7) benchmarking "second"...
    done (took 1.683475784 seconds)
    (3/7) benchmarking "month"...
    done (took 1.683516382 seconds)
    (4/7) benchmarking "year"...
    done (took 1.684396612 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.683342516 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.684584075 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.68455382 seconds)
  done (took 13.396104909 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.687247403 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.828390909 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.892146169 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.308759432 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.687121826 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.688481778 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.614789352 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.688826261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.691805394 seconds)
  done (took 18.696562294 seconds)
done (took 103.637997685 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.562900343 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.686362358 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.921438567 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.745049767 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.741428547 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.980353234 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.714102102 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.96627215 seconds)
done (took 41.926411518 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.690670329 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.352957265 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.397509136 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.708824721 seconds)
  done (took 15.069254141 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.663962303 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.005437031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.687351604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.518065952 seconds)
  done (took 21.486900108 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.051944961 seconds)
    (2/2) benchmarking "read"...
    done (took 2.03047122 seconds)
  done (took 5.695650023 seconds)
done (took 50.552512905 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.684801007 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.685641971 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.683967459 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.684712345 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.682366174 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.682561717 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.685404473 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.686469733 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.684301508 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.685445721 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.685019465 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.68511277 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.682983923 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.68306373 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680798321 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685831318 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.681260251 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683290711 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.68264153 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.686107015 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.682510866 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685343255 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.683040043 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.683718964 seconds)
  done (took 42.026584215 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.686913372 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.683911164 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.686369783 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.686033254 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.683333615 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.6853257 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.686101841 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.68309969 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.686509288 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.686124558 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68295638 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685205653 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.686612495 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.683560742 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685464314 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.683834194 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.686794039 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.6831582 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687514989 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.684289953 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.687284695 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683568129 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.684635982 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686817915 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.684484768 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.684832452 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.689582465 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.685942997 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686939525 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.685197848 seconds)
  done (took 52.172367729 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.692599487 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.695875234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.68813 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.688573744 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.687873785 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.687709924 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.688020199 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.687388527 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.68862855 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.687489322 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.689067373 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.687072987 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.688832374 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.688661447 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.68809834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.688526974 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.688027943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.6887257 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.688988602 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.688893148 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.688294624 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.688430203 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.689208967 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.69145275 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.687838389 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.688529389 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.687856166 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.688504732 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.688203717 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.68809874 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.688457673 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.688617888 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.687531704 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.689353058 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.688718777 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.688731625 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.694235697 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.696022046 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.689018515 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.689384907 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.689279273 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.690232187 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.689149586 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.689793753 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.689885908 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.688873663 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.68927792 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.690449682 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.689895316 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.689579979 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.689669443 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.689510694 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.690162683 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.690198156 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.689589489 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.690404728 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.692381307 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.690738481 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.690889894 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.690874357 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.691305662 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.690924666 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.690708632 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.689018109 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.692275493 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.691048191 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.690240561 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.689987246 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.689824784 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.691238843 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.691133979 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.691160621 seconds)
  done (took 123.267081099 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.691580023 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.688921991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.688898113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.687718594 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688425022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.689952129 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.689252054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690155363 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687950118 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.692252095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691590725 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.689131476 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688980632 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.69189248 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.69161907 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.688272143 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.690752833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.688583933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.691262824 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.692162431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.691734426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.688960193 seconds)
  done (took 38.794748894 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691779859 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.693619375 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.690291673 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.691668713 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.68992432 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.693972058 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.694518976 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693587754 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693552153 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692457809 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692468851 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694423017 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.692975898 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690120851 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691589135 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.691941669 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694102231 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692017559 seconds)
  done (took 32.081399007 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.69136316 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.692539093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.696147472 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691307735 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.692683982 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.695652178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692726233 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.69556838 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.695265079 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.692116945 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.695401929 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695481342 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.696075798 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693368539 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696106178 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.693275864 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.695718751 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692391742 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694998521 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692959184 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.693081015 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696048278 seconds)
  done (took 38.887189607 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695186416 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.695625407 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.692999161 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.692687413 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.692802143 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.695070415 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.695571807 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.694250125 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.69544002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.695636746 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692647298 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.694730883 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.693883465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.693092794 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.693009983 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693726829 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.695922575 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.695206347 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69634674 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.693821946 seconds)
  done (took 35.507818184 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695092181 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696155558 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.696597056 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696560541 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.695390076 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.695797814 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.69650066 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.696740734 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.696978507 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.696550936 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.696839882 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.696705204 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.696162013 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.695963958 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.696653483 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.696268659 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.697298536 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.698003143 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.697125166 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.696608114 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.69689572 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.69635703 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698142798 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.6974346 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.697230908 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.696591283 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.696490367 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.698445602 seconds)
  done (took 49.126850699 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698012869 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.697740521 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.694902562 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.694429065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.69567812 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.694770694 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.694987931 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.695753128 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.697013387 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.69524495 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.698474474 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.698574545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.698070994 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.697112614 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.697995949 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.699789441 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698558183 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.695620873 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696882889 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69605317 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.698073448 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.698568484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.697943256 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69630564 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696154144 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.699138222 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696176447 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.695410115 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698800785 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695766661 seconds)
  done (took 52.528761143 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.716993797 seconds)
    (2/2) benchmarking "in"...
    done (took 1.716750905 seconds)
  done (took 5.055587607 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.694431987 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698757267 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.697444279 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.695739012 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.69646666 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.697916805 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.699293337 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694630915 seconds)
  done (took 15.195547728 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.699076488 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.697447236 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.698369367 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.699316281 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.698575167 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.69897225 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.706177373 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.69918816 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.700096351 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.699832708 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.705590354 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.707278941 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.701904808 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.699464876 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.69977225 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.699142673 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.699844195 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.699443534 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.700578389 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.699417199 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.700764412 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700424801 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.70149655 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.696345144 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.702298415 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.710857482 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.702114463 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.69913428 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.699035097 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.703347192 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.699362787 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.695775157 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.700928608 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.700200267 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.699126013 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.701331386 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.708488435 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.700721142 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.705189975 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.700790256 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700492147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.698543492 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.701934841 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.700885913 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.701340886 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.701306773 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.700716821 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.698169142 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.700140688 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.702562671 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.705479599 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.699946892 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.697228205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704440637 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.70059907 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.707122099 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.701409678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.70522578 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.709474801 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.712726598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.715545086 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.71061422 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703903962 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.702216493 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712404603 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.725626049 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.708944015 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.699890326 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.70003794 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.7013221 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.708771849 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715746019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.711613506 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.702325279 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.702734752 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.703000127 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.702504761 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.702834254 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709500223 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.706501015 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.703410833 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.702353851 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.711876371 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726434732 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.701945814 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.702820906 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.701473983 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.702040135 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.703495732 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.71385747 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.702787981 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.702282579 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.702388334 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.702608563 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.703326404 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.703424166 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.701842262 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.703263162 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.699474795 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.703541032 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703831703 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.706044939 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.713001111 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704191176 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.703938898 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.709345324 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.702109748 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.702323115 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.710634234 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.703352319 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703748134 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.706413821 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.710650521 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.701238029 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706358932 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.71287108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.704276249 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.705161344 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.704345931 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.703415939 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714386356 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.73099465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.703866362 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.706175702 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.709647164 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.718660478 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.704967976 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.708456133 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.704202472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.700765471 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.701295255 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.706303969 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.704937255 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.705322475 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704857733 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706451399 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.701941613 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.704942734 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.70610135 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.705915846 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.707140579 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.7054763 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.706115802 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.706720604 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.705046512 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.706904495 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.711098647 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.705319273 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.706135985 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.70670002 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.702613296 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.705405872 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.707022904 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.706791605 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.705650909 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706542315 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.705503355 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.70571026 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.705930438 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.705921434 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704962413 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.707974646 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710142013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.706630455 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.70963977 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.705904795 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.70378171 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.705257622 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.706019276 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.705858722 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.706410566 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.705130881 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.709650574 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.714744039 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.706719235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.706447678 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.708917885 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.707745527 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.707274308 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706221761 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.711268376 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.716775931 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.707311639 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.71352471 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.710355713 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.708543981 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.707505797 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.708770308 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.706720923 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.707428221 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.711320276 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.715268445 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721073152 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71701881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.709435399 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.711086001 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.709293152 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.712489609 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.71130167 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.708184695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.707658788 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.708343623 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.707998889 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709316198 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.708931424 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.709061802 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.706912976 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.708071242 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.707945788 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.708941941 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708519217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.710005527 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710565904 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.705518124 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.708839807 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.70797214 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.708961517 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.706070548 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.707506623 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.708237766 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.708928729 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.708732954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.714600975 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.705475287 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.710670439 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.70953013 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.707852467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.707588412 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.709512587 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71078519 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.709149929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71696281 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.708797118 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.710761371 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.716349375 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.709131903 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.708690873 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.714277109 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.709903524 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.707536525 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.714713499 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.717794997 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.71006239 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.711577441 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.710515253 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709205856 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711050922 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.718304629 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.70701971 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.711406059 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.710877813 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.711685142 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.708609917 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.711455968 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.711185311 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.711777391 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712164542 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709595886 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.712666448 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.712079352 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.711571432 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.711892289 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.710451316 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714258156 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.719013196 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.716865156 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.711933906 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.712913326 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.711690424 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.71498431 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.711352594 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.711414365 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.712469389 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723655887 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.721311119 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.718974948 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.712826895 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.711864576 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.718340745 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.712959252 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.716315133 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.712307967 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71193845 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.711412207 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.711482109 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.708929793 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.712487199 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.711270249 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.712863074 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.714434686 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.717797125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.711990113 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.711461944 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.713003165 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.713304652 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.713358268 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.712004897 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.712633954 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.714473586 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71408943 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.711451574 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.713504812 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719727864 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.712543393 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.712692849 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.71260095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.714030916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.71172597 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.713657179 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.713950389 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.716359695 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.722222874 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.716746072 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.723390919 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.713711672 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724184801 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.712835854 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.71668987 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.722830518 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.711477298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.712055101 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.71415166 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.714507765 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720974612 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.71407374 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.71507418 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.719827055 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.715085602 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.714578015 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.715143337 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.714304586 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.714185823 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.714649663 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.722751289 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.716289093 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.71883082 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.714191933 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.711054362 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.714879851 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.714456821 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.7131929 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717858804 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.715117234 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.715381893 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.714174171 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.71441111 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.714256973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.715451388 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.71570805 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.711654688 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.715126105 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.722806739 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.717029619 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.720728379 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.715988707 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.72374461 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.715481492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724487265 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.716359392 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.716721283 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.715794025 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.716445409 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.715689296 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.717020462 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.717132617 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.717595038 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.717889028 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.72149929 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.716492509 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.718914737 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.716484962 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.716813845 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.717022423 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726248425 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741016092 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.71831839 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.720019053 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.713803681 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.717942264 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.721594335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.717540895 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.715584084 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.719556963 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.727471001 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726321321 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.716812873 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.717330647 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716813536 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.717261447 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.718145119 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.715805728 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.717119564 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.717426734 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.717634398 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.717308241 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721321742 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7171782 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.717685008 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717824641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.718746425 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.728588378 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.7175279 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.718449625 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.71756951 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.717870171 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.717626109 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.717885118 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.718391685 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719266743 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718258203 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.719086923 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725658252 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.725248682 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.720670341 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.71816861 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.719385174 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.71893747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.717062045 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720151237 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.718113094 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718186144 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.719331457 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.717850034 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.718704529 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.716662297 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.718802029 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.719060888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717321792 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.721646192 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.725787573 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719432087 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.716893623 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.719288709 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.718385837 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.716836788 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.720204784 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.727084063 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722832927 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.730894834 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.727651514 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.724114275 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.719774795 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722389254 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.727845988 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.718087394 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.720525745 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.720270994 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.72133536 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.720951968 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.723767903 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720341383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.727359258 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.719043914 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.720224403 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.729392877 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.721812843 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.721029129 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.722140949 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.724222548 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.719508654 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.71738554 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.720423801 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.719785418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.727243742 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.722031909 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722027007 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.721760189 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.718692039 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.721594368 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.72348028 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.72031856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.721801692 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.718548363 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.722158306 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.721359185 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.723919329 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.718790647 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.721516232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.720715091 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.725822618 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.72852088 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.719162713 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.723405064 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.7209343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.723517522 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.721534092 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.721284652 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.719335838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.71830351 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.722616514 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.723362419 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.722834343 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.724474113 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.721269629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.721927655 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.723296498 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721594674 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.726162698 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.731978737 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.729792498 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.718497742 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.722967508 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.723712491 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.725532119 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.723549436 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.722865727 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.723169068 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.724502508 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.723306172 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.723328192 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.72226926 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.72660169 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739871235 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.72376271 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.722722099 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.72434887 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725599414 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.723222099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.720799005 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.722740429 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.724722775 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.726170959 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.730247214 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.722764332 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.730320844 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723575376 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.723292315 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.727967465 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.727054625 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.7321766 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.727653912 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724140553 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.724363792 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.728857042 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.742254576 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72530931 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735339954 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754306919 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.725802029 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.725216405 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.725312628 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724519531 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.723938305 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.725665757 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.725040398 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.723895827 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724361774 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.724529418 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.725823197 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730340868 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.72527343 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.725612907 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.724737901 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.724245794 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.726466944 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.721985348 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.726081128 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.725197791 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.725385547 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.725145217 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.726220611 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.725700372 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.737327577 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.735078551 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.725092084 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.726317337 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.722497894 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.729197694 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.727949214 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73676299 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.732511578 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.726119992 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.725751263 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.7274282 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.726952317 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.722707502 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.725729531 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.72675892 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.726779419 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.723499214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.738784784 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.735805598 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.731667206 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.726888958 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.726169484 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.726981896 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.727499077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726377815 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.726070756 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.729105648 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.726980726 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731841436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.727255955 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.727822564 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.730224134 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.736214841 seconds)
  done (took 1023.546619804 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.726088805 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72461768 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724833866 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724630475 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72606287 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724252592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726055931 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.724583728 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.723746807 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724489239 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.7238971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726401618 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.724345097 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.726500343 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725760387 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725769723 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724780097 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.724568323 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.724474878 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.723759743 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.725440356 seconds)
  done (took 37.874669123 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.727339975 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.724240347 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.725448055 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.728127889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725622013 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.730624385 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.724983044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727598317 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.727262599 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726525211 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.728517076 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728402154 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.725038023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.725945522 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724850205 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728566752 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.728927269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725271871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.7279545 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.726321033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72773784 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.727050257 seconds)
  done (took 39.643268799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.729517876 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.729649264 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.728743943 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.727799779 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.731806619 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.727902661 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.730365888 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.730300029 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.730148559 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.730233357 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.728070776 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.731855312 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.737841355 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.736689426 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.730794765 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.731861795 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.874428368 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.731016125 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.730437778 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.730975935 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.729470321 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.736117077 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.728579215 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.728973475 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.729457001 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.73073585 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.730819138 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.731171506 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.730700714 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.731935339 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.735031004 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.730915351 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.729052871 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.731475707 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.73074545 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.731273617 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.735877623 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.73055029 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.728276976 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.73204271 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.741567956 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.752927472 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.731818612 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.736648875 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.73250442 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.732360353 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.734968696 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.740086988 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.728549883 seconds)
  done (took 86.667731005 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.733470426 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.731782193 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.728467557 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.731481504 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.732367225 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.731768912 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.730887375 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.731433428 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.728874838 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.729330195 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.732314265 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.729360461 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.728381709 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.73199403 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.732386114 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.729140578 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728780711 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.728353513 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.72969409 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.729731688 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.729374876 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.731517215 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.731956793 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.728111112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.733885707 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.728751544 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.72823066 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.732747851 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.728236348 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.728280684 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.731993835 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.73111606 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.731912686 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.730496576 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.728401244 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.731600445 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.732312315 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.729556063 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.729913741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.729141288 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.730488298 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.73188499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.73157134 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.731313527 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.729606228 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.72969089 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.728633697 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.729864818 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.730221433 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.730414649 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.732033103 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.730620824 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.731869726 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.730857622 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.730394498 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.730474561 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.727323954 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.728948578 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.729751057 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.727755815 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.728035 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.730398669 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.727996814 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.729780768 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.731105296 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.728023469 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.728953428 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.730794309 seconds)
  done (took 119.311842506 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730087836 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.731779508 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73149212 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730934384 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.731754567 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.732133625 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.732002982 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.731812516 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.728127176 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.728148807 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.726226074 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.726603748 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.72697168 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.73009296 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724964372 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725836416 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.725830856 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727105142 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.727244823 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728571875 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.722676444 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.725516655 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.724569185 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.723755358 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727088654 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725628916 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724212508 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.724111259 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724997932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.723147742 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.726691897 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.723242324 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.724158638 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.723706836 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.724674668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.724852933 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.724998328 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724539954 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.725738396 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.725558841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.72403534 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724876895 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.724433768 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.724677317 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.724993468 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.72454471 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.724451592 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.722376303 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.726698663 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.723894024 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.726112327 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722328036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723974597 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.723096163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.722082499 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.726301445 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723638328 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725392667 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72473535 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727410547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727036719 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.724380182 seconds)
  done (took 108.668415211 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725398683 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.724331233 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.72153216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.721483515 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.721139158 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720800054 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.721890234 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.724707002 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.729863939 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.723076845 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724395263 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723356337 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721340407 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722256684 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721697758 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723770641 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723486506 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.72204699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721383879 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.720736529 seconds)
  done (took 36.107716551 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.718976831 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.724932164 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.722282352 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722528492 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.724880631 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.722917346 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.723922008 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72657313 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720381237 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72642348 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722859164 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.723873864 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7204323 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.721443459 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.723747275 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.720020457 seconds)
  done (took 29.213991468 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.723341949 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.726456661 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.727202547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.726998576 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.724562171 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.725272853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.727296895 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.723453184 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.724031253 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.725803066 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.725751399 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.725343536 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.727413606 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.727051808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.725249179 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.727717304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.72503524 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.724684626 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.724775496 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.725254945 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.7216546 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.72135233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.723705528 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.721933391 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.717858308 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.718450301 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.717612809 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.719048595 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.719920899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.721079484 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.718662024 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.718828638 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.718037473 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.718602624 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.721805292 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.717668658 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.72232698 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.721706434 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.721525467 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.71962666 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.720962108 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.717874365 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.719208319 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.71980696 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.716573568 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.71929745 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.718174437 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.718512666 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.717422291 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.717225969 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.721353151 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.720902662 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.721066726 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.720750341 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.720051133 seconds)
  done (took 96.355124482 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719665541 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.720127746 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.718454119 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.719747102 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.720544389 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.718132576 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.720485463 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.717739728 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.717249308 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.719282612 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.717746038 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.719512742 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716951766 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.719855134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.718281544 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719975024 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.717599018 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.71740935 seconds)
  done (took 32.581449363 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.718119906 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.717526898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.721195183 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.719067116 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.718861006 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718886478 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718468618 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.721420795 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720612056 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.717450286 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718689887 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.721354743 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721220328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.720931978 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718792415 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716761091 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.721404727 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721345209 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.716005839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718337166 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718544318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.71838622 seconds)
  done (took 39.466019939 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.717750896 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.718495526 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.736874955 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.739517464 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.741597259 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.754129292 seconds)
  done (took 12.047649136 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714818866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71828957 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7151189 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718778167 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717090343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718135072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714209408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71360673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719092279 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714241511 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713642729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717839879 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717071183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714174219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716740235 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716940842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714192011 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71482593 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713606036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717440569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712811763 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716623865 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713970754 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714360918 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712852784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713052642 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717189406 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713588817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714141659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713560918 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713144169 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710981085 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713838106 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710974053 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715324531 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712490838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709468084 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713570969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712793705 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711285368 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.715637646 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713662782 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714076351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712682807 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71395067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71051106 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713276836 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710673295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711737984 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715139551 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713524392 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711942436 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714274061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7121889 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712445466 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71217083 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709405523 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710131462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71380069 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707917378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7092767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712462847 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709894676 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710777775 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710434614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709488867 seconds)
  done (took 114.741203912 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708175325 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.70796596 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709645189 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710444643 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709408972 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709405017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70880847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709677651 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710175945 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708744365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712265026 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710770431 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711064585 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709681147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709980725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708938426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709396063 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709503753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709477167 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71162956 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709905408 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708423854 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70959193 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707818222 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7095789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713576109 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709852735 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709092275 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709632865 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709528171 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709584596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709168347 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709949276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.709635012 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709540891 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710007207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709260876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710508888 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709430504 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712715344 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709514545 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712102959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711008216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709343156 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709597096 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709496241 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708958662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709258569 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712035417 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709588006 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708649088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709278245 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709960663 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708931923 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710777998 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708876843 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708524834 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708893105 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711973373 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708527502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710468988 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710718734 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708526825 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708797768 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708135318 seconds)
  done (took 114.477994463 seconds)
done (took 2376.95978617 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.76793046 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.722585426 seconds)
  done (took 15.123518625 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.869591778 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.824362498 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.708352281 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.750726218 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.709962689 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.728976057 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.728793309 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.708439548 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.708245074 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.70761161 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.708798891 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.89111221 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.763488794 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.709090467 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.706966047 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.80009303 seconds)
  done (took 49.659725806 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.711580189 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.712310801 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.721893165 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.713027305 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.710442556 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.723485575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.745257851 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.714247285 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.74546486 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.727615066 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.779523873 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.722114091 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.711344222 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.760728649 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.725120604 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.724483479 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.80720714 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.786494186 seconds)
  done (took 32.873857765 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.791819259 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.711155479 seconds)
  done (took 10.141246922 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.723852072 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.752106312 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.743065911 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.703468898 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.705990922 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.709744671 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.713097348 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.712750007 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.733014595 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.741800299 seconds)
  done (took 68.873351439 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.715169077 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.711587617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.709161571 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.70708009 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.701757365 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.705173938 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.708290983 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.70465855 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.37314575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.744609416 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.719311162 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.714179401 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.708714838 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.709522769 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.706639902 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.733289437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.81024876 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.705166794 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.706614149 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.713084854 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.708715998 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.76345909 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.722210713 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.712405063 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.738738594 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.376780289 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.719596238 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.715658641 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.835030006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.70756326 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.709061799 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.709926065 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.716100055 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.088765706 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.978866193 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.710277686 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.724116376 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.717707898 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.707539071 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.82620798 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.711984691 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.718478094 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.431949095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.959903807 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.805354147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.749918268 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.034839705 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.727467698 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.713463673 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.7375859 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.71324776 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.711251915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.723013655 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.199678308 seconds)
  done (took 123.471343713 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.706726611 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056235609 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.87633263 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.70596697 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993283449 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916378487 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.708387073 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.755527452 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.707159172 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.94322389 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962350519 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81681652 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.708428683 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.705759584 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.704859562 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.704585632 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.863442042 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.78159906 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.707507962 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.705432288 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738529664 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949851362 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.831958179 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.708838996 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.735485973 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.920216359 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.830542446 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.813044666 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.511577358 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.70618763 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773432078 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.707884991 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.707678495 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.705150689 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.866123559 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805726789 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79200375 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.708872408 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.707792638 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.705775945 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458869003 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909852586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.803855444 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.839560303 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.961649992 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915069998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.491322724 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.706219105 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.443070163 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.872286429 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.937471259 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.942127896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.829361653 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.709841268 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.983651213 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.706030474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.705815242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959557238 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931250387 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.807388164 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71011574 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.706734136 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707106199 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000275999 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.710201167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804986433 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.710459016 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.70566434 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807475886 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.808605098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.940578621 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924490243 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.739037233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.066245031 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.228402921 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95612938 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.776119142 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960053638 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.709258425 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707199254 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788236591 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.556327414 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962994238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992566704 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955374089 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745308983 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.432651452 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.706716759 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.936541589 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931745879 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.969006093 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960343505 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.944168312 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.032063908 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.706544871 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.707521667 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.00989483 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.834861289 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.711288758 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.060504558 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941642781 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.245298702 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.737970682 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014797025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841356602 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.712233565 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.344895007 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.709285454 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940894689 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.751513471 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.710940303 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.710248586 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.932098105 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.70407078 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.707261168 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.58864346 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.772965387 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.715041678 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944584725 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711127993 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982064716 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712516933 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946369778 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.732908002 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.7426979 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.884346852 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.959101424 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.712362538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.953831027 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954815676 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.827185628 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.985313093 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.61021662 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.711915172 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996827021 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.711620483 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.708811703 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.884305713 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711474107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.853931965 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.710589359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.004593631 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.734168145 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.942013171 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71187064 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972181064 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.746574957 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763479441 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.713433453 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.838798745 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.712892413 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.539653616 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.869966554 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714674348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709397066 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.285723481 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.708496313 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.86346243 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.353781784 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735373843 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786229897 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383625007 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.710771347 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797081643 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736820933 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104454268 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.710666442 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.966126833 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.714073994 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710085911 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.710021501 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.000482573 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.950269919 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.711560282 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.712551176 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.622807982 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.71078732 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711243417 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.894843229 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.088100259 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.710351567 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921802481 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.71530694 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.84139741 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.715271074 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.790657827 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.048556887 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71138672 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.712689394 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.710472697 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.711706563 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.713440073 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.922188603 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.739437896 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.208136124 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.851614893 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985936521 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.026641346 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.955702614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.757068142 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.714927533 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.972383806 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.713210841 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.777321268 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.714675577 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.7351004 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942019247 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.717070886 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.980439088 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987364791 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.720162148 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763079364 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.714742327 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713053228 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.713875198 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.860694046 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803564826 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.715599791 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.714792261 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.83025125 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.837507678 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924039485 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.714887021 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.745950519 seconds)
  done (took 868.898905138 seconds)
done (took 1170.673636524 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.712822715 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.714690023 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.699688825 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.714985903 seconds)
  done (took 28.483408438 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.722103711 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.719146045 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.721051722 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.717147656 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.721963755 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.720510665 seconds)
  done (took 11.963119387 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.75543156 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.712748301 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.717101878 seconds)
  done (took 20.823624037 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.787764787 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.102618886 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.824598325 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.141598019 seconds)
  done (took 9.498293079 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.720830781 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.719880702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.720391715 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.722859295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.723404812 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.725295431 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.722028845 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.72319646 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.72369379 seconds)
  done (took 17.145936915 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.730966277 seconds)
done (took 93.284913095 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.854860983 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.386972369 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.786777658 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.819254161 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.714674086 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.808206099 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.009511038 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.717032345 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.823770206 seconds)
    (10/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.795164495 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.723635593 seconds)
    (12/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.755610561 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.73526787 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.701721907 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.811421291 seconds)
    (16/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.875992614 seconds)
    (17/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.866183818 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.707280139 seconds)
    (19/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.000172787 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.745091302 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.814888405 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.95620199 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.895872107 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.881300666 seconds)
    (25/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.190987011 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.718790498 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.936709744 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.742800636 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.074831384 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.93428152 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.677291972 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.749266413 seconds)
    (33/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.71841239 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.912749691 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.034275681 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.80051712 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.136895467 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.076349878 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.718924454 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.902179741 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.851302896 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.70353283 seconds)
    (43/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.825990995 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.909378627 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.716373698 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.515026759 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.783577931 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 1.936455699 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.989552207 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.721139234 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.018516405 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.719301597 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.12976482 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.450641823 seconds)
    (55/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.808290821 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.801329806 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.974271576 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.641413055 seconds)
    (59/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.794459512 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.710458244 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.945171204 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.873972991 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.740990717 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.732732438 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.908522685 seconds)
    (66/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.792239523 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.814260588 seconds)
    (68/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.894564368 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.828982409 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.858837423 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.718553093 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.034262614 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.127941425 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.722930181 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.801512875 seconds)
    (76/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.918608239 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.840268517 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.743521386 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.859732873 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.705012157 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.81546062 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.81186408 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.023830673 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 4.631905809 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.961380011 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.910391543 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.837095435 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.030532926 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.741374895 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.821882079 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.848784365 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.723980755 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.171218759 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.741699188 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.874349696 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.867710853 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.22486737 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.709190877 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.006640225 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.739956522 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.920908648 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.704307442 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.731916126 seconds)
    (104/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.734290081 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.821380259 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.553757161 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.739027349 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.895344821 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.710224019 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.304987024 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.727761603 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.933437685 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.216841129 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.033319605 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.001881923 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.732983068 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.782789409 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.960826236 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.109661066 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.818135756 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.881046201 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.939564377 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.730181062 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.745678062 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.841035237 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.064770431 seconds)
    (127/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.151577197 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.712494515 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.343086251 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.749313549 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.797560648 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.84293211 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.045864706 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.88235882 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.125784271 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.979450743 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.742517252 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.011159243 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.979139797 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.062460607 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.741092649 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.216292509 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.747474861 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.747118463 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.708762956 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.710097819 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.342867544 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.091271128 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.746144659 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.824128187 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.125384428 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.51208243 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.811539431 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.784668281 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.641212906 seconds)
    (156/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.864705585 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.808360721 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.961133901 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.172786447 seconds)
    (160/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.740942694 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.725024018 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.0215088 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.725561702 seconds)
    (164/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.601837187 seconds)
    (165/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.79346456 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.815551871 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.724804316 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.736792826 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.343181244 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.715908071 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.732463678 seconds)
    (172/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.808650984 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.725886087 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.285405773 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.071032976 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.727481198 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 6.917783702 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.046719235 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.839185129 seconds)
    (180/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.958494676 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.724825641 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.837432546 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.144419088 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.671261508 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.726783315 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.785830933 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.881194562 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.122114278 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.862013727 seconds)
    (190/309) benchmarking ("sort", BigInt, false)...
    done (took 6.722882895 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.908080473 seconds)
    (192/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.833905925 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.589462522 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.728946172 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.188818957 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.404070403 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.727321535 seconds)
    (198/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.178492041 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.728522948 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.790533496 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.961395363 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.041467515 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.09017792 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.348317704 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.75722376 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.889963592 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.967763576 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.741897555 seconds)
    (209/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.732503949 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.966728304 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.079323878 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.064143965 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.48139849 seconds)
    (214/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.964811152 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.93327781 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.748307527 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.832848138 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.728490528 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.911823344 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.682878525 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.730842327 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.282116337 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.864225011 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.644354171 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.756259492 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.577646484 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.726373797 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.711790477 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.086908564 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.918552327 seconds)
    (231/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.859060739 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.573918326 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.711763311 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.82821579 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.939121106 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.728601131 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.051579112 seconds)
    (238/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.239084325 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.739631293 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.71165863 seconds)
    (241/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.19493413 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.711678591 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.271387393 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.872059527 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.840959753 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.828392726 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.724537412 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.471433862 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.728112476 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.108607436 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.833194163 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.438862647 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.729406382 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.328540285 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.861649678 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.064821936 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.728390691 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.351687672 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.950026817 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.759948635 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.600418057 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.822161791 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.013873959 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.792865762 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.901165266 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.063533166 seconds)
    (267/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.207399214 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.82254098 seconds)
    (269/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.583105176 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.867230616 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.039461611 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.753363428 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.170155618 seconds)
    (274/309) benchmarking ("sort", Float32, false)...
    done (took 5.426123046 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.41150951 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.88628791 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.727509291 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.992646443 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.783869039 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.954418247 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.769739048 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.745594966 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.823887845 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.260447278 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.764811418 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.739828167 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.051686148 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.848440361 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.8218969 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.526413589 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.98503392 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.330940185 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.133226162 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.745564117 seconds)
    (295/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.126648165 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.859016823 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.763331187 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.035411598 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.786466338 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.122033129 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.996505316 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.029010152 seconds)
    (303/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.137519232 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.88478432 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.539959625 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.967648558 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.15045474 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.847041771 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.770613191 seconds)
  done (took 962.56020289 seconds)
done (took 964.265694286 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.771369906 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765827945 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.749408076 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.770747726 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.861573169 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.778463803 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.760895364 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.751683136 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.796469247 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.799072227 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.747827684 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.775977796 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.753462426 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.751069535 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.749639284 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765142069 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.069754082 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.783217816 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.766611419 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.760003346 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.766520105 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.747449741 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.799416436 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.776924074 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.755068082 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.752910657 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.753005634 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.769959209 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.862328374 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.753891849 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.752166891 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.761766077 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.067675758 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.782371848 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.746526657 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.7688664 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.76193951 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.760676949 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.75558802 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.784612372 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.159619846 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.790555242 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.751875766 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.751707986 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.751780629 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.755047793 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.752912808 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.757450201 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763555151 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764562086 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.14961603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.809944253 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.754648131 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.753232696 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.762007471 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.751455089 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.754601477 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767773746 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.774332127 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767894598 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.050945447 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.789255863 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.754310455 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.769962889 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.759660197 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.184223412 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.791862164 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.757424142 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.158231305 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.802925824 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.186323384 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.804105877 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.753889433 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.767900087 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.78537447 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.069631265 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.781081225 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.752948244 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.760836742 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.750603221 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.763385852 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765673104 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.757309504 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.753898057 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766821147 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.780452862 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.764089053 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.754226112 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.762442671 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.772897127 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.761420181 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.763486381 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.757119992 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.748952398 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.762377086 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.758867803 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.755634949 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.755956622 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.759074151 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.764398051 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.155178256 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.813999749 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.750947343 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.750606792 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.753737338 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.769692013 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.156932784 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.797013488 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.776207055 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.799920983 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.755912616 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.053401705 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.788404811 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770472064 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.763507425 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.75770167 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.749403592 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.052642578 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.185685492 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.811759869 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.756412562 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.752405209 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.771616248 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.7573837 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.752610688 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.073736802 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.788482708 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.76930588 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.877678158 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.766999932 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.786925488 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.753319862 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.759087002 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.78794009 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.772095397 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.787735781 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.757625427 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.771947988 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.772761467 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.753160447 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.766774239 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.765496527 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.757780622 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.761145143 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.750229827 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.786181219 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.771262935 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768800373 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.777878395 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.8771517 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.754741103 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.054202758 seconds)
done (took 276.154562102 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.823210493 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.748288556 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.847869724 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.751235501 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.832387594 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.83957833 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.749044178 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.749514195 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.749105492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.127618234 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.74977509 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.750488262 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.746564746 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750587466 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.834717041 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.753553012 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.751240903 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.089585662 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.75515029 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.823151374 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.754429235 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.750806522 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.752119464 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.126124201 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.746213301 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.747715408 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.824012707 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.752808882 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.090192404 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.752909029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.75522684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.090250654 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.844613027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.770635329 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.762636029 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.759279478 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.834918872 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.758467942 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.834453875 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.834557955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.850002774 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.794418491 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.750688944 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.748147445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.75681974 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.755138417 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.75164091 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.781504511 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.746699158 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.751370096 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.091224316 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.763052717 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.761446637 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.753655128 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.751286975 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.775741643 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.752274623 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.756083357 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.846337239 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.756079719 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.816397342 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.127910643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.130719517 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.755221999 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.753520842 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.754135758 seconds)
  done (took 176.46985107 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.820602798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.833884982 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.821745161 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.75928214 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.805914007 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.821978292 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.759253198 seconds)
  done (took 14.296626376 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.760465302 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.75561983 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.805970149 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.80583867 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.755783601 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.907581829 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754949983 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.76643526 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.754426844 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.806716308 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.756656096 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.755784419 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.763073624 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.754295878 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805716075 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.766852663 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872434698 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.756629745 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.756349486 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.9071771 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.753936732 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.764821551 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.790267346 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.767515706 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.758851028 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.763229379 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.321250717 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.756500757 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754193877 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.755882992 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753792357 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.797044214 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.758729526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.756557422 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753544151 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869790239 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.757447828 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753630459 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.757761674 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.752699431 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.756676204 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.756101781 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.757194898 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.755370637 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.756416523 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.779427137 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.758093315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.756939812 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.757437016 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.75900181 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.791173174 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.75833236 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.753773751 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.755955991 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.812243016 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765098692 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.758600094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.754500634 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.757950775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.754994974 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.910025597 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.807393744 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.757825745 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.807925334 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.758326132 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758460028 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.757826238 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.757720336 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854382061 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.758527419 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.808411568 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.755461945 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.916393718 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.781611599 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.759920505 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.761336946 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.762798143 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.75986964 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.762251771 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.764791314 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.757550095 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.760370273 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.765901287 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757411458 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.756258153 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87068669 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.865427283 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.75663841 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.771725406 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.766268759 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.756863607 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.794830841 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.758642203 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.75575656 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815650884 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.876027499 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.813299948 seconds)
  done (took 194.759144478 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.764802743 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.767471705 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.760122477 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.776201289 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.760210912 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.759376829 seconds)
  done (took 12.266943574 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.762607881 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.761416053 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.759283399 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.761238171 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.760029268 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.760915007 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.761578784 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761772198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.765449692 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.760655672 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.760370527 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.762330326 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.761654501 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.76081831 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.762568762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.760279853 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.761380432 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.757988607 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.760816035 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760953225 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.913837447 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.763512608 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761677774 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.761842774 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.767084918 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.762414253 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.769343411 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.761401694 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.762004727 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.770055317 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.766853089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.762856168 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.764021031 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.767449871 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.767204308 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.762974238 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765832549 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.764646449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.758865875 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.762306822 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.763612347 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762531701 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.762639773 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.763209177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.76358227 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.769375236 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.767389404 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.768253865 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.763634487 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.763053098 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.763540958 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.762496164 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.763191182 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.763448172 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.76619027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768031883 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.766899401 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.763573302 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.762667043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.763172841 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.764062313 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764005519 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.765330856 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.767303513 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.759859896 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.76575641 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.765215149 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.766649248 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764053817 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.764110694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.764591733 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.762642627 seconds)
  done (took 129.805550876 seconds)
done (took 529.286736459 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.916430772 seconds)
  done (took 8.597998811 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.939263169 seconds)
  done (took 8.664594039 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.278581672 seconds)
  done (took 9.961838494 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.768432801 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.810323242 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771156397 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.761825733 seconds)
  done (took 28.819641177 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.893177204 seconds)
  done (took 8.579206633 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.782798563 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.756752714 seconds)
  done (took 15.259611665 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.901654 seconds)
  done (took 8.585238291 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.877141965 seconds)
  done (took 8.587302344 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.7751157 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.801002111 seconds)
  done (took 15.272875868 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.743299144 seconds)
  done (took 8.426435166 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.419842076 seconds)
  done (took 11.200824123 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.770547532 seconds)
  done (took 8.561779722 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.766866026 seconds)
  done (took 8.450206513 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.826311275 seconds)
  done (took 8.50932681 seconds)
done (took 159.158530815 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.762396917 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.762447655 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.764626232 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.759540814 seconds)
  done (took 28.731449642 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.796763458 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.815663129 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.799233288 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.807836198 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.803022525 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.796891878 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.790499298 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.7885618 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.807778194 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.80254956 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.798772003 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.801136341 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.797466557 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.789951776 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.800950915 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.800783869 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.808914199 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799986581 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.789669517 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.800089066 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.767235506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.808060858 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.800427541 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.766090791 seconds)
  done (took 44.821828181 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.959116554 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.836186712 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.916633864 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.815242601 seconds)
  done (took 9.211197647 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.816023723 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.81817374 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.829331613 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.867946197 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.902230559 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.828010089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.787879519 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.787693529 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.772740153 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.818775201 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893973204 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.812647712 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.904395163 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.765156719 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.950174282 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.765591071 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.765322286 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.81742007 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.870614113 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.882073653 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.76582212 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.816640928 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821287057 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.814665787 seconds)
  done (took 45.558934153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.76362077 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.773086844 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.771466687 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.765259157 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.767568439 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.765578416 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.771441919 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.766257496 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.786668629 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.768170586 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.764190699 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.764262322 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.764249241 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.765379341 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.764944256 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.778785812 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.779625267 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.766644124 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.768627311 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771331138 seconds)
  done (took 37.072977676 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.759462905 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.613371787 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.111325436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.017925954 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.76157846 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.761712761 seconds)
  done (took 30.710916397 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.779586446 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.7735367 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.766583502 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.824975448 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.915939261 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.779511883 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.767153443 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.779283366 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.814632685 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836034152 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.789306704 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.796903623 seconds)
  done (took 23.311238845 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.763063562 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.772529369 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.764666559 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.786333647 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.77853994 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.774672782 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.775062953 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.761921701 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.782487198 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.787830524 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.775889884 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.778849261 seconds)
  done (took 42.991668774 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851954707 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655739839 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425533923 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578259608 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298075559 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972236236 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39893717 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938820734 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.765977401 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035059542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.38988686 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015227024 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015615982 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763591374 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837290775 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.236112443 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06388253 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001185343 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794144646 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470509465 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891765386 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301024816 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.595213985 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.899653666 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974553016 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.896469563 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.023438583 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.714222373 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90014516 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801661399 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772733063 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765041523 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037483238 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992300782 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853308939 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773568939 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417049918 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.482161505 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.757835173 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.489075512 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503167043 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906933097 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771594938 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764960359 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697590325 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300058788 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948774263 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.769133906 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.465906013 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.766173205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774525282 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852491837 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.767786475 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.581689273 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71958171 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042191746 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.762690049 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77163729 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31840357 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887118212 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415957097 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.707728352 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.857703778 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.525073211 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251210039 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.926407389 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.768437417 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768178348 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699515861 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.525881838 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8989364 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909201165 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.784350971 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413636945 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071160747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.463583446 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857453063 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067152444 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.578263951 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.706204199 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992775502 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715312405 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699761698 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.623727075 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700548537 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04661513 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808098298 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.42960301 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811307849 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.941357454 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775586492 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786064408 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773734158 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98825184 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.648666506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766145656 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.34127152 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063184265 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789344093 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944992471 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700687411 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.770944239 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020145994 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.976689693 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.033959963 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246647664 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938318159 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767513636 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.854943355 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.710174994 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783813879 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.05729044 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837059074 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892977669 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909284054 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.723211427 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078478226 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799961261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.941962917 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.416864487 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044051345 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.106872127 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024712036 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852922784 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770982579 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.770299455 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.552083141 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401118432 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.993229974 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.771098642 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285489443 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785361744 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.772008033 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70303694 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.430797799 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.411155335 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.893348258 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990630627 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.747083336 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049897818 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701840003 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914958973 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.758189378 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.995822524 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.429875613 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.861114444 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029640971 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290690554 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.038613223 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785216465 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789074487 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853573342 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793047108 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.210343651 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027330504 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.775050779 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.774996303 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.564210355 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853701949 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773281347 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.775204355 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571011873 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067123593 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.806862092 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781858111 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662730102 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.785488731 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856015068 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776792019 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.781091955 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.296991231 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.525823548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.781474928 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.439417508 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004074891 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781473599 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.545060963 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975619852 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.863161549 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058822017 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845041215 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.704915279 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.474241892 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.476453791 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775599341 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.707281569 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.773892547 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780651334 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784509821 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.967766328 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.069546056 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830405056 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.544449087 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.894478132 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783661741 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.778611537 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774391714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.271401473 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903771691 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419540255 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.785282037 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909569271 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.786649913 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705661823 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.777113103 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777447847 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.774532582 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.729114517 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826787845 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.570024184 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118947534 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032392735 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.41922309 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791877392 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.534473807 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.914726387 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.806937664 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.366743987 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896740344 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.781189994 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84019153 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.786453295 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.568194087 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.563273934 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327106498 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096399667 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11009245 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239169942 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.167395779 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.11663378 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.953751949 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008836031 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.303339738 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834989127 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964469353 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719082903 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86561686 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.436158616 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139618058 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791765613 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002122357 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177106812 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.443775031 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949255927 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985572991 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80964811 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.595330272 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809328076 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.29999389 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931393942 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.42020731 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012395272 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951419385 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.384382879 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.89800343 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.776485678 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25491032 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864200555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.484363138 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138461109 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341525032 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.426886999 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164631541 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.777335687 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220318674 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143087127 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.124310302 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.875882544 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712473443 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787942525 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787034333 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.777485471 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.757744702 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.698859398 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.059479815 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788615025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011326558 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.07502841 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059161126 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.703480029 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.782518342 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778174228 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088487015 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465645984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022768316 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.134034013 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.355220566 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7891528 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.709939401 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71194261 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.480369393 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.785805061 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751449254 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01388399 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.892863793 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.732241205 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.177443982 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096014744 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031748351 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.794139041 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065101836 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062755963 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.511014186 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8074184 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.87853221 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.371974002 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.500578089 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.000073577 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.012444928 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578393177 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005872109 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438145176 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.762003785 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.77975599 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992939826 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.999292275 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.431209337 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044937239 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.504954344 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.786486454 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154148017 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848243372 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.448042148 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010996592 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.871388447 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788433287 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860074671 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789063149 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.790983577 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790810737 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824876158 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.439052287 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.930366761 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.792854802 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870324892 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919999374 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.367747616 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.793829164 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069166135 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155530029 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131894365 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849910494 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.781779124 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782836301 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713450143 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918501267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224338214 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054093038 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.908698873 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.974459791 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805574356 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.390090162 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.099077579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095339431 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05586894 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.678018228 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782676451 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.871496501 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.00461959 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791248642 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.992025589 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020713685 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114174914 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25905595 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.931204802 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0672161 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056221776 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.151702287 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782547147 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373948455 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.79580179 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.315745807 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.828161335 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.447649857 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084443338 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791484275 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003426989 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804679958 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.982682763 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.234135759 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.560336869 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15341497 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.786398913 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851657922 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073346194 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207780552 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106129381 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863423255 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795628536 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.48206369 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92279819 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.731566894 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.052655282 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784232135 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994580681 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.495460615 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792741438 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083144595 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10406186 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.781743159 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.767979302 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845600618 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.794611709 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005579108 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065226891 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040951409 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793408759 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.787693436 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.598383996 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082761214 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854455927 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716916093 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.788032992 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881365313 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030947791 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804791808 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.301672572 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.486822224 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095254806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.710612406 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806933821 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.215394523 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246313218 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14393011 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.31567918 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03063397 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348362389 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.656127458 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162953697 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.789751536 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.190844477 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166209619 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.788553066 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314013026 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899960401 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.073018031 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117337677 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.798595839 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577010842 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.838451348 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007522842 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381344137 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726860011 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787767079 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.847876379 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787997233 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.806273812 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798575118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.791291397 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.677447678 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.628120063 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278970322 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.791881789 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.836310987 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.37564948 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371857372 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898370002 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94462534 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793605618 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.497584452 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.076654171 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040171208 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.312624421 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.865540019 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.793817519 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787831698 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714461248 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981266132 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.98311302 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09757047 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.143221936 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.902065629 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794041475 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.002901104 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997936193 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.424563522 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962468683 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.188184205 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903528226 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.719399396 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502694943 seconds)
  done (took 1635.498010946 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.791116044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.818477734 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.79529179 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.806742981 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.797632985 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.80900054 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.816302104 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.795479241 seconds)
  done (took 56.141347289 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.788519266 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.970057087 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.797117097 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.790044048 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.809570614 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.796356357 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.985935811 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.802827498 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.799983681 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.798889921 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.790835612 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.822732522 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.12289982 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.814730075 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.790457628 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.82568523 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.811880108 seconds)
  done (took 73.03926859 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.791154263 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.95915589 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.816522263 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.816524617 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.662923818 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.799650403 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.719032584 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.799499805 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.792748748 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.958886703 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.130636597 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.842362709 seconds)
  done (took 88.803081333 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.805170029 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.79650462 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.795650996 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.795548623 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.795486301 seconds)
  done (took 10.70927305 seconds)
done (took 2128.302556815 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.064012644 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.982920009 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026589548 seconds)
  done (took 5.72401776 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.936517521 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.98634765 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.103005917 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.109341772 seconds)
  done (took 9.852874992 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.074328616 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.161944036 seconds)
  done (took 5.94971442 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.116733938 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.808160263 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.173393674 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.790406683 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.791414002 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.790642117 seconds)
  done (took 22.091717637 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.794403876 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.799563879 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.794964425 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.796868308 seconds)
  done (took 8.900664161 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.776446471 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.478030264 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.779548526 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.792265185 seconds)
  done (took 20.541736399 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.946156927 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.909982076 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.936694855 seconds)
  done (took 7.507421311 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.402448225 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.428496811 seconds)
  done (took 9.545709981 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.957489616 seconds)
  done (took 3.67299649 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.822839323 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.06515744 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.311666692 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.369332499 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.431013913 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.106089106 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.14969808 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.030145548 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.251224275 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.283718584 seconds)
  done (took 24.53629823 seconds)
done (took 133.198394925 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.338691189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.824081603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995094672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.158425108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.031950113 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995799182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.003016554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.160158858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.842213385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.83551258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.17345563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.030013812 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.959458144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.814157685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.965616706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817656787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.019141372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.178276233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.843551472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.057624855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022251812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.802299491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.994186204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.81854119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.024766892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94523406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.347682465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.825728493 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.980725154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.357518304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951478655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.195619294 seconds)
  done (took 166.0273831 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.795270624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.796377401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.796009317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.793944023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.240656163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.796154423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795950231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.796148954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.261277307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.259646877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.797707463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.23323905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.798076932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.79596381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.796564817 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.795189752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.417325162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.797204744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.795913064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.794505147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.79697085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.064080248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.797295501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.078972991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.422252143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.799747962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.795616766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.796438715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.797039471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.796474471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.797653958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.795705263 seconds)
  done (took 206.811537151 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.796479803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.798064741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.795712254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.796915795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.798980412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.797280316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.798706058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.797483271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.429157154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.420041235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.798583328 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.798011616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.797237438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.796067835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.797171984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.796715777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.79670467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.773481569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.798253308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.799492164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.798117153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.438121053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.801350807 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.463368908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.807013917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.808666275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.798219635 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.807412426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.809756176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.809578519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.814434399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.798721812 seconds)
  done (took 217.855450653 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.05677068 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.802655215 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.803654472 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.722555977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.804876815 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.803224103 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.805705286 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.05225351 seconds)
  done (took 18.589054862 seconds)
done (took 611.006675073 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.295252893 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.147494523 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.985084334 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.827671455 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.082536048 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.864190097 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.823488625 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.897159856 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.440003525 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.899321252 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.499570233 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.8465341 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.58472747 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.852676962 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.947286001 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.888738175 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.397976746 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.484981308 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.00263756 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.891526188 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.000559767 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.756031882 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.910114354 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.486162255 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.605216488 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.819203476 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.906493124 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.409672921 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.83490503 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.983774663 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.590759061 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.138044482 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.839857507 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.821932429 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.880742789 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.85724327 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.106454623 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.840108483 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.946786063 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.568269919 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.905755929 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.358444927 seconds)
  done (took 99.946892804 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.795954146 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.79375323 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.791580248 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.79515435 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.792044942 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.793342348 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.791810489 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.792483613 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.794264425 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.792910013 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.792237189 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.792846036 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.793350045 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.793604413 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.792946336 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.793453735 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.793923224 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.794631885 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.793419933 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.792774648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.793896679 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.79355834 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.80708922 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.793126952 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.79471879 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.794142194 seconds)
  done (took 48.378205511 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.80595385 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.962670167 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.049314972 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.828242785 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.805361658 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.810744029 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.825467304 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.813480124 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.809271375 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.809421521 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.899086521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.813882399 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.827291466 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.045739448 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.82486539 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.80689758 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.807948247 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.806942583 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.970831233 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824236516 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.825991834 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.812603652 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.826625592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.820265958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.810120379 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.808222743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.810737142 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.247941225 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.818094143 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.901953634 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.865349862 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.833277222 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.188524249 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.056430834 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.865534844 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.81822741 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.808296057 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904481869 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.815449273 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.808154662 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.827078607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.814495913 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.047072322 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.298704787 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.825053913 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.809747672 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.25777563 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.916992786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.849475818 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.819064738 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.049618823 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.827924072 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.808832636 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.809024524 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.845464102 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.815289219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.808444215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.105427315 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.822451952 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.826088712 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.814792827 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.809497959 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.970021255 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.818864361 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.960191823 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.819066918 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.815883606 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.809457548 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.048460631 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.827264984 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.297088463 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.825498372 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.810050518 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902116901 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.967589583 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.287209597 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.824858114 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.973099839 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.205799271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.835689065 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.819103024 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.235702375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.840720999 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.819735919 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.81348907 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.813217687 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.811907321 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.854982211 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.82774646 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.235134883 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.305732043 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.126872248 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.839092407 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.824730101 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.811797938 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.10556992 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.821447031 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.811990037 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.043911911 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.311795549 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.828590305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.817949193 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.29049978 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.828434846 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.830497152 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.820833369 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.053238586 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.829421762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.854803398 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.812656544 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.817750395 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.814489858 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.830881457 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.818458453 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.812677707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.281145174 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.926011251 seconds)
  done (took 224.671465508 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.808283072 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.811737373 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.806243748 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.825335906 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.807074121 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.81167773 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.806426142 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.806952439 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.811710232 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.808106012 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.808027937 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.810957995 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.807969513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.815602944 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.82185134 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.812604221 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.412781846 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.807649675 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.808931601 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.807594769 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.460480171 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.812694245 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.806621646 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.808337442 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.809094469 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.809071126 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.816367887 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.816218807 seconds)
  done (took 165.689755641 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.81302396 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.928651688 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.834717818 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.842436973 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.822726586 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.811820502 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.837220762 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.829235493 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.81971718 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.812370219 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.81138921 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.87451761 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.825463951 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.910537151 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.846940069 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.845912503 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.915621699 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.824667991 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.812304299 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.811779221 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.843614521 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.80765394 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.874636943 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.940797167 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.832327659 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930160619 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.822281661 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.815336118 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.81375894 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.932401735 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.829645494 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.875379061 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.847143623 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.831952616 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.935029216 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.93054597 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.919560343 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.84545636 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.819905694 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.813924238 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.816195011 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.802817816 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.932602526 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.834394129 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.815921375 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.920282805 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.833223812 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.817505129 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.82422992 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.814402995 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.827862912 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.834825051 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.88299106 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.951155281 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.848153395 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.840431275 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.839935504 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.090631482 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.825999626 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.914730286 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.809123112 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.934872095 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.837018924 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.802959871 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.815438535 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.820437432 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.845107604 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.847293274 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.919729552 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.823367298 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.914434367 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.852457246 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.824235709 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.815740005 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.818835787 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.932735607 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.932862655 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.852092107 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.855089521 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.847198529 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.813473985 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.817022986 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.803152738 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.833786137 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.820173025 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.932919832 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.932602709 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.824652435 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.818613533 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.817796553 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.81945457 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.843169053 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.94278795 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.85399941 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.910713751 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.886092195 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.894823501 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.833991734 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.830003959 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.820627293 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.880729046 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.835687406 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.828975032 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.138667074 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.88721474 seconds)
  done (took 196.818601261 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.280488689 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.874518088 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.875235185 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.147172109 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.165446307 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.787016393 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.869879116 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.867242286 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.888715871 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.063099937 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.937665781 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.886539674 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.853848695 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.839836701 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.864716549 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.887046814 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.878582042 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.192427115 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.970806855 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.010441756 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.848966153 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.177853479 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.141126743 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.270504255 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.902777527 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.214855759 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.533951764 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.019505866 seconds)
  done (took 59.993509209 seconds)
done (took 797.219164734 seconds)
SAVING RESULT...
DONE!
