cset: moving following pidspec: 19420
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.242619568 seconds)
loading group "string"... done (took 0.574578019 seconds)
loading group "linalg"... done (took 7.483828146 seconds)
loading group "parallel"... done (took 0.170203512 seconds)
loading group "find"... done (took 1.212484908 seconds)
loading group "tuple"... done (took 1.874213636 seconds)
loading group "dates"... done (took 1.271703282 seconds)
loading group "micro"... done (took 0.235295168 seconds)
loading group "io"... done (took 0.97201908 seconds)
loading group "scalar"... done (took 39.405004605 seconds)
loading group "sparse"... done (took 12.559025435 seconds)
loading group "broadcast"... done (took 0.99376987 seconds)
loading group "union"... done (took 13.66626423 seconds)
loading group "simd"... done (took 4.61723788 seconds)
loading group "random"... done (took 9.287693759 seconds)
loading group "problem"... done (took 1.911473653 seconds)
loading group "array"... done (took 21.970656239 seconds)
loading group "misc"... done (took 1.963733911 seconds)
loading group "sort"... done (took 3.360885503 seconds)
loading group "collection"... done (took 18.95864529 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533206566 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138494723 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116961694 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133880857 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.180963709 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12777015 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126287376 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099342904 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.897056761 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159127649 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122587395 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49894647 seconds)
done (took 4.871490357 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203403473 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089647467 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094457373 seconds)
  done (took 0.855637537 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064113392 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128918827 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066455565 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081267049 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066599796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079785887 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066236958 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065340937 seconds)
  done (took 1.234128489 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074929314 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06871522 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083347549 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067922923 seconds)
  done (took 0.974110985 seconds)
done (took 4.014388556 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.918267248 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236333566 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18956358 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.44782202 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150206914 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189114907 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685140471 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.368768003 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206728323 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.073400414 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1190936 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.370993311 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.122735794 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665920906 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077196889 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104262531 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.166416046 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448732501 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080462633 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08189329 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102304851 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128027956 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101496785 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08575257 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153794814 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070774596 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14800327 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094664886 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066917395 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.254997135 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171581075 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690793156 seconds)
  done (took 10.492491658 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098970024 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117488481 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067702263 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139003132 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104909117 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08432772 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071974671 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082032578 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093010583 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160538948 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11494857 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108159597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080435136 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070155331 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099390618 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213189793 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106453185 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08696891 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085814939 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07615734 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12291653 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08297384 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094439858 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079169629 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151464843 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192505601 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099519607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111043359 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070456609 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095367965 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.127952099 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130820227 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065810554 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08148775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.157049025 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095712824 seconds)
  done (took 4.514909599 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.069352094 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.173695305 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091605605 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153896187 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.114269123 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067835015 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128544524 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.080846859 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084085787 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244194044 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.088974468 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069189756 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.472855585 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126468383 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085264148 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068140878 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086916871 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067687937 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.508858828 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143259406 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102421064 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101125969 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087003815 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07039501 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369468392 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067485905 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065731334 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083431074 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057964795 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146062177 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092259845 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084581338 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.148445262 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106978606 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068825051 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12084899 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179498239 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111474422 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103009432 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082693369 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065873424 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159215428 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074496446 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083079851 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089765238 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120684364 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117219901 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068619421 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080689576 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181610504 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066567578 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097903167 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.901743391 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164713999 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094336765 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066172307 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080606015 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270425366 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101575796 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070739258 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081250669 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249700437 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.175851068 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083342944 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066711131 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065236869 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085319025 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364364383 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066947568 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.752874142 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071250503 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077036322 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084944198 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066864129 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088476429 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072935961 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101651263 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066456597 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069144194 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082633838 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066849585 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069227755 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099737803 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210486858 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066704098 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082728298 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065417328 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103588081 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097544012 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084513155 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066049007 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115757873 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070663912 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068284545 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118496958 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068045827 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100186878 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083293722 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114474524 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081661285 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.127740707 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067954365 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109793692 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075292735 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113428342 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095094582 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069267166 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155438768 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065614663 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079940768 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068074846 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06518347 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084236356 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06871544 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093918633 seconds)
  done (took 20.842849623 seconds)
done (took 37.596460855 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.307910543 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093306528 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094097036 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076917208 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094141184 seconds)
  done (took 1.426645441 seconds)
done (took 2.153171598 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133362035 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119150184 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06384611 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113763836 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063690265 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118690605 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116422583 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082544391 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116652126 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064789673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113872997 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064209821 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063394422 seconds)
  done (took 1.99413092 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082460629 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085889798 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085658805 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080991758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063616409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096798866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079437213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104820465 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079846462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086288569 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065102938 seconds)
  done (took 1.633542374 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082213772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083610219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085539506 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079830498 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064746879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095072777 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08017633 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102312102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080455087 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087920887 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064721662 seconds)
  done (took 1.634011277 seconds)
done (took 5.977976135 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078952899 seconds)
  done (took 0.800573431 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.733506465 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.31636439 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.097011329 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133172318 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.213165814 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172057773 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.447222203 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.092289547 seconds)
  done (took 10.102757323 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100951772 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097288571 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07072096 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086255294 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072875835 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069626995 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084643533 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068345504 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083532434 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072042162 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085500738 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071730178 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070740526 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081409179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072163277 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085457528 seconds)
  done (took 2.056545228 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104556787 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103824133 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090053294 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076637493 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088396462 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073490854 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090620944 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07508872 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086472328 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073901463 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090488812 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074372634 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086796756 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066573852 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075893016 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091516131 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072673735 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089160184 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075919279 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089424687 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076759571 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079052931 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072399807 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089348865 seconds)
  done (took 2.813472695 seconds)
done (took 16.496569558 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130929411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072198741 seconds)
  done (took 0.916652532 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080458819 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095635153 seconds)
  done (took 0.901711662 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084155447 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079530123 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090043142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093674209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066892492 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080427293 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103592779 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068054452 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066795746 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080326514 seconds)
  done (took 1.538435064 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069434069 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092322252 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070809109 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094434022 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074445564 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078898572 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074825479 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083012505 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081179296 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078147999 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071446565 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097746115 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073262546 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09953535 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075033889 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083815013 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071892882 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082406068 seconds)
  done (took 2.17557786 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066462441 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068069479 seconds)
  done (took 0.857508504 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068845798 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064283862 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080577073 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067612207 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077938696 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062931036 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077940678 seconds)
  done (took 1.228043859 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405068259 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108897803 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263421404 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07236115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104396861 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.277007082 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082307186 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071595572 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086458615 seconds)
  done (took 2.235155487 seconds)
done (took 10.572427552 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081929172 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085088663 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109155814 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415376205 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092735847 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.079639045 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131467666 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.226349832 seconds)
done (took 1.956557609 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130386082 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615622516 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401255553 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214708266 seconds)
  done (took 1.970212357 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379310253 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090102942 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072211454 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066684915 seconds)
  done (took 1.352003766 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066648653 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070660359 seconds)
  done (took 0.881473168 seconds)
done (took 5.073959445 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066982941 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11204264 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065823141 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06463174 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082336556 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064486772 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064939603 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082551556 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066475384 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065682293 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08048121 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066998409 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06700823 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077496774 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064953529 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066610176 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080462257 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064829454 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063136028 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07849534 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063537053 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066695781 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078083062 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064534155 seconds)
  done (took 2.499895947 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08730401 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081435916 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07221421 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072407857 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085272729 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072834407 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08673564 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067027645 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086404359 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068910618 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085089577 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071348988 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068907104 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086351175 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069150993 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085282222 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072269809 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081344986 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069526925 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085171192 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073115626 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066970415 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085563117 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071434187 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084647701 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071330485 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083375829 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068211566 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08652386 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072018796 seconds)
  done (took 3.064697692 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072184228 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06400256 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078974566 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071888246 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063754855 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08056013 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064153219 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064766533 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080600504 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064699521 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080150477 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065142947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064868816 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080651335 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06604982 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068914161 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096799071 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065498104 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064746781 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080387019 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068246874 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07921715 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064866643 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064687005 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079085055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063813003 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065138305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078886445 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065796157 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064764903 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08235259 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068013171 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063878266 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085357667 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067886864 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063316454 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082292505 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064193912 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064421743 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077972481 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064033325 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078043463 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063318983 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070780126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079106531 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066363766 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064759497 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08005228 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065002904 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067252782 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078296116 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064687409 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081241719 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065872392 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068563071 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077738999 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065728875 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064036093 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08037329 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064756609 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06401327 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078213726 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066969094 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064969183 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094375959 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071211455 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078308561 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066842053 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065346395 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080505154 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066768702 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078360917 seconds)
  done (took 5.888214875 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118713586 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092707697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081802956 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066194721 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062534711 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079822457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068108757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07985456 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066111503 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085341654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06530874 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066221255 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080838237 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07965191 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065325958 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080590704 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071090603 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077958321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065634111 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068370219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080004612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068617481 seconds)
  done (took 2.417929521 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188079023 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086163812 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110501146 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089755924 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068877255 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090126593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070810684 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085800046 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070551009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08411324 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069677122 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0852427 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069094441 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083262528 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068981305 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069971152 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.191157388 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069572214 seconds)
  done (took 2.402535638 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079464324 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066589509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104485795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067176179 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082570783 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069541085 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086511154 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077168815 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083782177 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067683147 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090471075 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069119208 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069414706 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082015522 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069527917 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081384093 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069719387 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067329711 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090900722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072801184 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087350203 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075245469 seconds)
  done (took 2.4632059 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083036953 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068183967 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101947907 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06933766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077877695 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066293218 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088023187 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06773484 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087528083 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068006735 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067068171 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081389547 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072772203 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081652561 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072792338 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06627858 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084038544 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067029922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08376143 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063686447 seconds)
  done (took 2.270359993 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087813658 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082541494 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068232372 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091958678 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068512513 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068102799 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091597915 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068362326 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083645593 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109080585 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06954396 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068983537 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09232155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088876574 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069212206 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091977035 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077874595 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091677154 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069972349 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083956528 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093303488 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083136242 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077258861 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083694065 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069932207 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083769089 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068633464 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089339618 seconds)
  done (took 3.025175198 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06716854 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067887632 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079591875 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064541407 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064454518 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079222893 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064783393 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064520197 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081872246 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064406611 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065904595 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080854878 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067341443 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066539804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081678115 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066461724 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066471107 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079055989 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063925076 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063628599 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082055336 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067160288 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065871291 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078604425 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064175918 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06621862 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079516629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064614955 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080897768 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064788443 seconds)
  done (took 2.864391227 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077272207 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072844094 seconds)
  done (took 0.905192908 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065815937 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082167946 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080142076 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07138951 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086912975 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067760303 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090034993 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072758732 seconds)
  done (took 1.373371154 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08259062 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076625324 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084116365 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078820192 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092642153 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083137201 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157459693 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084095636 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074297045 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064280027 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095772186 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06728061 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08839864 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068021508 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073655496 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088777117 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06617023 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088406733 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06976642 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066191152 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083214227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079053572 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084956449 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065596529 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068247681 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092114323 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078646645 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083974696 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070597039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.090939304 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073240805 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06111155 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081904935 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067929976 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079362089 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07619068 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09828401 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069836594 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077292197 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083427042 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078772643 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077957394 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073319757 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08854987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077699408 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068113289 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083624878 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062836175 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06490975 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085781664 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063440518 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083874468 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063631087 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074445719 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085723914 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078883663 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081729948 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069421774 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070797438 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086975978 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074457823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085027737 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070913801 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066981244 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08992686 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071998116 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092034198 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063561799 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061815901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080283099 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076957322 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10566523 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073393109 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083082345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068383015 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064660466 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08601615 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069547206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088649195 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073853299 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083185409 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073908945 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074508231 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083023886 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070241371 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090882843 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06540254 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085482551 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065849438 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084970203 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082280076 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065801257 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080320325 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078946158 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070955765 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083822013 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065239542 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08998563 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062717326 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067382511 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0832018 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06826611 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094112567 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073554292 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088675007 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077780516 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089311369 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067491045 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07103044 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07910039 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068549999 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065989672 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090460638 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061919665 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084953132 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068246301 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067038972 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092528438 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065398219 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081857481 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075555357 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072463174 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081612287 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064624009 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084871223 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06797488 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070810652 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092291688 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066340938 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077660124 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062843588 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070633352 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082473288 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071614222 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087640777 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071142157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061863842 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080742203 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072276677 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091659359 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067366862 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083795289 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073946812 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068586873 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081434779 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074291784 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085286786 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06641272 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073186569 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083449729 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063632434 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086384905 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070366834 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065734283 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086257686 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071742894 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085112489 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068039386 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066287879 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089115832 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068229909 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081647054 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067334878 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065952751 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093304278 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071030239 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0781306 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064721375 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075612523 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081189164 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067205547 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066190231 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085094501 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068327841 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081223437 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068010741 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068545807 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095015791 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071836313 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084520758 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071859927 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094706774 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068679628 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085136865 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06756951 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068429453 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084331125 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076294321 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087867072 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074043369 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06958054 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079675349 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073344072 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090169376 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067310024 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065107476 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082104672 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072128602 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088611554 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072301537 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06775724 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081371033 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067562874 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086407567 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070543304 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065996364 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082313538 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072955409 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082260506 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07536129 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083989455 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078080492 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070608753 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079596886 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070645428 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081254511 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07470389 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062250317 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080313204 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067342976 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084695426 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066970459 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070035438 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077314222 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075559856 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090875128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068616399 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066930657 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082836243 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075611279 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069052932 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088169099 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071292676 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090100139 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078996198 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082173558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070933136 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078100436 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083325737 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062509922 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088935154 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066695034 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066606837 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082583966 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066838807 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069310071 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093161389 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074748099 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078234895 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069021964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082040598 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067243195 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063416745 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087634909 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070949908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067218277 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090707301 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068892217 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08370634 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070739516 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083184914 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068666049 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067951152 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086566739 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067895122 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085667705 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067304876 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070143416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081966367 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065698206 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06924792 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083702404 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067900761 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088930933 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068064588 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067819704 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086344899 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067999347 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08330196 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068443997 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066738974 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086163931 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069039366 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06758643 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086813575 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062724084 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091092409 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067742695 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074503291 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083963898 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064856104 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089361933 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070909846 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088513135 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069398073 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068321506 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085201665 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067364028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07060597 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090534082 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064955927 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094891431 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076044303 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083971648 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071067987 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067350909 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084306492 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067087538 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084568382 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069195633 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068098715 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083240091 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073364828 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070275373 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084821417 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069449738 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08464781 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068515302 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068863719 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078595775 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06673121 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066601642 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084013855 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076862899 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084897667 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066792432 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082398967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069448198 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067083701 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080279769 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076060662 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093281834 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067874383 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090756128 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066942545 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068624139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095510817 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064609736 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081855209 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066354065 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065651222 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091445372 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067784646 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092883223 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068182367 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067770381 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081326554 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069754497 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065979099 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078200719 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065181096 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087403804 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066739205 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0660967 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084210278 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070362601 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067201626 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094294543 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066149179 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085145663 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06887991 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081246199 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066602879 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066512164 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086263612 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068898694 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065681643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081399137 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067100291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084451168 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069502048 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067142934 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08540854 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075270492 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066746172 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087731775 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071331044 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079073574 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07169953 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066465715 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084642317 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066547228 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088440327 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072200819 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068185555 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093833439 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067914618 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085114288 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06886241 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064599837 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084123479 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067000033 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083844479 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067885077 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06786743 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092932451 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065565202 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087000159 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068175199 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066892541 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091666456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069120425 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086661586 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075904642 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067532676 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086357043 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075845074 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088570126 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071639213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08517042 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069240746 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073148822 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083552546 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07335713 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083954824 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067963392 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069508625 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082113803 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067819644 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067959434 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083933018 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073855549 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085929646 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067697097 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06612298 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082022467 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069182626 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087271296 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076834047 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06976814 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087508375 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062907684 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081144697 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068845785 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06559664 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086033385 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071404365 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090586817 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071069868 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068398928 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083586621 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077901478 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090195601 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071469522 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065424535 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08827988 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070023233 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087031033 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069890228 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067876171 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085948764 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072523899 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069325513 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084452287 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073921981 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087608773 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069111697 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084992789 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069044505 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068137011 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079516547 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069396345 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070157793 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090376174 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069458083 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084332648 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078967612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064766389 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084763217 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072486455 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084825695 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07313359 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062886722 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085807178 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068502751 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085518423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063312985 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066467043 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082194436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070662773 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06613388 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080601571 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078852296 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094818517 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069984766 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083068801 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067897324 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062722314 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079727275 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067780949 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068959516 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087284872 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078056377 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083715891 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066922053 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062902414 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085591002 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07114257 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087524944 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06636143 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062809385 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083922925 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070678231 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089794584 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067063361 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06796308 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088927625 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070586834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064320224 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08956117 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065345101 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08856813 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080476876 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084451509 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068904042 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074073336 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092937045 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068713979 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079479347 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068406635 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069873211 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085321181 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068317923 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086157698 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083920353 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087452655 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067780891 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066419525 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088070834 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068077613 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092981145 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069030708 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068303671 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09048634 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069453564 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0932721 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071298687 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093401182 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071134199 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071285193 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08420426 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068039355 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065709978 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083846506 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069080359 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085893107 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073522003 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092464941 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067459041 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096628643 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.0770828 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069553996 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081756182 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068306036 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067170433 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08061632 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068917422 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08250962 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066685197 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065442118 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084208517 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068696823 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07247508 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08590831 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069275568 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08436274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062489059 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06951554 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087641492 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068689567 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064112555 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0848162 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068939723 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08874988 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071284105 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065183619 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087376738 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06885237 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085507092 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064143265 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074501724 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084868614 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071838561 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067493509 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086320234 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069349938 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089070944 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07365243 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086267074 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071171433 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076832462 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089076232 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064948494 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083024404 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07473633 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065286654 seconds)
  done (took 46.215148141 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11054567 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082012368 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063591748 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079912362 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076082057 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081777261 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06376125 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064342882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08204482 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066937784 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063106193 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080978971 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072980123 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104775182 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093723604 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068030856 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080294838 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065408534 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062931128 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082093634 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073003344 seconds)
  done (took 2.417869452 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.087876443 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.100536938 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078133779 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099129135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072554114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097598038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095094371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079556586 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09952117 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075017681 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099726198 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095158838 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075618589 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092234728 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074984574 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093509332 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08302806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090060191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079082551 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09720773 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075130607 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096054121 seconds)
  done (took 2.735137525 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068807498 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067366231 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085401475 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06390128 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066728381 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080597051 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071312101 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065750694 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087603505 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066160917 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.090517308 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066888866 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068002167 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082437749 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067433747 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064558602 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13159186 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.088842014 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066347355 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085221856 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063942363 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068939096 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.080520328 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063241002 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065575644 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08896318 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068319191 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083105132 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067177959 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065983133 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084693007 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065590666 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068251089 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08604932 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066351989 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08442129 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06675915 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067821536 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079736555 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065614402 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068173665 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.080228871 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068755673 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067882206 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083627619 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065024552 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086589364 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068036211 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062351772 seconds)
  done (took 4.435431424 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086642885 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.140857841 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087538985 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103818552 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101232456 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093271883 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071614796 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121697466 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065747473 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084328544 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085254006 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102398895 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067270618 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090845392 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071080662 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083994305 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068626655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084146511 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071431469 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08338548 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072382204 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09198135 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083685741 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099106814 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071186623 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083887996 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066671754 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.089035412 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080286365 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089621773 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07255194 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0906486 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082884002 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090711705 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066814496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086799215 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084590402 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085230128 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069950872 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083147862 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069930218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088748776 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074797748 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102517228 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066988266 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090452928 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0669318 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.08207207 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081469459 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088095794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075809925 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099660337 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07180762 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085179999 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072356927 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100839403 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067970762 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083387221 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071597444 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096842605 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064881817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088581211 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081627422 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086780023 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074870197 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100716111 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071872163 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089018324 seconds)
  done (took 6.627353511 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077524726 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091323913 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082782258 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100271651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072670323 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.093482682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090920802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074225001 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090789263 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079829733 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092259158 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113962014 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069808265 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094201657 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075467677 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091216809 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074303529 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092373707 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074685881 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09189341 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074404205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100200805 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074347137 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101131237 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121905578 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069009663 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092011254 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074059974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100765317 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091612011 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086432751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091554765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073483762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10130786 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.103883638 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074772631 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083871752 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074143782 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091642106 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075250169 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086192837 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082642498 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091947257 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069652184 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092225969 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074390698 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101774326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104568355 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077811597 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096178963 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074750816 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101302206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09149432 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075574474 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101082355 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126461112 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081879615 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10067787 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075183107 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099544346 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101246905 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108536782 seconds)
  done (took 6.307199892 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089645353 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094513537 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078583065 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081016329 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065502064 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089706854 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06635589 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064924769 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093472905 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093609428 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079790812 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090038638 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075385067 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097181861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071467672 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092874925 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070717426 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090156007 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094062123 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072202905 seconds)
  done (took 2.46300626 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076666804 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103034465 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068770215 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073059714 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08848896 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073292211 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087758445 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071706938 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08617336 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071404968 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095114025 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078254214 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086631689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075268403 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096105191 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075012322 seconds)
  done (took 2.119128688 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080999315 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096414889 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082568451 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086528517 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065484486 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064216957 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086674242 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063830777 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08206675 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08364968 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086192288 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071399336 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067277353 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084702489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064474067 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087744684 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064640238 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064993601 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08508588 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080980931 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096855965 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066549241 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085858712 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070789233 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08693769 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072934579 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068138504 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084317754 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065375938 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086744447 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067731436 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092638403 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065762289 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066362471 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084484885 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064868034 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085581294 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067384896 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069600043 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084912046 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065851382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085252678 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068146257 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069001396 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082463225 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068401185 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081636162 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073788394 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065512501 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08620819 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067143359 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088117316 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068803639 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096444495 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071311541 seconds)
  done (took 5.039812366 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081620197 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070134299 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081289952 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066202604 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088702409 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069854809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07051888 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087602868 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069803991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082923249 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070511101 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069988179 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087919855 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07110165 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086392143 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071450226 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063235696 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086717949 seconds)
  done (took 2.189680032 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072321596 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067436265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092872384 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067746023 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085134017 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069561729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06282693 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084404695 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065578534 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06774983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085583445 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070498638 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084153191 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07058648 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067382518 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085652073 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070218038 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066106614 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08665455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064052441 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088232471 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066731828 seconds)
  done (took 2.452622512 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074155119 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093138203 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164170039 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107474236 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084170606 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099743065 seconds)
  done (took 1.43837821 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092669586 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099806511 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069106355 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087853484 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095414184 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06981679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088931924 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069017042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097918351 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100991429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070426122 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097522941 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080017743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100486888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094132969 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076980489 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087416197 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069538191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085283234 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090017447 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087155473 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077862089 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087776159 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070091531 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088545233 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079218685 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097218063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101379502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06985952 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097203454 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076057662 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087331923 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078696912 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101549096 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088859863 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079497861 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087673569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088540378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093810013 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096712916 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071579272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076202362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096576995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092039842 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07931212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087852496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075284917 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087988549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070014421 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114531554 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092380766 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078636922 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093144388 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077777958 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097679755 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113636984 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100621973 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079775291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093674123 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083618079 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095900889 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093336443 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078935018 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101629593 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094074427 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078673372 seconds)
  done (took 6.587768598 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083892203 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104817144 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070038484 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101864028 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078148568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088842439 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069731276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088295477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069479514 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087641516 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130040987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070458518 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096647231 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079531229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088603958 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069702522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087980215 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097048293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069940243 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114013782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06910715 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095522238 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096753878 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078672393 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102850986 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075104175 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088213887 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069495097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087916208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070342235 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093362991 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068481846 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09704909 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086351781 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078188213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088856559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070657142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093228417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070703282 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093185377 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079175438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107876722 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087904995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070369637 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102948056 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069002217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087376352 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069180965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08785369 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069035028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102133737 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083791345 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101844348 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096243164 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070771687 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088645181 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071023244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088445003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070378721 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094152645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078440448 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088211053 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114033975 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069972105 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087372542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079409514 seconds)
  done (took 6.460984823 seconds)
done (took 127.406980736 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20278539 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182934302 seconds)
  done (took 1.210859024 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069566033 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095953397 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09711184 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132061786 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086699861 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101474818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099426124 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099156951 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067945064 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086892636 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068521304 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069419197 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164926265 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068301351 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067667479 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.088027321 seconds)
  done (took 2.289157512 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095197273 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197573459 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.081926349 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.084920902 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.071750776 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088531457 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066325299 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.071987876 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089789601 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066396395 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069732984 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086472339 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066360156 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086952493 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070658453 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069510448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.084895287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071174649 seconds)
  done (took 2.338098346 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093874051 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.106104391 seconds)
  done (took 1.026122473 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198144093 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121821969 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.2037476 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41782607 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.243247522 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.273817049 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173131459 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172558915 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154933974 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.167577448 seconds)
  done (took 2.951547105 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101929712 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161145536 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269895939 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135546062 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107566127 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.086979439 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136286421 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.109130218 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084011801 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100878094 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083008612 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097759 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098011106 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095105126 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075284907 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096708184 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120075245 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075156363 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076217737 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095835589 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097481192 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.086520089 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076923803 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093123917 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079874694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09898211 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067469652 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067521811 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094969481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074609828 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093218523 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.103297893 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080632132 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130764644 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101113879 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132930203 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078556752 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090873907 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076799573 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090817605 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079634689 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097676621 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.085844276 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096405818 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066437826 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097592769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06794151 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067074111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094276253 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079246578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094400323 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074408895 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13215847 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097876834 seconds)
  done (took 6.077187995 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.753901287 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.133140017 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073575466 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.816906544 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1150669 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084610465 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.736486549 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094213239 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209170708 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.718983061 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112569118 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078296338 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20694463 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.215605778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.899436778 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290391043 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.587660577 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104349439 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129319968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112098767 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099193323 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115355451 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091935908 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407473595 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094249257 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072137078 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.078040444 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098312249 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137244911 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103720868 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075865835 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154688209 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225182371 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182205716 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076919365 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092369428 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071981478 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146778584 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242202715 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170081734 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159866894 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08735373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071791748 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.082060263 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111897208 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068437381 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161369053 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151545132 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148930656 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074199184 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098134024 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0803471 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100170286 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142365426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080199702 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290219027 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.295861246 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071653326 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101649759 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086644237 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235763635 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083218698 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200019285 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118212358 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166385017 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091279906 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.736447235 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145713998 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09104953 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076603901 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098352467 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075888613 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099253863 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.126152501 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384205268 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102524923 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073902291 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090310882 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.184979061 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10347299 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072377572 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139656436 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074835565 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10135476 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101572505 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084897518 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145944262 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207864279 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102490703 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079112296 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095462406 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084832695 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094492793 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188672692 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193676021 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140800549 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187951073 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081958247 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138971115 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164739713 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080780215 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150758765 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100171538 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08280696 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101407746 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170253839 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123591506 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102530185 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075247843 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098017427 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127492176 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08721121 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098455056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148456125 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.433508028 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144402634 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088616175 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088034631 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100619784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.142524532 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077344937 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237638364 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082346259 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146478822 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09919097 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068672012 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100094539 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140216784 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081716151 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102183996 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099701944 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079821207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212609414 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188737544 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081790407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218258217 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163404145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078660751 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149168883 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100985045 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145093979 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079029332 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100187415 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074560713 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746208031 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.083531 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099214464 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074924743 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165270744 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07181957 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104519608 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102114678 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068463645 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77197185 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105768398 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099275134 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083345025 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095683907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.079567951 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096663623 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074469301 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138897024 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205150194 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078829662 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099720134 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083143005 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158315195 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076742462 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104115039 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083177438 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103281159 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.081164609 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093402351 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085192041 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146047321 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141828922 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192615772 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57176129 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071815516 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084140445 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20282801 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091161934 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.243585691 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099369576 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.180956729 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141593272 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100181249 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294152517 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144004792 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165716133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086538461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151521519 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088794341 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.078306975 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141156071 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09112866 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078192576 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139320074 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103788141 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082417335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.942191777 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072751763 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204671442 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088728809 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149004031 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075308744 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099081794 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260087908 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072313817 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088031482 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164044528 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07474601 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104078818 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.82296009 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104076451 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.082281512 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096052616 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175084407 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.143700451 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099520648 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.079317222 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098779277 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139481177 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185883788 seconds)
  done (took 38.38171852 seconds)
done (took 55.102284459 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23110811 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193767784 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.223001757 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148217296 seconds)
  done (took 1.736386773 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.130130692 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.126894428 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122237494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06641658 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.129201456 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066123221 seconds)
  done (took 1.491123172 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312864119 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268345066 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.201104499 seconds)
  done (took 1.631784986 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266230009 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.220842091 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443377155 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.276872521 seconds)
  done (took 2.179685647 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.186192413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.110152458 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068750673 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104929208 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.151651416 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.219398629 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121000182 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173338579 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080019203 seconds)
  done (took 2.112381416 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151103327 seconds)
done (took 10.147811951 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.219146799 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.158048915 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.127689984 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.102312027 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10289449 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.229332192 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.200528025 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082467111 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095568563 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.22876476 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.22546541 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107714177 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101088394 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109892415 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098890039 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07660976 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098223634 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208568961 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095429508 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101068421 seconds)
    (21/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.160289357 seconds)
    (22/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.182235331 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.234814095 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.141760278 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067817979 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.136251596 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078903453 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195412694 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088166856 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.153587427 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154665072 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089255291 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124715507 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.126417046 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074500329 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.227614362 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114545532 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06294767 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.206226798 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084155821 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164172941 seconds)
    (42/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192830123 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.213269963 seconds)
    (44/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110896884 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.164335101 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075529938 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115125371 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082254706 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113536221 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.20231109 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073371084 seconds)
    (52/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.158889452 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100111142 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.132924717 seconds)
    (55/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095455991 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211292836 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.170009368 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097442733 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074258543 seconds)
    (60/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.116397637 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095351671 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075067417 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.1033197 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077202006 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075988138 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161007315 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.22000401 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121878597 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052617523 seconds)
    (70/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053321668 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.128221674 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069916801 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068494542 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.189556851 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096372304 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078910879 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126804831 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095589264 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.111147569 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089838955 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067938563 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078112984 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116783014 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.062841296 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058537746 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11439024 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.16517652 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071457072 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.148394692 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120356756 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.133171095 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.187160809 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137692046 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.068062229 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054524652 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073992679 seconds)
    (97/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.131022955 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095335669 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180491933 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138098712 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067448263 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073337048 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089210788 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.139642977 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089465705 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195472754 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067958386 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07781101 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.073468654 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092653361 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05428374 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162397375 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110849814 seconds)
    (114/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076369641 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097154095 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098372851 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.166552024 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 0.165076946 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069113503 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07482837 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161490027 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075705248 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.14038886 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169586576 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.139415471 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075062345 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.348090635 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161896595 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053679917 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190776226 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069889506 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.18226783 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088006759 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.153027757 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.15852891 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096840624 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052630444 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074884742 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.085269771 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.120806202 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071578036 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095662749 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061822675 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053210046 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085988288 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168121152 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0931282 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.133696569 seconds)
    (149/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112361459 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052085553 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099693158 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074559714 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098174182 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053845116 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054430956 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06669852 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095676832 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068234176 seconds)
    (159/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05328069 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.073268449 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074496297 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054430682 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095819173 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073741936 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198612824 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095766387 seconds)
    (167/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092770511 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068396755 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066343026 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170159077 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071435825 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.074317223 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147426074 seconds)
    (174/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093685732 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08194811 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078430033 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090517778 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068643791 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052281519 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097049634 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053293041 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072888804 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116651072 seconds)
    (184/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101041971 seconds)
    (185/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095918526 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076799315 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076576584 seconds)
    (188/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134391015 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053621289 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052964359 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087924889 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073414815 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089543757 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172242289 seconds)
    (195/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052665204 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086929857 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054059657 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051959421 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074380335 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090981284 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067122731 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0880383 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067151257 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113801771 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054684327 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075957469 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096175233 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052990656 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067021665 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084438329 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053739866 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075308316 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.081772059 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09286061 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.12137496 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073184178 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07245906 seconds)
    (218/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.180481665 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074122268 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.075217358 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068154277 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120239103 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053039597 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065907881 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066829659 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.152050456 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076982955 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.163647069 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103001862 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067662023 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073894456 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163344322 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.1056268 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112572474 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15665642 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138450572 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.0737609 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092230231 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085020505 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092150175 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067186726 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076296591 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066726078 seconds)
    (244/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06183639 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052890318 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088373032 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054225395 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070330941 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088070872 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.148961326 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075376113 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09115121 seconds)
    (253/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083642104 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064078363 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068057877 seconds)
    (256/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.161094406 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063852608 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053827779 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095435912 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067157797 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067715041 seconds)
    (262/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.084524758 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 0.128095356 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090906413 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101139212 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068413181 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096918974 seconds)
    (268/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062900365 seconds)
    (269/309) benchmarking ("sort", Float32, false)...
    done (took 0.15110762 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062288957 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08493483 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090406169 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055513832 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052786181 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200661456 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066980886 seconds)
    (277/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074425971 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05339664 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054153146 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113168938 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076046809 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089098111 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06680901 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073472527 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11362199 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063262835 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07488176 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09712846 seconds)
    (289/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074698998 seconds)
    (290/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06609206 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.073263499 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072605776 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169445323 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104046695 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075742297 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087933626 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075486192 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.083561712 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052162942 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089481679 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09003954 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069221205 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108913153 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072874815 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122753065 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054141576 seconds)
    (307/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070958753 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053981932 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075570917 seconds)
  done (took 33.081539172 seconds)
done (took 33.938042855 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.07943911 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091040227 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096852706 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091511859 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100185041 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077220681 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095250619 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077736825 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.100761271 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081923017 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077417508 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.076863782 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076922907 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.096972115 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077543466 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09086518 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10151177 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07376065 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.096315498 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06638918 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074850428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087380675 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069268027 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055370504 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099329258 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074792446 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093498503 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076143538 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066789083 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088061658 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070299297 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074502345 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087938715 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080639448 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094301009 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07557325 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07777311 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097939483 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069234652 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067507894 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.095525593 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06702248 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094689219 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074684678 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073650061 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093317044 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075306027 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099852206 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092769668 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069355462 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097138666 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077996854 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097051755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074020253 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070918415 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097338596 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071986856 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113811277 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076820796 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070246372 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095979623 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075714445 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072326064 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098718367 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075809493 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100194361 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079141303 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07300678 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100643658 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072516979 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087686083 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076086928 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070939553 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088995099 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076062098 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078910271 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087794914 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072765469 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095284434 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072932315 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066780188 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090263077 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069579042 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073810874 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090256901 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056479003 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071334498 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093883205 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067846157 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076271412 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09455124 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073072641 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07003718 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100354838 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066998897 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093773626 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068261689 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067518964 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089534717 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072133807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06759715 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090838397 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076409154 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069367907 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094487584 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078356604 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067510472 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094251579 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066044054 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088068479 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081443575 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07718671 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089021465 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069741514 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066998282 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095924292 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066661303 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067799857 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087864163 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067901845 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093789331 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067588115 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069446653 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0956495 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082335724 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066822813 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.09263314 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069129398 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067293274 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094116907 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067507194 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067705868 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090481062 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063981978 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069856428 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08867273 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074946114 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071879778 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096852219 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068706091 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09697736 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07257582 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073789388 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094411416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066990701 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060244211 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090685043 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069895256 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069262412 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088189019 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070039457 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06717494 seconds)
done (took 13.139875978 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067942296 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.161697343 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.106728137 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.119533712 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109457621 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068074528 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078699859 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121801129 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068890157 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120550385 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112271249 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088110516 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.125084278 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067070618 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067735639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093570062 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069317826 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08208222 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123988849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089039067 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139800319 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087699088 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.102645394 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.112867467 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077180076 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106936704 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068201983 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092114415 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071236629 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092953462 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110076593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070444722 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089382831 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09347276 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084622691 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096987717 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067771564 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095824253 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06742984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067285096 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117902363 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.111371999 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.073732615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072720474 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093783597 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070507553 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069261627 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098014318 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078500677 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092641474 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082656737 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133264946 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070831786 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099806074 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067065987 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099724052 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077190689 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070262506 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088984583 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069727482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066942975 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092808029 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082273002 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118749571 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072181426 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097820144 seconds)
  done (took 6.906841685 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084419427 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094089876 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106490325 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085385692 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.089280028 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068858638 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089274433 seconds)
  done (took 1.528723528 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068435062 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088962768 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111604114 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090186592 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109154678 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088997437 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100366993 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068925808 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.085948301 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091385308 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08894913 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128975649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069613686 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097303753 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092527385 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068557234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11442686 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068206251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093521399 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092079396 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092406219 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089294065 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070110712 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.090203842 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081978785 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090373406 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116593535 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094953406 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070103512 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071735954 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088556204 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.117603614 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104066263 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079399305 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090430364 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083101186 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.104236514 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067565945 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084246628 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095806792 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082224798 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069205951 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091551031 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066597282 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094546803 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078634429 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070057164 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091528192 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072511828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088439381 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09132048 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082568611 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090542748 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073146556 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072170878 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096542388 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077988012 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069356026 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110144972 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070196082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106607886 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085299251 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103760396 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085572051 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071660974 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104745933 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082268284 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092874291 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070859062 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071978583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107049903 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066132612 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069610696 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100932205 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069975076 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113211118 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090948617 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091863894 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078915642 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068738709 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091056797 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068665928 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091483469 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094638023 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068982264 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09476261 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071227225 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066898234 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088949995 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072291569 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067190176 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092308964 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071732911 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07005612 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093790551 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085473845 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091322727 seconds)
  done (took 9.267016777 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069196523 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069694956 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092054033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069899447 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069345086 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092104655 seconds)
  done (took 1.379391867 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093379268 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092924702 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083654008 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074756717 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.132263606 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083248064 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105598538 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076384902 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.11016146 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081469178 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.106227722 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084606989 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.110686654 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075508296 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104716632 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075286457 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105385125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078858728 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102081399 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076117058 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112562955 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076428734 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075002539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106590082 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0731149 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096920964 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079575799 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104142797 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082371443 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.098896392 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075719401 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073019185 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096353456 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076652537 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104985828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074210758 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096061895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074438071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101735422 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07288882 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08383667 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098143778 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081490635 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095861097 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076683403 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096237612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074015992 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100899362 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08316959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095537381 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073976067 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074390658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094639161 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073699028 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096166372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076940837 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095088969 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084491348 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075382773 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096749115 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072918251 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094684738 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077442339 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093698154 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083734639 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094876202 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074453973 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076587104 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098363562 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07470214 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095505596 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072464591 seconds)
  done (took 7.262003094 seconds)
done (took 27.250713493 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.635713748 seconds)
  done (took 1.556179838 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.678790972 seconds)
  done (took 1.605195887 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.673450552 seconds)
  done (took 15.59595725 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.450839274 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526441902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.773831012 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15642047 seconds)
  done (took 2.825519967 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.852423622 seconds)
  done (took 1.789341162 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218026646 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.205415373 seconds)
  done (took 1.348506394 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714225506 seconds)
  done (took 1.646335107 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.285377519 seconds)
  done (took 2.213955208 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.301137292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.137475719 seconds)
  done (took 1.377844282 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523423024 seconds)
  done (took 1.459102925 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.267796258 seconds)
  done (took 7.203645995 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211224722 seconds)
  done (took 1.159214271 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.260225778 seconds)
  done (took 1.202764908 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.056981531 seconds)
  done (took 3.994138285 seconds)
done (took 45.905397293 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079228728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080871343 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10199627 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079009213 seconds)
  done (took 1.276711561 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079767213 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074896035 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100859614 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073493186 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102686738 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074662129 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075815938 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101747781 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074454327 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097041076 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074884131 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074386452 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098945134 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076406072 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093764221 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078323727 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.0999231 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074805281 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077954772 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096968238 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072347401 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098867832 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077965998 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07276499 seconds)
  done (took 2.966627171 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077488009 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073511284 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095978721 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0724394 seconds)
  done (took 1.266833621 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07854591 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094585703 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113363008 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078629028 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117626745 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110946999 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071282668 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070983864 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09486176 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07938966 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069685063 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124264756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112362333 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079007263 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08080577 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090712065 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070956396 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111748427 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079348389 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07828699 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094019305 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078877333 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091735294 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09321144 seconds)
  done (took 3.111197806 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078806071 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102670835 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102596858 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091119335 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115514976 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066464384 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099254813 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093321449 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150563357 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066822216 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094402242 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066759793 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074328276 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.088994577 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078163692 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134731927 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114546028 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.092495474 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097077718 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06776804 seconds)
  done (took 2.826245176 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077605125 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070311189 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088878431 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070312884 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07781641 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097247562 seconds)
  done (took 1.433936351 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069990559 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068842036 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090405981 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068670237 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073507106 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090358841 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068129148 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068892022 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090762004 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069351432 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068601891 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089577346 seconds)
  done (took 1.864865443 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.450370306 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070664845 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.091622776 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067989705 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072165793 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090196086 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082814025 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069414021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115219147 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067903371 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091737568 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069990152 seconds)
  done (took 2.288339418 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211703413 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100305229 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236851322 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16371122 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132719239 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144767133 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129020202 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140151398 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1725717 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132466755 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181019524 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168551904 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126134995 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166067439 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113553673 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102233816 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19590564 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191899529 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129022474 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17948599 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172644196 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139570421 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152574321 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126133773 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090011177 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143869982 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095987012 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082832945 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205038633 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152357584 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163988346 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137986825 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122240255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187806143 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220473426 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169264021 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161292613 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111130994 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.126601458 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.140537478 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236027014 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090455422 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205295659 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134579913 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083656839 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166401179 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14219695 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148108964 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.124021151 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113186866 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170316033 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185181059 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189637865 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089287037 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134928067 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134447705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140855574 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103099322 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219197796 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171872323 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152957865 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09524428 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097500495 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163995562 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154878595 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13978054 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178116798 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097232136 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187374392 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160171423 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138024189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164837723 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.158389809 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113335252 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144440325 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124889422 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14287328 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224467337 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153017031 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073055259 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139642836 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123283323 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104929116 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145637309 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099377856 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187390753 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124078608 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.091223931 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136682417 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134145824 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113171406 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194524715 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164522486 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12088235 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068081682 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128841361 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.106258199 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186074221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091436336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134430235 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134394467 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080670635 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15065381 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098138082 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149872452 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074864175 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148747613 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156033734 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102103275 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131568241 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103802664 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122979382 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149294642 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172349294 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114251327 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085609287 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179762887 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149552623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123667899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153674403 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173193358 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122776752 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124077385 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172303774 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191343315 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114642511 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175622911 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128577506 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108835763 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090588439 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151307366 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131041582 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136383963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083495315 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153418012 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205582272 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076284481 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111991081 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161311548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084058146 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105800348 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133584244 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099524449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114310379 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120523676 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102218765 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153826257 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174397872 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104046667 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13849164 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124752432 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221225808 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092205347 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12366712 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121116283 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072394058 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165854223 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171337406 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105087988 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174946363 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.144356151 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129513608 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144929641 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085761551 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149425431 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08130827 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095325607 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166054034 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140795022 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136340784 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.168199976 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129422708 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15533964 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154508572 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145289908 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14698138 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138206825 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110219255 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112235978 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13243606 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140780199 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074734498 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117008467 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084582903 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131161245 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116905158 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086203087 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170255127 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141362905 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122026283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132113302 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099448694 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152595116 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103925032 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149256083 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148421612 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120793832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.171442503 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166286169 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160186141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117404157 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179015272 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096141642 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076847743 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116063387 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144375282 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085294499 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110567939 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143953365 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132202498 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179736112 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150047106 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112675372 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14774257 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161524806 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096598121 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118752624 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158294179 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14880403 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153561216 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094020736 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.122581071 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149750015 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129415578 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198343571 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139009913 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148728237 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205772174 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099665849 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106814499 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123809289 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158752018 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128944855 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149600703 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097390136 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115361189 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134555267 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083574596 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133149514 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158058151 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136353862 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162718129 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.126274161 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155064467 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101957728 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139840369 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10829891 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138399394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06449548 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144896824 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199146658 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121419292 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143291269 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16501658 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083178207 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149834572 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183150697 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189471831 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088294828 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131068026 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134358572 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113898232 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144804173 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149443218 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134066369 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160952632 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131129393 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.0868252 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113267871 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123306297 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101707143 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.11228713 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1224081 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148798185 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.089862669 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16032057 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133931872 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131612205 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144219727 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100178549 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118994983 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124621181 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18991513 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148577746 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208416561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098967462 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150732892 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177510359 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100720899 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081925287 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108335615 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15010437 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085336391 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161646613 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.122317706 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129967897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152847494 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164737477 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090395423 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094056332 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129422466 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123408489 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138016853 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124218213 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132126317 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178190745 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120428872 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081951613 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144271652 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130597119 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097487879 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169535962 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087751701 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09809249 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102161926 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083509145 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138240045 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176875112 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10946748 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150864352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119849365 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140361689 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137801799 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123321358 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122199696 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114942107 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199026882 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159186351 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.082536131 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131593015 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1503866 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166915705 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134494378 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.115007553 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176001654 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166112762 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.170563067 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11607429 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14029528 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117835237 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129237492 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156601621 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108879729 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176954494 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108932962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169006683 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127433159 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117039031 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147741429 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098213895 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115349056 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159836611 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161836931 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108858288 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082676409 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140542063 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150117982 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128337267 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07769756 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153041022 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098951771 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161868282 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227951922 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084601247 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12619947 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096898877 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109132721 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130558189 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132155107 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090282338 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.132737754 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177915261 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108318042 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16334823 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174963818 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141778413 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147899077 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117796771 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666327712 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080750275 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166942866 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128895555 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17718764 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1242508 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144851731 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131241078 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116856973 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192467403 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132979354 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180761336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189509754 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150875383 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08187175 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131145861 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134493328 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118329801 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101541699 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140695924 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133266484 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125919692 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150456513 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141447091 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083322448 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114021433 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170081277 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12879706 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159882838 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151844842 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088337616 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145189117 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156144483 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108252638 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153653664 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178152856 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115332938 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124161638 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082835273 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.128312949 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229889995 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07480639 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170569732 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148943704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131295397 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139629944 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120684712 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16282404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132025376 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14909601 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095670372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.130812027 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130466331 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111020669 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079819026 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128183147 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139791896 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097121421 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13089676 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.113836769 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182839577 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073389014 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117793485 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105428545 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160781609 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211158185 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090587687 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109246956 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134683344 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100286741 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148010319 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148885941 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109264933 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083883732 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109508548 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.109958559 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115307739 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126608429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105079303 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136341575 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177061273 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111390503 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252940915 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090351161 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127793854 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072028999 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104925723 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10000603 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119647251 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130111655 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123212301 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203118971 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119712105 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.082431313 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120593943 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075319838 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109638395 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139538955 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114288713 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150681531 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118558249 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063785651 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131641499 seconds)
  done (took 66.039871674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136526184 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102834095 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.1188654 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172970902 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149176314 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240412009 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18187831 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223993779 seconds)
  done (took 2.347646365 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071483416 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118113769 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10168268 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109013661 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068170679 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.092034657 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300600107 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.106161055 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067867918 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090254681 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.142009433 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070898181 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.474346523 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06737282 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093509062 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084501194 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068992322 seconds)
  done (took 3.141593686 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425326149 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.579662158 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.462727887 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07403558 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.683511504 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106296265 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.036448785 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.155737721 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089905778 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.400599792 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.730049975 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128121957 seconds)
  done (took 16.892233576 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075861897 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071809597 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108155833 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084255235 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074020804 seconds)
  done (took 1.442594727 seconds)
done (took 107.833516571 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081153481 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.356316106 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055212293 seconds)
  done (took 1.467365018 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084182883 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08537218 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110225612 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084236066 seconds)
  done (took 1.391039762 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074272734 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076314957 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109242129 seconds)
  done (took 1.284230855 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.29120786 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.136244583 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.113302294 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082988828 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079652382 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10320386 seconds)
  done (took 1.291774329 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072958257 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076455556 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097809207 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078930987 seconds)
  done (took 1.348745177 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07633969 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053850223 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0557361 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080391177 seconds)
  done (took 1.294409019 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089824437 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08033764 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105489444 seconds)
  done (took 1.298353582 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106359071 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.110461898 seconds)
  done (took 1.243924431 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081637091 seconds)
  done (took 1.106124415 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093491243 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14186801 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.162639519 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136447957 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.171222289 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135919697 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089391005 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115554352 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103685098 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093333818 seconds)
  done (took 2.271397869 seconds)
done (took 15.641490329 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079271025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.385669152 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362311272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117160293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669929539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357709296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.028716971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118798273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109721587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09265019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085563639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650080259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983136575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316158787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970326617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.410004557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649153996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09348958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069420493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093643758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989790766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069745684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092952815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069442544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649200203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396836492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070427081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.433373831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069531591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071483848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.379959148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069276104 seconds)
  done (took 16.023574435 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071321094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14398189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076280106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088316919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095998228 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071113877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.096641337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070581345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148209715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070230767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11048594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068328911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073100083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094986627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08906566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069660224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.093734788 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070951017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092863107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069212883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08751315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093366382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070565547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092547392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069852394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08169908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093628467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070454908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069872429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094935689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072429341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093954487 seconds)
  done (took 3.789317349 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116769267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154311215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076286971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127841924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115690623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096123296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171672855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094231223 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150091975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069783067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110099325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069980018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125900664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069567975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089514106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093465272 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071189337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093592691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069407837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06971435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112131971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070057678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093520823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070010951 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06958436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106308891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070796803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0933141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068755251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071325227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096988618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070429626 seconds)
  done (took 4.059820403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072751772 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076381338 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108750514 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086464209 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071522915 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.098182897 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074926703 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095646398 seconds)
  done (took 1.721653336 seconds)
done (took 26.621116373 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079879215 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072483731 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099419707 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082661516 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074635514 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.103963416 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068900036 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10055326 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076112005 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074530682 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101626416 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070124818 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072911834 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093024813 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076433043 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09506858 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080581526 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073495339 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10445941 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080679927 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071256363 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101571474 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075565208 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.104771488 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080037169 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104640441 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083907661 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075396964 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.095133381 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0721239 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077177686 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.108728843 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070578049 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10470186 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070617765 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069489516 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.093374069 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068703707 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080060927 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100909483 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072736471 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100964227 seconds)
  done (took 4.592028149 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088408041 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092586483 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110392506 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064356951 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068950209 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086726233 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089686303 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086710501 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062994058 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088392666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081606953 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058712874 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061798996 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055532762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.083820505 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057981659 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061588833 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057670335 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.083951349 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059683631 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06204231 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.080129963 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06120955 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061347295 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058270442 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087553235 seconds)
  done (took 2.952143237 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076495486 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083792916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114128847 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130779112 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132512496 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076696541 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104522875 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08850798 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110998736 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069460383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073203647 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122498294 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088770933 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101614226 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069784187 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085016832 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108918635 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071882303 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075913623 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114314371 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085756684 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104080073 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091118567 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106322491 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069258421 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072153115 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098610498 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082121811 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07411686 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.103702554 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074673891 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097570711 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072283127 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08133138 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.098900577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070710113 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.114223438 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079744964 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078998114 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.094733748 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073045445 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.095021489 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089863972 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.140059236 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068085074 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076002934 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.101809468 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079124259 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069602581 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112202012 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079840889 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093218385 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07242954 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068395745 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09372205 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083185047 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07068456 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103943575 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078910014 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09690932 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08218325 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073152814 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110920998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068844483 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101823883 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068852169 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070916068 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093186698 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091269631 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070693643 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134271756 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070952324 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095555369 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079021563 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101197685 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076275098 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069761576 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109910964 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080060739 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072848815 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103133773 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073215592 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098352052 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087971859 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071970902 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09569962 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070746288 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07643356 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096916115 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071597406 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108408828 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06993513 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072691982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112353909 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06894498 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095187412 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076085432 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074731947 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09308325 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082202153 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099823539 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070012154 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079318789 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094479938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071952226 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078219543 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099233361 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068257477 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098880042 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075720349 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070191119 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09535516 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072351701 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070574206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104332712 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076376901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099342286 seconds)
  done (took 11.28916861 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.196795712 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187384187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071331093 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178107116 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080870463 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106376101 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181906801 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099988806 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095231238 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070394554 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070181746 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133510353 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.101525894 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.136811902 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103460961 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068682375 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08830701 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134278193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182835814 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176733977 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088914969 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.104590819 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072633442 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071097868 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.097855295 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079437047 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11113786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081634685 seconds)
  done (took 4.224373476 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083306953 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127252399 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076049837 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092214869 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118814355 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070058847 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098647954 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070949164 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107942255 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081711071 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070128473 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.100518655 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076469704 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.103399669 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070415415 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078495651 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103555087 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070778881 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098336141 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074000494 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075968524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108179919 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073075077 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094738605 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076124403 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06926966 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09269489 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08853125 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094588437 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090554577 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.09280599 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075993763 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079611871 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095624428 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069705294 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071643241 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.095980849 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070678252 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.096603866 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067832215 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067923093 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059424431 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.093485643 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083215545 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09959988 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061029079 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075734968 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099375561 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07393484 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.092234107 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071976858 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072780654 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097710256 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077169103 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074518198 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099621421 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073309276 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067056255 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101055518 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071272501 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065704109 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094142617 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074613889 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094534149 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076794167 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075093179 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09378017 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071076279 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074353911 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101977889 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072077337 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073123136 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092276712 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071821386 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101129122 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074287726 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072720183 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093393982 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069523772 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072992112 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082245492 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069286863 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055577359 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097868094 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067871075 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068277641 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096205682 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075564005 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108336974 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071653428 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075130699 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096046495 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068035972 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072394938 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089227713 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071947416 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109792824 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086487555 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094740599 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06819511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082340786 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10057327 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068174575 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057568609 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101440813 seconds)
  done (took 9.77522409 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.091252993 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094621262 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095937418 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083210293 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121545011 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092074738 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102412692 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07588916 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071413304 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112341835 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070253707 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077805724 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.099416523 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079587881 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.118237904 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07784983 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071831507 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103954218 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077531991 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.130615231 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083007967 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08697202 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.104928453 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070280406 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.100218265 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081656695 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.0965879 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104955139 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078952439 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.108681271 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079203293 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094521348 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109860606 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073530897 seconds)
  done (took 4.181026056 seconds)
done (took 38.04320662 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.116010425 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.309512877 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.10577663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.887903447 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.121080407 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.103789081 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.11591641 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.107341372 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.313245863 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.107371429 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.32869478 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.575217418 seconds)
done (took 58.245503512 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.185941382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.242697358 seconds)
    (2/2) benchmarking "String"...
    done (took 1.375352831 seconds)
  done (took 3.667563212 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.496149732 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 4.996840765 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.389332833 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.103871667 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.116496001 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.54860901 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.480671137 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.855080474 seconds)
  done (took 26.539700864 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.109252118 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.415031181 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.943011385 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.943354873 seconds)
  done (took 16.459334426 seconds)
done (took 56.400294472 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.08868555 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.133563829 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.116839165 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.088219686 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.197100538 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.113727817 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.368145005 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.3425246 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.104058973 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.094559893 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.103651233 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.115031985 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.120420627 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.354950807 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.11386577 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.116111503 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.162336857 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.566714385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.436412325 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.118780397 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.109472052 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.104455518 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.109319985 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.11000778 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.108690611 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.115284758 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.103632289 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.117527436 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.793483686 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.101155695 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.165396298 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.480808292 seconds)
  done (took 187.32531297 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.093395796 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.009352511 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.116476632 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.109015906 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.501011227 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.291812636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.226894162 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.572842975 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.103652996 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.092787099 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.306125066 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.09106958 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.334516821 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.077429993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.099264949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.09772267 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.312632569 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.359977661 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.112454088 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.36143362 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.116392186 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.189596214 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.127051346 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.298236877 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.138547302 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.183984384 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.128616821 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.122880444 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.293911906 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.256337852 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.125091098 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.109946201 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.575567471 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.957529932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.102172479 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.110449405 seconds)
  done (took 145.147934553 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.333699868 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.099573127 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1022776 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.099211123 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.10115124 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.124471001 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.099782941 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.542961584 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.545467437 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.587663281 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.413902399 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.100878797 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.156754928 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.241695575 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.101393888 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.189017216 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.108076244 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.096774162 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.115119857 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.127412263 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.096093969 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.096470432 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.541920053 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.108294692 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.258757731 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.108883776 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.102431547 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.125063066 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.490783289 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.098198188 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.100262968 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.125275784 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.401581386 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.131634421 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.097148147 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.303986799 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.941427436 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203519445 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.101440024 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.127073289 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.10298189 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.359736404 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.103178374 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.101339187 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.104966275 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595683633 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.102668163 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.547416902 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.103303377 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.914929222 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.10352711 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.102720086 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.346358842 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.396162037 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.103563312 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.102752906 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.101947126 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.103939195 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.101939707 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.10291114 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.128303259 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.352459963 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.194491882 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.103415416 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.106080794 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.122420199 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.100929472 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.237642934 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.096519527 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.235413052 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.159699623 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.209035178 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.548564004 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.097657837 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.185957795 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209890526 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.100405622 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.097981607 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.09934807 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.098920001 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.202311495 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.095810173 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.438311801 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.104418396 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.101260949 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.158640642 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.192218726 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.100341543 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.323535387 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.102681521 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.102388459 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.729055609 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.19297985 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.099961905 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.103839627 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.100309452 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.448993754 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.542665625 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.178345105 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.105241398 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.369397233 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.105566254 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.459933103 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.536532061 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615415684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.106806136 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.203802255 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.104895278 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.103577654 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.09940475 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.128970044 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.102677174 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.158153625 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.101049167 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.489000725 seconds)
  done (took 330.760735038 seconds)
done (took 665.616576668 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.790456998 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.73737169 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.855868039 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.751271631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.736286909 seconds)
  done (took 9.919519142 seconds)
done (took 10.968194864 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.266656432 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.266990352 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.154590646 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.268660612 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.128405211 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.27971823 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.244812731 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.126286023 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.192945126 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.1699113 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.21572448 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.147418182 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13074738 seconds)
  done (took 16.643675651 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.404124039 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387578731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.167747873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38724633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.145762603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.399048887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.292647159 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30074419 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.291835 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.118693343 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.118771598 seconds)
  done (took 15.064927572 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.413527294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.395358007 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.170368954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412417862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.145893959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398833233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.305665285 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310317695 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297693947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.118536727 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.115943993 seconds)
  done (took 15.134836778 seconds)
done (took 47.890501772 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.114298797 seconds)
  done (took 2.162822738 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.148048393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.29784412 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.128186126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.120303799 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.112801672 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.117700383 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.118639468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.114698199 seconds)
  done (took 10.211112841 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.11036359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.113009957 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.109923503 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.114070086 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.113247974 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.11155026 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.109500618 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.109477597 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.111619079 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.113646759 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.11234188 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.114062437 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.111652274 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.11055857 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.112887111 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.111868339 seconds)
  done (took 18.842607306 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.11060183 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.10885986 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.110827927 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.111475148 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.113210205 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.112439166 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.112331092 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.111425764 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.113393632 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.110987146 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.108642753 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.107870442 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.111142421 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.110636521 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.107816958 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.112681942 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.109515405 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.110528991 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.112812342 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.111252339 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.111363024 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.111335937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.112590963 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.110550426 seconds)
  done (took 27.719843707 seconds)
done (took 59.987206875 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.917086654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.444406588 seconds)
  done (took 8.412691779 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.11454814 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.113870438 seconds)
  done (took 3.279474301 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.117912818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.115611866 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.115040684 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.114251326 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.112934488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.113432705 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.113152616 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.11252072 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.114648651 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.111293782 seconds)
  done (took 12.19485123 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.113695559 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.113577862 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.110762631 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.113109725 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.114048028 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.111882112 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.112892616 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.111891527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.112352202 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.112177928 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.114952937 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.111908368 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.113414326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.112990445 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.112368279 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.10916297 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.109504238 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.113886701 seconds)
  done (took 21.078742336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.115630893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.115123191 seconds)
  done (took 3.282408344 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.112362661 seconds)
    (2/7) benchmarking "second"...
    done (took 1.113319199 seconds)
    (3/7) benchmarking "month"...
    done (took 1.113301141 seconds)
    (4/7) benchmarking "year"...
    done (took 1.112558347 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.113903716 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.113452099 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.112595113 seconds)
  done (took 8.847385623 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.11766314 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.288278781 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.361531689 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.675639059 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.114529358 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.119103659 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.992043525 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.120264636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.120485745 seconds)
  done (took 12.960208003 seconds)
done (took 71.1070001 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.065758085 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.106693532 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.84487532 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.111030398 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.128358264 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.450490705 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.105715605 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.225603311 seconds)
done (took 36.093158111 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.122469407 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.772644218 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.780369522 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.108071572 seconds)
  done (took 10.717933266 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.096252808 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.930790509 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.095249259 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.034794969 seconds)
  done (took 17.209513321 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.649747243 seconds)
    (2/2) benchmarking "read"...
    done (took 1.444190562 seconds)
  done (took 4.15194273 seconds)
done (took 39.257804706 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.113149078 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.111110006 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.115588329 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.110900519 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.114785278 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.112793014 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.111053233 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.113482715 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.113547354 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.114478136 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.117814464 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.11426803 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.114253221 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.114037097 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.110350794 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.115516053 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.115381614 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.116326695 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.111384657 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.113170332 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.114414265 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.113753465 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.114995201 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.11513831 seconds)
  done (took 27.787522525 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.11426893 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.115881492 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.114203323 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.11573719 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.112377358 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.117893309 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.11696636 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.111296593 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.117423355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.119200964 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.112390251 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.112777905 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.118009725 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.113768898 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.117227237 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.113024415 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.116359754 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113513246 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.11536293 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.114583205 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.115714882 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.112501858 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.116951806 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.117736293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.114436855 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.114442597 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.115383201 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.113327391 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.115429332 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.112656749 seconds)
  done (took 34.508817166 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.119537735 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.121119536 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.11834296 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.1154487 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.115744135 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.119679917 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.116520296 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.115124634 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.119611042 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.115616799 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.118386966 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.118568423 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.115511676 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.118111599 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.116387642 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.117886888 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.116589646 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.115503308 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.116923092 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.116114159 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.118828002 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.116167535 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.119227236 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.116364667 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.117139151 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.118937006 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.11541095 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.116629874 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.119367711 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.118179971 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.120080306 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.116148344 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.119702932 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.118688338 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.11795534 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.119509861 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.123247686 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.123622835 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.117606723 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.119520013 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.117170857 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.121548696 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.118752344 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.117371217 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.119938403 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.117855484 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.117523867 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.118039739 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.12009137 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.117502942 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.117800347 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.119133886 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.117851242 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.119196949 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.119562655 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.121335663 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.119842877 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.120159514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.118899032 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.11790046 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.121526499 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.11803908 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.119228137 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.11755312 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.120703677 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.11977989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.120074318 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.118157278 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.12060974 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.118963276 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.117708347 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.120376629 seconds)
  done (took 81.584884212 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.117601512 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.112263691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.110161289 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.110786573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.110585487 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.113138566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.110955251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.113128865 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.111329426 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.117609886 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.111781535 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.115529644 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115758129 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.11895072 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.117847275 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.113742333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.117131065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.114405012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.12049486 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.111249154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.110356245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.107522858 seconds)
  done (took 25.558820658 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.109350629 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.110079277 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.10837646 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.11111032 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.108121284 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.106238499 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.104279969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.105009014 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.107938639 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.101463702 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101894846 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.10586283 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.102450033 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.102990361 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.103141384 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.102378468 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.105453811 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.101557341 seconds)
  done (took 20.942274653 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.102439417 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.102035978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.104248383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.102636119 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.102686361 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.104995106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.103265877 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.105323124 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.103697506 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.10282214 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.105255849 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10481711 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.105578177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.102566754 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.106162024 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.103638179 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.10588057 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.102471225 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.105321952 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.103626327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.104727846 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.106612393 seconds)
  done (took 25.331361741 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.104588178 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.106624907 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.103983228 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.103142519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.104074134 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.106223573 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.106531007 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.103969921 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.107055506 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.106721163 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.103970204 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.10754544 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.103512769 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.104477648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.103972362 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.10368264 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.106262152 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.104604308 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.107182334 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.105045352 seconds)
  done (took 23.144037355 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.106972522 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.108449267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.106791841 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.106889625 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.107692543 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.107748676 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.10751152 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.107381006 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.107812603 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.108857977 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.1077351 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.108274667 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.107554498 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.108763352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.109479749 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.108002894 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.107082182 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.108516024 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.109000292 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.108974251 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.108292965 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.108400246 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.10796295 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.108863322 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.10742941 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.10895704 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.109297085 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.108889985 seconds)
  done (took 32.06892919 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.108213782 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.108211742 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.105533036 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.106622665 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.10546422 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.105327239 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.10635492 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.105905301 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.109041708 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.106399413 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.108737372 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.10793419 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.108481849 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.108712535 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.108418286 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.10794038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10832171 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.106906801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.106222034 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.106615357 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.108561855 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.109769532 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.109042359 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.107149796 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.106381025 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.110086497 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.106906889 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.105959577 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.110231235 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.106494545 seconds)
  done (took 34.269571902 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.127995561 seconds)
    (2/2) benchmarking "in"...
    done (took 1.129234944 seconds)
  done (took 3.301216453 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.106717432 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.110473158 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.110279052 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.107091022 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.108211085 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.110346867 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.110614119 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.107525587 seconds)
  done (took 9.914296448 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.108636701 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.110378572 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.108101959 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.109460677 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.111234692 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.110717473 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.115723753 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.120023295 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.111353126 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.11175964 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.115378808 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.117042814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.113173818 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.110302919 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.109510397 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.11226169 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.110478473 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.110527167 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.111327863 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.110446049 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.112101909 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.112111662 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.112006671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.109850394 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.111453168 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.121788332 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.115109337 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.111098266 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.11116901 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.115740183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.109928307 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.108627186 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.111504373 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.112373847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.112486765 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.111903447 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.121372533 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.12271633 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.115931063 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.114440458 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.112809914 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.109498978 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.112975179 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.112311108 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.11127878 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.113222797 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.112350141 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.108761342 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.110450164 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.114172271 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.118453302 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.111957311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.111786287 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.117190961 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.113050594 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.119102603 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.122060669 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.111423497 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.120299565 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.122902465 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.123454283 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.122048834 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.114160492 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.112929889 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.120149166 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.132565875 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.119526695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.122035855 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.111550905 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.108283525 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.115607535 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.121897274 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.116553753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.110744795 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.109644787 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.108033247 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.10937027 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.114693061 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.110570743 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.116715578 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.102579065 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.104392996 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.110148973 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.118207578 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.104775252 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.104379707 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.106756183 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.089107413 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.091228072 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.100342549 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.105626141 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.08972186 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.089213996 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.086925739 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.089954215 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.091064537 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.091558673 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.09461736 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.093286203 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.093492154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.092400915 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.093221479 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.09710528 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.091520225 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.091114775 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.102263388 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.096170399 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.096660033 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.105054826 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.098445831 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.095992811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.096034296 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.101477408 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.094742568 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.099265006 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.099101222 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.096174738 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.096409606 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.096435878 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.097621401 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.106236567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.12104628 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.097970673 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.098230688 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.101545547 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.106440292 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.097459781 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.100241784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.098269921 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.095472639 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.094676509 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.100226581 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.097530838 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.097789455 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.097809597 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.094744483 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.096960413 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.098299184 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.097042783 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.097043188 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.09772997 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.097181305 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.101211805 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.100154396 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.097878527 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.100073963 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.102811017 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.098123299 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.098787923 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.099274025 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.096474869 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.101657225 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.098988964 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.09719101 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.098948011 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.09835404 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.098525289 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.098527441 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.099740781 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.099996099 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.099277454 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.100415247 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.102827162 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.098726657 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.102779349 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.097667391 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.097320793 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.099705363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.101368105 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.100185961 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.101112797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.09874914 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.101376456 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.108256618 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.100972863 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.100016614 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.102374303 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.099317395 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.099529569 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.100139173 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.102216024 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.108844466 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.100465308 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.106940466 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.098714772 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.101989659 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.100458007 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.100684027 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.100386055 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.100594617 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.102712225 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.108699972 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.11297155 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.107232342 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.100667667 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.104952144 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.102215336 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.104704429 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.105838633 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.099391476 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.099804335 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.099665848 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.099360335 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.101627092 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.10173117 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.100561577 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.101654647 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.10311123 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.101748408 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.101355298 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.101531604 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.102032063 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.103016962 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.099864587 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.102580006 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.102563726 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.100811137 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.101265949 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.101764811 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.10159456 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.101964129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.100821905 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.108066264 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.09959742 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.102901786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.100967982 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.101687715 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.100881532 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.103274223 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.10421051 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.101334218 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.109755702 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.110447104 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.103251144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.108688063 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.11191542 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.102362797 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.105838873 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.101549911 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.099792524 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.104196748 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.110996695 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.101549531 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.102659689 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.103213571 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.103246706 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.103394309 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.109667413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.101684389 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.104242156 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.104233223 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.104286813 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.101324838 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.105439585 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.103390591 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.105477771 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.106061459 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.10205431 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.103155919 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.106269911 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.104481514 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.103321336 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.105076489 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.106090756 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.110605309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.109977345 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.103050337 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.106352382 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.105807649 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.108141076 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.105075184 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.105217927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.105032736 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.115939686 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.111791917 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.111601222 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.105019633 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.105721506 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.108854223 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.102314672 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.108667512 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.105891641 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.105968281 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.106621476 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.104395125 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.102401504 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.10627944 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.106125149 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.105603959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.105807524 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.108668318 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.1056894 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.104711994 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.1044543 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.104973423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.106081063 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.106719424 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.106616197 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.106690186 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.108081037 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.104590221 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.106904213 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.112952344 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.114381438 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.108083957 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.105758475 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.106350954 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.105569613 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.10680813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.106301889 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.108635198 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.115670424 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.109029074 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.116863363 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.107923673 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.116012786 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.107312882 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.107119647 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.114788138 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.104300737 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.10670359 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.108291395 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.108097108 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.112890683 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.119398667 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.10658138 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.110245078 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.106904148 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.106237858 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.106569936 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.106935053 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.107358609 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.107194112 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.114476317 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.115766371 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.10990138 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.108889327 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.10417522 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.107744194 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.107039875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.107470374 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.111418333 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.106068334 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.108753497 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.107402181 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.10918372 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.108802476 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.108058567 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.107069149 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.107070948 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.108162953 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.116435383 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.117754565 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.112816527 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.109956072 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.116887944 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.108055516 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.115634056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.11770785 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.107627977 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.10804108 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.108585454 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.110149029 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.109032938 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.110456549 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.108409471 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.108978343 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.113135038 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.108099885 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.110185848 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.109815077 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.108717052 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.108483666 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.117419507 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.128771572 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.110457983 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.11468644 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.108157031 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.10971181 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.11416234 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.108678416 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.108088501 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.111863797 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.118482222 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.117023449 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.109923635 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.10930588 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.109402139 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.11101966 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.108031689 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.111624164 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.111365779 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.110151154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.109711638 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.111366376 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.112008944 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.110542952 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.110698554 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.11120627 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.110151115 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.119723372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.10844076 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.109988056 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.108821348 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.109869785 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.111433307 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.110646445 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.110209673 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.109211161 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.111245446 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.111017446 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.11616038 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.116559227 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.112686746 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.109212798 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.110945646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.10986935 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.110298678 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.112543237 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.110464485 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.110232427 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.111344492 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.11014841 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.110205563 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.109658663 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.110956309 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.111498762 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.110681013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.112683796 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.116722365 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.110651141 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.106797549 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.110807331 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.111113632 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.10965081 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.111331721 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.119234059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.113069853 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.120867131 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.120654893 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.116051755 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.111188193 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.114369275 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.120445811 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.11242924 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.113880613 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.112736016 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.114649789 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.114948482 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.115503605 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.112874554 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.118385558 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.113982838 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.111994199 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.120365082 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.124883309 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.112382589 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.113632529 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.117063461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.113253267 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.112020485 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.114132728 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.112475938 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.120964198 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.127154912 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.113680358 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.114274078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.110651215 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.11407552 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.118479569 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.113991039 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.113938184 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.109598779 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.113428389 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.113387651 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.113253965 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.110509136 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.113720882 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.114398714 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.115477531 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.120962096 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.111024662 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.115996111 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.11304138 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.115595559 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.113039118 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.115527923 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.111805271 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.112625248 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.114111092 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.115321788 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.11423314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.116207529 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.112366324 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.114134806 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.115717988 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.114854099 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.115116977 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.123614874 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.122166208 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.11357318 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.114755751 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.11504994 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.116896706 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.112148311 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.112578655 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.114053019 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.116486632 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.114563003 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.115873618 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.114481786 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.117480586 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.131393666 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.124682117 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.114869602 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.116135603 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.12047951 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.113584113 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.114188039 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.115196652 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.118090805 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.117616752 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.124681682 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.114531452 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.122204391 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.125661818 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.117115972 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.121865554 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.11833366 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.126307231 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.11982075 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.116734763 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.117157332 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.119994829 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.131802679 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.115418231 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.126071205 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.143707682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.129062601 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.11621974 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.116079736 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.114916545 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.116611313 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.116836676 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.115432693 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.117124532 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.11799193 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.11725728 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.1165898 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.122610516 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.117306547 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.116504223 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.117828235 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.118360408 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.119098929 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.116068482 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.118979049 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.118018253 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.118660877 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.117732214 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.116170282 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.118119887 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.129800229 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.127492037 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.117320921 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.119008025 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.115784505 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.121905569 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.119360183 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.126711239 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.125495312 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.119172248 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.116884165 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.118539749 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.118285134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.116139428 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.118615194 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.119250918 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.1181066 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.117667513 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.129479903 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.125061267 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.122072352 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.118892508 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.120322442 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.117168251 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.120618977 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.120055664 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.117916232 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.119726716 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.120431802 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.123757192 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.117645099 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.120637186 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.120537196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.126985886 seconds)
  done (took 662.458258554 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.118528797 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.117028835 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.118127835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.117755264 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.118549796 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.118623224 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1181011 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.118388596 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.117210549 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.118587706 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.117048754 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.116870408 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.117590904 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.118254919 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.11803209 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.118231955 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.119302798 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.119139318 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.118576018 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.117127691 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.11770344 seconds)
  done (took 24.533970991 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.12199308 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.119455333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.119677308 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.12217972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.119653475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.121979287 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.12024292 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.121603841 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.122382811 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.12004969 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.121826266 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.123178603 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.120455395 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.119845712 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120505727 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.122924711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.122165116 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.119759062 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.120846875 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.119836353 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.121457893 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.119519776 seconds)
  done (took 25.716430439 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.121711388 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.121297365 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.119156398 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.120838414 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.123247913 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.119912202 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.123777897 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.12284508 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.123519773 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.12356511 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.121119237 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.121552346 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.12759249 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.128078342 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.123541296 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.121926189 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.267441472 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.122566384 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.12116046 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.121388502 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.119479452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.127652969 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.12047827 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.119908214 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.123077135 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.12381447 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.122320632 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.122449229 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.122074128 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.122496216 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.125709078 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.121300709 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.123423499 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.125617797 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.119694098 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.121986397 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.126873983 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.122143949 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.119667961 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.123487124 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.132036091 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.141454654 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.12398162 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.128090797 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.122064219 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.122420049 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.124768131 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.13083909 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.120068335 seconds)
  done (took 56.2539146 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.12370815 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.124908298 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.121200789 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.123708709 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.123278081 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.124149178 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.12666355 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.124338698 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.123365636 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.12310002 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.125829416 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.123470857 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.121717248 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.125632021 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.124735133 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.123486835 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.124122408 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.122960483 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.123392433 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.122940256 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.123756817 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.125713222 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.12721483 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.123341229 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.125693915 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.123678624 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.125227442 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.127161004 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.124681056 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.124569865 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.126745947 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.126481354 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.12666136 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.124591262 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.123305734 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.12712434 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.128299368 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.124674534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.127846994 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.123549266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.1270173 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.126548406 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.127279865 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.127710107 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.124271556 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.124675907 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.124218048 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.124745805 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.124638204 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.126715968 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.127936184 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.125301745 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.126471023 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.124441493 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.127830924 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.128079507 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.124695339 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.125803695 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.127684049 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.125969262 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.12669664 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.127497157 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.125627194 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.127732269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.12766679 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.126122034 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.126530879 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.128979534 seconds)
  done (took 77.587370068 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.128184847 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.126001595 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.125484545 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.126165486 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.126152552 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.125467705 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.126255887 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.126437694 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.126461623 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.128429148 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.126964405 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.127623839 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.127603914 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.126509205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.128952391 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.126369131 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.126007756 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.127206109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.126501111 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.127656888 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.125443206 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.127263642 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.126011509 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.12659896 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.126266623 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.125905109 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.127238972 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.126600042 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.126985694 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.126360311 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.129252086 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.127121364 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.127152089 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.126831848 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.128480291 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.127598977 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.12664319 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.128845333 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.127068669 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.126916791 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.127178749 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.12734313 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.129332667 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.127910166 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.128854882 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.127469853 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.127790005 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.127969979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.128095068 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.129856372 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.128732132 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.128027841 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.128743835 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.129131738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.127703165 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.129399225 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.129782769 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.129648477 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.128446245 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.129246828 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.128251644 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.130553077 seconds)
  done (took 70.969551491 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.129845799 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.129252553 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.128294604 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.128053006 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.129764297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.128391546 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.13030704 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.130030759 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.130099091 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.129895833 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.130180791 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.127876838 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.126498734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.128894923 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.127826034 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128417924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.127956301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.128356959 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129387785 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.127833942 seconds)
  done (took 23.642190959 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.128700708 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.130446126 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.128458455 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.127462352 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.13144571 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.127902691 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.132218344 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.130406635 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.130191451 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.13167568 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.13185921 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.1321598 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128118004 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.129811572 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.132141566 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.130215345 seconds)
  done (took 19.148719658 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.130049294 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.131403686 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.130946726 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.132000891 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.127446504 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.130499152 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.131545363 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.131061993 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.12953709 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.133126844 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.129966279 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.133458643 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.132021032 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.133497295 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.130370889 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.133279974 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.13210706 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.130273348 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.132574418 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.132897444 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.13056782 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.129447619 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.132181396 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.132950213 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.129671309 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.130010538 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.131314496 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.129632446 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.130115539 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.132569202 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.130787384 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.129559742 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.130112012 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.129862226 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.131413555 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.131001752 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.132858565 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.132597525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.13389945 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.133995723 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.133135365 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.130757673 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.133491746 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.133736913 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.131378509 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.134372904 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.131886612 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.131696678 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.130417641 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.131317273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.133656207 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.133407638 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.132994011 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.133901685 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.132884383 seconds)
  done (took 63.308820885 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.133553562 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.132583157 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.131542338 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.132818892 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.1337288 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.132108003 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.133719883 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.132445189 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.133351251 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.134363808 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.133065513 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.133373484 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.131755639 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.134468692 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.133178099 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.135610067 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.131976673 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.13245175 seconds)
  done (took 21.464331633 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.133437282 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.133957791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.135687867 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.133993716 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.134122843 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.137064431 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133297401 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.13526313 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135334516 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.132489027 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133987831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.135439352 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134614944 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.136675518 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.134078937 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132988508 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.135842995 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.136841888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.134006229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.133979511 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.137483681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.134014771 seconds)
  done (took 26.033618619 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.13416568 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.135590412 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.150110258 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.171267353 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.161297934 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.135309684 seconds)
  done (took 7.95727021 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.134983427 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.136805169 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.133646011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.136213782 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.135385319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.134356981 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.135048154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.135365604 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.137972207 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.135647588 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.133744775 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.137828939 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.136760539 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.134543241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.137836455 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.138322365 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.135093177 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.134519704 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.136840818 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.137488142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.134384772 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.137616127 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.135908946 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.136131292 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.135500352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.135113663 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.139253353 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.136231457 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.135597416 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.137663437 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.138560466 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13511652 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.137752728 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.135180122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.139588374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.137925295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.136202903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.138141435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.137562575 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.135630928 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.138445098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140040788 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.139422234 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.137671803 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.139306792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.136181214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.137332714 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13810707 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.137474067 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140532289 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.139633643 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.137511015 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.140749669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.139510733 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.138817154 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14027818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.137175051 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.137767807 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.139485773 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.136807322 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.137612065 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.140117133 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.137654099 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.138340659 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.140274325 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.137923709 seconds)
  done (took 76.128946155 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.138166038 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.138803396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.138102728 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.139824206 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.138013229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.139258187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138595094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.140972478 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.137537638 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.138261374 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141816761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.139626039 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.14002951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13864992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.139134344 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.139125343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.139645566 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.137639993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138935896 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.140934809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.137654628 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.138582016 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.139418434 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.138045531 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13993602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141848235 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.138867971 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.138085837 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13852179 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.136249638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13755469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.137324633 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.138911342 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.137624651 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.138038825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13813049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138288909 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.137588922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.138816577 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141069001 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.138495548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141116429 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.139031645 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.139524675 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140056163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140112334 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13970963 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13956932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141707249 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.140049425 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.140970239 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142527695 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.140529072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13966413 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142569868 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142802812 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.140635293 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.141651616 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.14026534 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141951943 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.139397882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141494525 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.144491503 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.141411933 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.139730606 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.140044994 seconds)
  done (took 76.288120901 seconds)
done (took 1550.955751192 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.230626724 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.236072749 seconds)
  done (took 13.541835961 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.303433169 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.258252317 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.141804258 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.167299065 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.139562289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.162738204 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.15375671 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.140101794 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.142794617 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.142386227 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.141573593 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.328816405 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.136030284 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.139720982 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.14231014 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.232826945 seconds)
  done (took 39.950064938 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.167584426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.147152503 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.241162738 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.175720127 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.182033459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.318629832 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.208223254 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.163986735 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.30373611 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.195754948 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.516453703 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.185096604 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.162898 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.130846736 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.174870114 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.318797132 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.374156372 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.500835486 seconds)
  done (took 26.544933155 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.533217803 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.162480526 seconds)
  done (took 8.788269215 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.196477 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.201972002 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.189879697 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.168170283 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.153891713 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.219900919 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.163665616 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.194083648 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.172653294 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.166096247 seconds)
  done (took 62.920144707 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.176673647 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.161555785 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.164106742 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.160029039 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.154273405 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.162015765 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.15905531 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.163439712 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.20693909 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.267774142 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.174982733 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.168334874 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.161700767 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.162200658 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.158884428 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.192914569 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.287120417 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.159971796 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.15608002 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.167533114 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.162994408 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.271196538 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.195211354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.16131465 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.265927569 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.219829262 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.166429416 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.168798483 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.271126665 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.16018284 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.161259217 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.16250482 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.163993639 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.722853864 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.67048543 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.165178713 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.181250082 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.170286094 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.159574735 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.306708185 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.163430163 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.16981747 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.154910953 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.655412846 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.308587082 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.266239974 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.240336778 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.163785558 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.164524548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.217198218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.165002313 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.164642412 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.191903459 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.8751016 seconds)
  done (took 100.46811535 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.18747538 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.643483269 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.323928303 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.173571213 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.897335585 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.76760296 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.158525127 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.399412443 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.224216626 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.157093695 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.424011893 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.608600062 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.163646794 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.168988988 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.260460298 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.234423807 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.158261324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.858391857 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.157462698 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.159880473 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.553038308 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.170116775 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.158298617 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.299244119 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.192076091 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.583463825 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.461882723 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.573267107 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.160417569 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.15582058 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.579068045 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.161311168 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.209073334 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.156066621 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.410737709 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.471523443 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.455237062 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.159943263 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.199946679 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.160209503 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.189699933 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.579326697 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.461756962 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.155383518 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.169849734 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.579791397 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.159237502 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.164383897 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.167591536 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.354522026 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.090870033 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.161891601 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.478119461 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.162089607 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.502534637 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.197952979 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.239415103 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.609488215 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.168138946 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.206721529 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.19909718 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.157117347 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.164653413 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.16101532 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.16097657 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.466055482 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.294012079 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.164042526 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.468740454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.574216055 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.160236394 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.648144649 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.089590385 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.164417287 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.239176691 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.169847839 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.689837599 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.610434253 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.188313115 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.15763276 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.453140543 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.163531631 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.417484963 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.171504856 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.160561793 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.564512845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.174336486 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.170492778 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.159080501 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.165974086 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.77421093 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.160986977 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.407290984 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.182904022 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.161431563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.161818956 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.168344413 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.159459583 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.161097998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.161381178 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.640420862 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.168714365 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.284004835 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.177043329 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.165804407 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.161644187 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.160330781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.161161724 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.370998582 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.620000952 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.162855596 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.16442749 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.160033605 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.169053909 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.295951891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.164135473 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.426741797 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.162753217 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.16131283 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.169584251 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.822564283 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.181264963 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.15951684 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.164590666 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.995994112 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.381792894 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.177015658 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.164362676 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.163397238 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.181053383 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.370839934 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.164834066 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.193892405 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.165542105 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.816383252 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.165904506 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.175979681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.74703294 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.16825154 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.162989114 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.164903808 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.162379308 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.456590464 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.417977753 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.229849667 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.165326385 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.163987686 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.807327447 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.19619149 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.307526792 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.180935004 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.156838948 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.359254581 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.586958291 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.16368469 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.737961997 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.163046867 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371013897 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.163329953 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.476720532 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.604172271 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.162814251 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.172014749 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816738466 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809696395 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.82017857 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.168113392 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.420418813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.154137322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.613247406 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.163650018 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.16402908 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.58478613 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.163589192 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.170845911 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.165422826 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.166522933 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.315773039 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.339218108 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.564893628 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.171151407 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.586609715 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.188133105 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.162678793 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.169015872 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.163134463 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.518797548 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.178899452 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.169259839 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.165672242 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.167138322 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.171331349 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.597455319 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.140599747 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.16636485 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.318049793 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.746451157 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.166066924 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.166272924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.776562295 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.456230588 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.63305125 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.214735439 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.435326311 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.17001103 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.202865082 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.841763244 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.173421671 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.639667429 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.166861786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.165554412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.726246956 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.168138884 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.529851316 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.1653537 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.164323309 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662471474 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.166985893 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.166741643 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.390418491 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.168246428 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.408998174 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.168520777 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.212321574 seconds)
  done (took 1069.857919906 seconds)
done (took 1323.147033572 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.16679188 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.16655537 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.156211545 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.168999989 seconds)
  done (took 25.763496132 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.178746017 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.171115832 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.173457964 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.171772072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.177545648 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.172825995 seconds)
  done (took 8.152389603 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.26696178 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.166223514 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.169336476 seconds)
  done (took 18.70947373 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.37140005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.312025703 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.509215286 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.06699463 seconds)
  done (took 9.367799828 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.175902094 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.173674548 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.171712203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.177213016 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.17960951 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.179821092 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.17601337 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.178262707 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.180794243 seconds)
  done (took 11.699804281 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.639453043 seconds)
done (took 79.440470022 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.998178477 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.125997251 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.848525226 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.442620772 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.172324989 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.929192869 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.269620856 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.41123963 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.939082156 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.473325865 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.294450758 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.590693436 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.211885648 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.167024893 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.175784924 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.215569416 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.176245525 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.662354432 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.78038133 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.259500276 seconds)
    (21/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.351057181 seconds)
    (22/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.759953509 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.673019338 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.327529757 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.170471444 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.165057034 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.199921648 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.989278101 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.948254914 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.70218613 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.295364694 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.225686202 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.222727698 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.006834464 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.301774656 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.176535338 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.5053688 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.549357685 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.372451362 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.87532343 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.187464421 seconds)
    (42/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.599483742 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.173523091 seconds)
    (44/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.338926206 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.437914258 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.279239763 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.569258247 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.166183202 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.988203468 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.187024954 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.366128976 seconds)
    (52/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.518107805 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.175808112 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.211356449 seconds)
    (55/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.664717058 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 6.187250815 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.670519911 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.261758581 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.288322839 seconds)
    (60/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.223473677 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.447079436 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.456113975 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.304949073 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.185056712 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.209855185 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.431005331 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.700237211 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.922809749 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.938356018 seconds)
    (70/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.725556452 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.987360799 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.245749462 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.17614495 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.407376988 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.258260404 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.260218458 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.252428754 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.201909727 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.353600007 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.492445695 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.18889667 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.298255898 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.881406143 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.888633415 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.321006705 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.536085225 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.185381452 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.245257268 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.184489735 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.801258185 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.32198143 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.754404187 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.161856232 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.307227058 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.480935769 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.698563237 seconds)
    (97/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.18915646 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.944938036 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.630565638 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.338656179 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.678143291 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.603774764 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.02286784 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.323324522 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.287744508 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.17641799 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.178534588 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.264016891 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.381447265 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.871923374 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.192161726 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.332762266 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.497382114 seconds)
    (114/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.219147498 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.177261595 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.189905648 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.164165538 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 4.270922581 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.179033427 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.410237345 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.32364699 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.262526965 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.207001445 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.180423757 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.521532877 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.691570598 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.191006236 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.176052251 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.939871084 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.178714202 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.68250083 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.153518392 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.563823195 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.174938993 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.682585563 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.20247762 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.538423907 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.458915706 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.465681406 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.355649279 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.848284095 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.43563474 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.528198672 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.721966588 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.30407551 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.24292741 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.292823654 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.170194821 seconds)
    (149/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.207444533 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.858519724 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.180787775 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.329791809 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.187988098 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.46334223 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.709620412 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.878012704 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.205774493 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.197343491 seconds)
    (159/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.715026745 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.669583479 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.207616737 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.174346709 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.202466805 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.206711999 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.575412974 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.301456456 seconds)
    (167/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.266647282 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.189993603 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.585923605 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.180988319 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.245291405 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.169157343 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.21477261 seconds)
    (174/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.287923009 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.303785687 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.191027564 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.246389591 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.264920994 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.671306638 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.208721472 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.611543362 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.208581003 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.231820738 seconds)
    (184/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.984201058 seconds)
    (185/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.193298932 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.22331702 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.22508668 seconds)
    (188/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.866823932 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.467422501 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.468849082 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.865531549 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.267568505 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.334746935 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.181481774 seconds)
    (195/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.879573077 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.239829108 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.202125463 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.390164176 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.635739541 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.339246515 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.780185423 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.86150053 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.518788986 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.301560505 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.167363171 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.858762849 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.397738324 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.575383531 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.57338165 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.18353805 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.178340102 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.194192772 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.527578244 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.425429292 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.717871827 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.199492023 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.204733938 seconds)
    (218/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.605832197 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.209882478 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.982863573 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.182984201 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.362162552 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.404852444 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.223956545 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.017587428 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.168284462 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.325062229 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.291652609 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.860753719 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.983601875 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.209517101 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.183925182 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.270796748 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.445299305 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.18587962 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.284708515 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.178235378 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.230078457 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.42664511 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.185816818 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.295975622 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.677951474 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.421040698 seconds)
    (244/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.534436505 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.309832343 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.742664799 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.97249908 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.247894865 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.37669925 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.499656993 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.171459111 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.266263432 seconds)
    (253/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.483033822 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.196539546 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.211971324 seconds)
    (256/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.168263672 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.844871686 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.519391595 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.213599157 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.920892178 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.579475445 seconds)
    (262/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.872631196 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 5.432197092 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.290776012 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.387547355 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.183762012 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.577379565 seconds)
    (268/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.315814901 seconds)
    (269/309) benchmarking ("sort", Float32, false)...
    done (took 5.167933293 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.503441555 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.379262314 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.312421295 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.198373813 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.766408947 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.18632249 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.284751816 seconds)
    (277/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.464604403 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.182489199 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.175499834 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.186022775 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.299792145 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.268553153 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.29440568 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.211183272 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.200830755 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.324800519 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.209193442 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.905729101 seconds)
    (289/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.211537361 seconds)
    (290/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.450376025 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.429359088 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.243500685 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.186726411 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.25956647 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.619011359 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.42401171 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.212956497 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.557362434 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.383999841 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.217509574 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.295241769 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.246986884 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.511048674 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.224206279 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.212657269 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.75926965 seconds)
    (307/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.206692122 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.195270935 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.430499864 seconds)
  done (took 859.339945291 seconds)
done (took 860.455058822 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.220989041 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.214268922 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.196723484 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.220576868 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.309389722 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.229309641 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.211132505 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.200280903 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.246498519 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.247634817 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.195582531 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.232087201 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.199631132 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.199718883 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.199309924 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.211346489 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.144969512 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.199792744 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.216004472 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.209279763 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.215595096 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.198783906 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.248969534 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.231627928 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.203860278 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.201970223 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.203667101 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.219479317 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.311239446 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.203333278 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.202662987 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.211199808 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.145007821 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.19938395 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.19596632 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.218257575 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.211931135 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.209512934 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.203336684 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.232217345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.494369402 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.197742959 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.200719462 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.200737444 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.200214184 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.205200135 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.201356449 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.207247049 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.21238572 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.214158257 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.503328402 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.216628242 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.204221669 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.200448385 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.21112086 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.201022953 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.203616659 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.21587491 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.219911564 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217282589 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142339078 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.206031941 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.203063 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.216784757 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.209589139 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.552372267 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.197563055 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.206312788 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.500169995 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.205275151 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.554933498 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.209674128 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.20266284 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.215637611 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.233461417 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.150335794 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.19720282 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.200731288 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.207346569 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.20092804 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.211965956 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.213845738 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.208837951 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.201683126 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.213549865 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.234763054 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.212534492 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.20155013 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.212856424 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.221972756 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.208683479 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.213437422 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.206123737 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.198122229 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.212368175 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.205856874 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.203730262 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.204354797 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.206871223 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.213280048 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.500396651 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.218401968 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.200291794 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.200712853 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.202088143 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.21658677 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.505498717 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.203494769 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.226482919 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.250476627 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.205231753 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.149653953 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.206849973 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.218995976 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.213010329 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.206360091 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.199903003 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.1506563 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.52351372 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.217005758 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.205896477 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.202116439 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.219704188 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.206268787 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.201502302 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.154629222 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.205700526 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216991362 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.325055908 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.215212013 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.235431783 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.202876061 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.2082517 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.233185303 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.220409943 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.23745114 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.207211102 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.220558579 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.220421021 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.202748564 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.215833775 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.216516553 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.206331212 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.211259503 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.199462303 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.238422309 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217289851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.218186603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.22696499 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.325931935 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.204599768 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.151825144 seconds)
done (took 203.641914504 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.270292401 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.200365544 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.288569862 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.201913152 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.303794555 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.300370387 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.200693686 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.20042611 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.198756743 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.580053515 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.200167607 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.201360056 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.203271581 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.200533553 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.288264557 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.204971758 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.200402162 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.543025571 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.203884808 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.274038033 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.194972223 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.20280342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.204011892 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.587430733 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.201023553 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.202539044 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.275702581 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.202869164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.550750072 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.199617114 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.20398926 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.550894121 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.293657774 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.220738953 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.213724158 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.211317066 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.306897318 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.216747608 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.288327946 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.289317699 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.290164843 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.242163578 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.200168606 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.204300069 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.206244729 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.202957701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.201323856 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.23086672 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.20157013 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.202604315 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.544437405 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.214618966 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.203830775 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.203110106 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.203227528 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.233558737 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.20318362 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.206516028 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.295542252 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.206004292 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.269818318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.589978506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.582745927 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.205322059 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.204808746 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.203605184 seconds)
  done (took 139.769001922 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.271987082 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.277687402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.312619537 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.205535966 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.254463404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.313560098 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.207044779 seconds)
  done (took 9.977988365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.211434714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.206256277 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.256414033 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.255281737 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.206271738 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.352582228 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.206533099 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.215937382 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.204185544 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.257794907 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.208929052 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.205694551 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.212870456 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.202838154 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.254003461 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.218216292 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.321767957 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.206145554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.205983459 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.356003925 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.203905863 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.212752686 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.257843602 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.216226591 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.208089223 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.211137228 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77381155 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.208093895 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.203865585 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.208149065 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.205463472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.245725673 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.208756911 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.208341177 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.205713504 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323045199 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.208317236 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.205631319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.208473907 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.205097696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.208667933 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.20830324 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.207214646 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.205726446 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.20737568 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.229686314 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.208872441 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.208457424 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.207999447 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.209990873 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.257713744 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.208439238 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.203722184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.204847758 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.263585133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.215446792 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.209162844 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.203938379 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.208600111 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.204798453 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360728278 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.256636089 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.207911642 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.255157274 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.209096363 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.208539154 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.209439555 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.208511363 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.261874726 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.208592854 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.256313084 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.207325132 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.361618058 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.232161809 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.210653699 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.210946601 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.210600604 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.210281231 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.204110337 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.214674457 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.207525341 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.208846219 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.214433082 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.207908864 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.207696261 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311848793 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.318360026 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.207147092 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.221232521 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.215786793 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.207927914 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.261869557 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.210018456 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.207896861 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.261151961 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.324537086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.263134908 seconds)
  done (took 140.879088693 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.214720755 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.218106436 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.21111817 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.22586157 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.210591673 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.209549879 seconds)
  done (took 8.429237669 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.21159528 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.211824899 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.210902602 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.212089225 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.211128789 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.210395458 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.209819127 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.210365415 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.214800495 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.210993147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.213418698 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.213494362 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.212681474 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.212846561 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.211442507 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.211347233 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.212188285 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.208586483 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.212173556 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.211980095 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.304770813 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.212198078 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.2102335 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.212225903 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.214181929 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.211998632 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.218648955 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.212885564 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.211802658 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.219112161 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.214414043 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.213171539 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.21228112 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.216573397 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.216012275 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.212691544 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.216687325 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.214087316 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.21023582 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.213132647 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.214307485 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.211466115 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.21305884 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.214813936 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.213697791 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.216508494 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.218520184 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.22159397 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.213071921 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.214911481 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.215660009 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.21410876 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.213501467 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.215046424 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.214716291 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.216886861 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.21840556 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.212185749 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.212343965 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.213310783 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.213627053 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.213885695 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.214129378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.217396235 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.221306092 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.214952033 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.213673401 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.217235973 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.214358411 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.213843931 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.215219632 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.212651046 seconds)
  done (took 89.624159252 seconds)
done (took 389.812369052 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.427917052 seconds)
  done (took 7.571093358 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.391207226 seconds)
  done (took 7.536489371 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.391185739 seconds)
  done (took 20.53727158 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.28277574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.246130878 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.217558892 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.208368918 seconds)
  done (took 26.099379282 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.351616162 seconds)
  done (took 7.49511082 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.212316332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.203705822 seconds)
  done (took 13.561933655 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.37060269 seconds)
  done (took 7.515232309 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.558953836 seconds)
  done (took 7.703244372 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.230598031 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.227182264 seconds)
  done (took 13.845314953 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.208076504 seconds)
  done (took 7.353495559 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.788513329 seconds)
  done (took 7.93422953 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.212283521 seconds)
  done (took 7.35937398 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.247243769 seconds)
  done (took 7.392402965 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.665360241 seconds)
  done (took 8.810874857 seconds)
done (took 151.860146317 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.207566509 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.206950364 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.20552047 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.207853768 seconds)
  done (took 25.972648423 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.248622776 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.249817197 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.251102105 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.259683391 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.252028116 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.660838299 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.243153713 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.243146857 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.259560728 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.251210373 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.250769883 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.251644273 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.248578869 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.242804238 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.251101005 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.251933496 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.260928465 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.252636956 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.242722497 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.252934723 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.21807935 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.261127353 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.25306334 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.217551286 seconds)
  done (took 31.521682883 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.40945029 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.286901788 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.369540217 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.269003429 seconds)
  done (took 6.480140511 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.268809182 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.269522123 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.281244552 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.321481788 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.354260195 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.279490772 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.243980908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.240315143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.224671252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.270051113 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.347103359 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.286865774 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.358606908 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.218277793 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.440515222 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.217243636 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.216806099 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.271284109 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.321799977 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.335642917 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.216901233 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.269549865 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.27242014 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.286577062 seconds)
  done (took 31.960145781 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.215613262 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.224755423 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.222894685 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.217112211 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.216927916 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.217990666 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.224455421 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.219197306 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.239261207 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.21906278 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.217957249 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.217793477 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.215975963 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.218529382 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.216028417 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.229370946 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.232123639 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.218390421 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.219413468 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.224835784 seconds)
  done (took 25.5749464 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.211675008 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.063953862 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.561890503 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.466128017 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.212107245 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.20906087 seconds)
  done (took 26.87233856 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.277072182 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.406662876 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.218626902 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.534771313 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.610004519 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.219627411 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.220238235 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.439894583 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.705459539 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.694279194 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.267001754 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.278585025 seconds)
  done (took 18.020268897 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.214916494 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.211407143 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.216053877 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.227733496 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.266990103 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.22178097 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.225297257 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.213365068 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.267100122 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.270550193 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.222456476 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.267751976 seconds)
  done (took 35.976151284 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300432186 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256769596 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.114703051 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918695556 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932341751 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.423895851 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.950380371 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618945152 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.218543874 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48870955 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823656135 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315411696 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.469271737 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214588145 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.216826342 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.088188332 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44018657 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672682357 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217435622 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852667816 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.240531835 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.218903509 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.005591793 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.241029733 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.427363222 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.193649755 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.475030132 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.990598652 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473076161 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.228935869 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227219458 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216301697 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489695916 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848727375 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313577436 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.226310413 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.883393934 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.7622292 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.215853219 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.954407693 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.552951612 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.218520323 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225814664 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217569572 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.150849106 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.219087556 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62633854 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.222304515 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.927561181 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.215020824 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.227677356 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.311362895 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.221116936 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.787489931 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212803632 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220870578 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.215024876 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.224435097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790708954 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.303513529 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227887402 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.151807529 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.565587646 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856273087 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788637938 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.320967436 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.219963707 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.221585006 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.151235335 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856464583 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.233647382 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364348667 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.240297254 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866711454 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863782038 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.832194435 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.16159655 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74293628 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229719257 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.152386985 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446425201 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995049319 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154302276 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.164832458 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.152394991 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864634138 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227404344 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.568661974 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.22648171 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623183001 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.229861702 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.23463616 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.242271311 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.442882256 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.10022769 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218204681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.606692184 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359574495 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237741321 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625487505 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155574536 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.220745403 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47542717 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.429353122 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.222849478 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.090388881 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399552056 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230289278 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.234672286 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.231334941 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.229843975 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.739582014 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.232311451 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.311051318 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237100965 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.997265821 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906354606 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221242276 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.333441435 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.840445186 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459800393 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.928525043 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380327033 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288568599 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.22418621 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221100373 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.961469099 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071846754 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.12831385 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.221467572 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.22570553 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.23125182 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.221254098 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170201254 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.215822976 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.864288542 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.001102851 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.444474931 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221837373 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495517476 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154937437 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368491413 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.228986983 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.441906805 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.328548781 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.221087129 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483739255 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.224899674 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.225254535 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233064901 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.240165126 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319719863 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243798169 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.23127281 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.477891169 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.225284933 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.225794498 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.977530986 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.000781066 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225353707 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.228680695 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.032812649 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746113644 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19986716 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.22886329 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109732524 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.2355451 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291327272 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.228855879 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.231511822 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.860266592 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998285122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.227756419 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.220015808 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447040917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232423617 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.959839855 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3055754 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.398777135 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.751140622 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.237330725 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.158111965 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.933381406 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.915670593 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223263996 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412941349 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.224019575 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.231797617 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.234252839 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.703506938 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.747843424 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227288918 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.881927009 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.230815837 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.234377351 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.22802336 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.22584991 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.829576924 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.321543789 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227217479 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.247175368 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367619869 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.236507705 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.158523632 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.737238223 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.229485418 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.223768161 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.999811314 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258761361 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.875609466 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687903726 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481691682 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.8783431 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.235505122 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.957087011 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.251942897 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.222402609 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.638826143 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240428462 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.239419752 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24353912 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.234472783 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.929860625 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.663792754 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797263178 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883941717 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697962163 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038026265 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.237873257 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.104866425 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635753061 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161228968 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.881617415 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393483706 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635171727 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171081531 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399585334 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.339083366 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915800501 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.235035925 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453364883 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03440564 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.647604629 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.24926901 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.437209215 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259276077 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.231338723 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.153383328 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.508176026 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438608087 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.620560925 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306941997 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632832579 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.646795948 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016531695 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.223345632 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.531016807 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381282723 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.771546198 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.61322661 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.223567854 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.877052363 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700933147 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.235208305 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.75090093 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802229355 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.231064142 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.402526389 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163901244 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.237986763 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.237399526 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.228161555 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.346697491 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.178711079 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.493775208 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.236353027 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161097731 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.227039104 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700555632 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.152657428 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.233195244 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228169492 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916622457 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232979847 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4861471 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.241559163 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.820685161 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231480713 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.16049552 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160913748 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.919779932 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229107464 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202433748 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687465007 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.553307493 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209278444 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243751163 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072301198 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.483713751 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.241793669 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.75520024 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454104021 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.985357556 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.251996192 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.32904975 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.673148207 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.226689101 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.109302951 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.464606671 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039554873 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.451106945 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.159752639 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.135251244 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.227488623 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.441159421 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.124442905 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.883312819 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467872361 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.939620714 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.232400668 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872473516 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255898699 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.886176183 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254885274 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.571737302 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.236525152 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300344306 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.238906468 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.241404328 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.240232541 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382788676 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.880984314 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.244849735 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.245884252 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321878092 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.342836459 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.830271437 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.002841669 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762324825 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909040628 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.758745657 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.242747706 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.231575311 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229766407 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164310654 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378403002 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.754785798 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504171201 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359241048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.637152118 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252472403 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.678132623 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247104484 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442385335 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50476979 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.100285929 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230908812 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891061612 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.389725783 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.241714456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.442689771 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697085029 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.762580261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348017191 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.235405806 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637405625 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506823752 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321906485 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.231898143 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.822168041 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.239237013 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542247894 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.237829527 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910140811 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380632138 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.242660202 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869747268 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.24269364 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.390677339 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.00596467 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983103956 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.489136886 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663975054 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.243877333 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765331149 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86942056 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496249486 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.30265301 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.242500732 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.334076459 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379499423 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.223232311 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.144837415 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.232135798 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077180082 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.941757647 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.241827309 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763735453 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496708994 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.230445567 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.223970218 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268508718 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.243140851 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.456754537 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891820363 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.457400171 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.24287896 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.236149673 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.804004827 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.763759939 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.24593148 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165945811 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.235967993 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461994294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.471112359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.257928845 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.685836463 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.944870895 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764412425 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.206438346 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255115953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233441788 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885764191 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76361303 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.839732568 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699191791 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.892865811 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247253111 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508278107 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.239914552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.235722493 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510659254 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.237581565 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.238050498 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.246112856 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.766316757 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932347911 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.241101882 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913139771 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.172728471 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.461345605 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.837996285 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171792456 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243477748 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.401796441 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.237512517 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367667792 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.245910798 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.238376521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247587238 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.971990651 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512864927 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.239744211 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.220557926 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.726151075 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.238162132 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254035673 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451524894 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.241180255 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.91092181 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.583880991 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.492372678 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.249253288 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.219895639 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.239023945 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236470796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953373245 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204843701 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.727957459 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768697614 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.247540815 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.246336696 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.239690558 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.452315867 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448302291 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.92193766 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.260896972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24890164 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250299763 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.14130899 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00538162 seconds)
  done (took 1512.670912089 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.270696286 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.260278743 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.25464405 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.307453998 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.251786658 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.32379677 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.287563292 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.322443858 seconds)
  done (took 51.450923612 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.238877609 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.388454984 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.26473575 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.23662502 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.244619628 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.242040233 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.656709677 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.249332108 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.246349909 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.247007324 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.249675423 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.249670105 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.83765765 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.247158803 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.245893213 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.2334931 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.244665544 seconds)
  done (took 63.504742138 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.236600242 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.395961048 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.315758238 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.25481274 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.808419866 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.240942837 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.375358494 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.285483613 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.235811872 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.504633658 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.893683771 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.277628748 seconds)
  done (took 81.998716686 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.245221297 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.244733856 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.246125232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.24633563 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.245471787 seconds)
  done (took 7.401043586 seconds)
done (took 1920.552227275 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.483451843 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.842511229 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.810768222 seconds)
  done (took 4.827698355 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.386011212 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.437042858 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.554296368 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.559251774 seconds)
  done (took 7.111270018 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.528199766 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.634137337 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.432698263 seconds)
  done (took 5.770589139 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.504917688 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.249497117 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.354574189 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.238562445 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.2402659 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.238827885 seconds)
  done (took 19.893831243 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.24358783 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.247762733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.244474189 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.246162137 seconds)
  done (took 6.157033734 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.225384209 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.9325069 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.230001847 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.24269662 seconds)
  done (took 17.805207016 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.989062831 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.002150618 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.987224959 seconds)
  done (took 7.153707953 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.23883703 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.1014399 seconds)
  done (took 9.515946492 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.531186748 seconds)
  done (took 2.706213947 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.376980074 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.568645958 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.215174576 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.158196204 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.217256263 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.632708065 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.685513343 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.314698409 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.138456222 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.153142784 seconds)
  done (took 25.637265602 seconds)
done (took 119.346452023 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.747564102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.244552656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.44808911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.757291585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.465725577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.448491078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.657364183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.72619889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.228378697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.217082565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.715316439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.4681494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.39712025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.247465467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.398432455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.627146081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.467520596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.800621017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.433865892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.594255533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.655668504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.356083297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.544164976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.423974247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.470289932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.394954605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.949419137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.622856838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.608923568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.973491911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391278087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.775038346 seconds)
  done (took 182.434253441 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.242049254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.240007087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.239288139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.255163656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.250289208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.239563592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.251731256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.249510926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.250695329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.250463951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.238575347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.241842378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.245409035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.24076463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.239797682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.249794484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.251724618 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.251219756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.250247973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.240351925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.242145176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.24046871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.255912525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.243625197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.245596598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.241471336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.250671193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.243549529 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.2409484 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.241829886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.240653085 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.249370912 seconds)
  done (took 201.033893843 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.255161227 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.241105969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.242394909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.254002085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.241295741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.250513724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.242509415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.240382564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.240210623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.252747259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.240848294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.246084432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.241472784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.24191028 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.242718928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.242875645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.241475457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.241519158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.240870941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.24176098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.2421268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.242267033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.241814959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.250677246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.242000873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.251838998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.254835568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.241376473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.242414155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.24130599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.244073863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.258514291 seconds)
  done (took 201.014484427 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.441003962 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.252942809 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.25418444 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.189394061 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.25260095 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.252086501 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.248172687 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.448629132 seconds)
  done (took 13.520407627 seconds)
done (took 599.180713483 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.394444369 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.119673959 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.449580972 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.276169314 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.943116585 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.271390088 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.275969972 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.428463237 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.161875175 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.428078016 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.4403281 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.267921413 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.572490336 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.2703388 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.507551012 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.364430592 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.081445025 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.185685667 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.571799184 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.707275762 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.523905105 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.670666735 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.426896126 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.155161045 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.582798133 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.689213515 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.904908729 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.083567104 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.271822034 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.575758649 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.758048394 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.168867157 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.321456249 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.306399932 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.363499607 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.343032647 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.107034398 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.302066453 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.447735685 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.437613439 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.719705819 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.984402505 seconds)
  done (took 86.045513891 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.241449041 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.241632677 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.241672403 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.24180233 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.244591356 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.240784852 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.240673357 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.241696234 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.241280822 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.241663396 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.241176346 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.24209359 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.242497177 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.243374099 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.241956012 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.242397826 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.242874033 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.24377907 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.242799877 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.24238662 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.242549197 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.242275744 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.242178664 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.242713185 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.242573528 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.242689999 seconds)
  done (took 33.481083915 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.256888155 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.497608947 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.663131897 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.26251519 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.255956052 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.260445871 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.325777103 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.256607333 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.258830838 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.259364477 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.401554199 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.261155904 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.291293827 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.683110993 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.25878989 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.257662279 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.258332241 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.256883859 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.502902907 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.263497372 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.342866605 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.25768273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.325960106 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.266351437 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.275543892 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.256804826 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.262308759 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.772813195 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.257187575 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.405126432 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.939302265 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.321797851 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.724571534 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.674001153 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.940736586 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.258980207 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.259398891 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.407251003 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.256890316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.257298852 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.326378117 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.258456676 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.671252947 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.869398367 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.272735422 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.260738081 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.787799923 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.406933905 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.474485219 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.267529142 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.701058331 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.25962879 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.261335671 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.259574163 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.473084172 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.265466189 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.258656617 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.788388851 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.274292841 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.326151087 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.259443771 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.259901534 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.517591889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.256710835 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.50148831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.258076611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.268090887 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.260234826 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.662489377 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.259745157 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.888633673 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.271479392 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.260863401 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.405196196 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.500820971 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.821905039 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.262846133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.521392525 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.745692019 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.326248619 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.264221219 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.759987716 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.330544732 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.262562273 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.263568221 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.263578551 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.259998332 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.307655471 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.326321743 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.817990242 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.877720747 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.791998495 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.342840026 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.272165007 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.262850858 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.777394441 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.272661391 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.262028345 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.659406183 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.886435612 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.273525357 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.269174467 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.876939466 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.273310544 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.329860256 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.268314006 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.690339692 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.263324666 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.308293785 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.262159902 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.268527108 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.265210561 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.330635823 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.265084144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.262400409 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.860328395 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.426921755 seconds)
  done (took 166.112033372 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.261816423 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.252680359 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.262106455 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.252487156 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.254585387 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.260167673 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.254982323 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.254324508 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.259827991 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.255489426 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.254657749 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.256769564 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.255708874 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.27106423 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.263693328 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.26265869 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.866171088 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.2555768 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.25621122 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.253752945 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.02789385 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.254874748 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.254637308 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.252146697 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.257158651 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.257975231 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.259131143 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.255800654 seconds)
  done (took 149.775293639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.263986255 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.770405965 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.265135159 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.37829357 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.282294666 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.261516646 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.376778825 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.313427956 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.266016719 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.262289702 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.262376166 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.534082167 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.264276228 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.725121223 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.42829467 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.379248382 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.723391057 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.266454431 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.261060546 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.261876164 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.382072678 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.269929887 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.535708857 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.774769734 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.266256457 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.773456575 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.254093264 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.26542024 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.261600745 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.775657757 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.263558358 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.536637326 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.332028917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.316607965 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.776741931 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.72781699 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.727242705 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.392194699 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.264139298 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.263229854 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.26318121 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.253117244 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.771125275 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.264067758 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.265421846 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.767116278 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.277966514 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.266848354 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.273939886 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.263343397 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.317259572 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.317199754 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.53952546 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.777096068 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.330844793 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.28449309 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.380263115 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.619364013 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.267699319 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.728565495 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.253149872 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.776091751 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.269367011 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.254227761 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.266877806 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.272632629 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.396037461 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.380998188 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.730492608 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.266783689 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.729401716 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.397639323 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.264885388 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.264577839 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.268173584 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.77715474 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.728684511 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.397156081 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.383594592 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.436768923 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.256981088 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.265179899 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.257138574 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.333246292 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.266980903 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.782223172 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.731973037 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.271064137 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.267522013 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.268705229 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.269479761 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.421244658 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.783784039 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.336426123 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.723534549 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.555619958 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.544773261 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.268689553 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.319846394 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.267317716 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.545981689 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.269707053 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.316642754 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.680588212 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.543342267 seconds)
  done (took 150.192470157 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.4945634 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.35503126 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.352230927 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.374918973 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.82356854 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.805189496 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.463910404 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.391135111 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.364566484 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.494068327 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.340268164 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.356390778 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.420700804 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.346736156 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.940407492 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.331518247 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.350592115 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.392206447 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.353459978 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.237971055 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.868246651 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.542069929 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.434411793 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.108726428 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.352404015 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.961083639 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.7892954 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.804965006 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.437765043 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.464744876 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.772880027 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.324311147 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.161192875 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.874601423 seconds)
  done (took 61.083655642 seconds)
done (took 647.871885593 seconds)
SAVING RESULT...
DONE!
