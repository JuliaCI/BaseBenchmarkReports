cset: moving following pidspec: 3430
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.357114703 seconds)
loading group "string"... done (took 0.542635187 seconds)
loading group "linalg"... done (took 6.818952742 seconds)
loading group "parallel"... done (took 0.156057024 seconds)
loading group "find"... done (took 1.178094239 seconds)
loading group "tuple"... done (took 1.772747547 seconds)
loading group "dates"... done (took 1.193864123 seconds)
loading group "micro"... done (took 0.293478259 seconds)
loading group "io"... done (took 0.91079513 seconds)
loading group "scalar"... done (took 36.762653274 seconds)
loading group "sparse"... done (took 11.032130097 seconds)
loading group "broadcast"... done (took 0.973217429 seconds)
loading group "union"... done (took 11.971360076 seconds)
loading group "simd"... done (took 4.254519463 seconds)
loading group "random"... done (took 8.573238874 seconds)
loading group "problem"... done (took 1.737811728 seconds)
loading group "array"... done (took 20.194645924 seconds)
loading group "misc"... done (took 1.697486824 seconds)
loading group "sort"... done (took 3.128671207 seconds)
loading group "collection"... done (took 16.834205122 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484532133 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122332296 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114562599 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117853899 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139407768 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114096528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122450407 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082807772 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.798877735 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141163518 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118707856 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414832753 seconds)
done (took 4.872411185 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172677985 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085226173 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08139565 seconds)
  done (took 1.227648209 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064848436 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123205809 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066545546 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066624293 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066194223 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065710367 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065690141 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065925578 seconds)
  done (took 1.581630239 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073329638 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068316957 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068791568 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067922221 seconds)
  done (took 1.335826138 seconds)
done (took 5.453185158 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764889448 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199411324 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183377039 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398947375 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127312219 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162858958 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.697456991 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.301917713 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183563472 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080655677 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103110634 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.322487218 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106700992 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636268793 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077115568 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090326451 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135658721 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433650225 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.0672439 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08307989 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088680223 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127773852 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086510347 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075562681 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143995559 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06763156 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13076778 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080139531 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06634021 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208371789 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172413714 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.646910502 seconds)
  done (took 10.148786576 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097010881 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097803836 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068419079 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123228568 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096683888 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069743517 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070878499 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067230028 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086803522 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127915948 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088877653 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101507255 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065934242 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069206295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084737559 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205303801 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082230318 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081005802 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070236272 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074970418 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105535437 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078541047 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078301592 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077738892 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128206817 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179977789 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097698375 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09692463 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066800357 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080922214 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115198944 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125715272 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065594019 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066698791 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124383602 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09492258 seconds)
  done (took 4.509853638 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.911707823 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139260431 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090129572 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161617861 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067393667 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106862035 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065498107 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084221636 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200009588 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.060061499 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.430801397 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110730374 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084503041 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067332626 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068415033 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067108583 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.367987843 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110187218 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112734458 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084004706 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074527239 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06948994 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34236483 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067073097 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06679246 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068769267 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058340704 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113211172 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06794153 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.082005959 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071141636 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116560281 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067018322 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08384548 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100141573 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088180098 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13424944 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065676549 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064784761 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147712003 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072910141 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065131574 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081098742 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101430562 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.100419119 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067029584 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194549205 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16245196 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066735192 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083770552 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.71581877 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154743399 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076138329 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0668308 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247640436 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085610921 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066374664 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064976182 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180206372 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129164195 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067318499 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066671779 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066560522 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067776233 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.357769172 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068620908 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.891502558 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069932761 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076532202 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069107008 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066613114 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072694406 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072687379 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085098636 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066187045 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068495586 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066029269 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065811959 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068856455 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063968861 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084770287 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188914314 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066335041 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067090962 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064779488 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086288592 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096541622 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06871518 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069696668 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099894148 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067746342 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067112739 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101760011 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066870094 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090032868 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063796904 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083320115 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068971056 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112890448 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067437384 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.0874741 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066592418 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095441686 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06737053 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098689244 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076749861 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.160023232 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.217785846 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064951632 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065343073 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066434829 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068521826 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067369904 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068623732 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079401749 seconds)
  done (took 19.985498911 seconds)
done (took 36.610910481 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.27569237 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074939583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075398003 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075379637 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075317832 seconds)
  done (took 1.731248193 seconds)
done (took 2.862096252 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119805571 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098771184 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064603977 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095301749 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06400936 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100222423 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099380964 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081080988 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099386753 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064312387 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096215324 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064208302 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064007838 seconds)
  done (took 2.269872213 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084197587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082864515 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069031533 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082027445 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063458559 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08228203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080890122 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088263544 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08048207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072352933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06375398 seconds)
  done (took 1.982304321 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083064293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084032271 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069203829 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082066555 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063689538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081480984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08089305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08537739 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081205294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073131118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063570045 seconds)
  done (took 1.971370239 seconds)
done (took 7.348745961 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078199603 seconds)
  done (took 1.191424553 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59342797 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.192529728 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081718757 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112341618 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183964738 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122236431 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280010852 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086681044 seconds)
  done (took 8.957410002 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089038583 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081767136 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070227042 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069977767 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071523906 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068392936 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070950379 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068805359 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071810853 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069847114 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072027468 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071353254 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07221236 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070304845 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068404544 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072009677 seconds)
  done (took 2.361741426 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092265498 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091034071 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072818842 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074817268 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072085575 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072486932 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074428069 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07353201 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071280899 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072514952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074589061 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073474925 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072226147 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065447785 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074388898 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075385173 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071344599 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073966194 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075418956 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074856584 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074600373 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06427016 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071285062 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073912648 seconds)
  done (took 3.014274568 seconds)
done (took 16.648106056 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114434771 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071449082 seconds)
  done (took 1.312168033 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083061129 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082782927 seconds)
  done (took 1.303527989 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083805929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066029465 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090681956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078046614 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066067569 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066687182 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087366943 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066118281 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065736091 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066042056 seconds)
  done (took 1.872145657 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070204274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077618649 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070798833 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081011077 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073337959 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064124153 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072284543 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067696823 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077583044 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063735242 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071177502 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082353007 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070810732 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083888967 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072290364 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068328764 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070407349 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067323845 seconds)
  done (took 2.443127261 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067754275 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067404141 seconds)
  done (took 1.276740294 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069177506 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063691595 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066890637 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066107257 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063298157 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062710249 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063497753 seconds)
  done (took 1.590542534 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379429658 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109909624 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294365444 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070481495 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081580812 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250002556 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065452387 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070463139 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071116254 seconds)
  done (took 2.572179713 seconds)
done (took 13.511200057 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080643618 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084929107 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094873818 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.342505613 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092006354 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065687507 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113330345 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190951241 seconds)
done (took 2.211930594 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208750514 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.571514903 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.370995474 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195167263 seconds)
  done (took 2.273960693 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.319963455 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091570932 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058806888 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066659565 seconds)
  done (took 1.687975798 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067377672 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068754696 seconds)
  done (took 1.280867594 seconds)
done (took 6.59689996 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067640742 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082727242 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065827821 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063959349 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065947287 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063402223 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063892811 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065770221 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066311874 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065863218 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068342506 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06586355 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06361901 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063821807 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065555155 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06336454 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063724959 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065704008 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063401972 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063972607 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065747708 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063331554 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066917752 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065912681 seconds)
  done (took 2.761377859 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085570295 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066639172 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07127374 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070697962 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070442244 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0715012 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071167065 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066563693 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071236281 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068200093 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070065372 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070143375 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067823687 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069979709 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068052513 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070332291 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071188951 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066356772 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068371043 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070229573 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071344121 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0667325 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069922301 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071284898 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070005483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070095863 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067980995 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06634199 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071341118 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069917235 seconds)
  done (took 3.255380063 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071903431 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064039989 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064579184 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070712392 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063828581 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064835233 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063388672 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064065612 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064515481 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063503793 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065400115 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063645532 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063384627 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064593294 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064355229 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067312903 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078808963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064135372 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063771341 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064840578 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067140304 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063553338 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063874955 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063628389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063379626 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0633553 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064128707 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063568456 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064215018 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063534212 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066388967 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067084315 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063564278 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069885931 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066927835 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063090442 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067845439 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063130983 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065660828 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06324585 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063150654 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063747138 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063499492 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070126866 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063793465 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065048787 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063845495 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064816399 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063851309 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066318088 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062807244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063134992 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064837729 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06442904 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067352976 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062853651 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064329838 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062963841 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064650924 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063291708 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063288431 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062949036 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065563333 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063911105 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077880436 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070360397 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063028047 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065054752 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064398612 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065566399 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064864585 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076116159 seconds)
  done (took 5.866403295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093550251 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.200173275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065580545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065230428 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062248632 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065914579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067481442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063982229 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065229551 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069599364 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064154903 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065099786 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065048451 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076876299 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064144245 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065497104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069683812 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061759356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063572909 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067123027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064183098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06733525 seconds)
  done (took 2.781811057 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157693578 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070309062 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105947098 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07315856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067581901 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072963526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069577439 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070087306 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069913692 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068020388 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067953461 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069784628 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067791792 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067839729 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068047541 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068016009 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070224649 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068879084 seconds)
  done (took 2.538606695 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079121917 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066223155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085747792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066226223 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066221072 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068033064 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070730523 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074340669 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068204899 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06585815 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074737858 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068028149 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068026368 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065634932 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068006918 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066030817 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068705331 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065457317 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074718751 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070302154 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070704567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074164303 seconds)
  done (took 2.710939139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080258884 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068577675 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082658013 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069000533 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062050357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064556638 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070050114 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065924747 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070276691 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067736816 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065881643 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064263115 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069998069 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066065257 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069458891 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066244313 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067417522 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0659017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067323037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062245767 seconds)
  done (took 2.532251815 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087456808 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067578689 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068277798 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075956729 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067493504 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067732208 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075313605 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067489856 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067125938 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087186568 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0671195 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067079836 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075564639 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071953235 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067323473 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074671498 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074906139 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075306209 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067069256 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067379223 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086949685 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067173591 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075049299 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067453396 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067505283 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067246575 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067633192 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072729992 seconds)
  done (took 3.179300301 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068380517 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066662608 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06342028 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063322753 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063254472 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063523828 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063526035 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063364447 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065992841 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063430064 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066155866 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065745504 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065999487 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066154279 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066325039 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065762116 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066219267 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063488757 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063225896 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063540617 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065803798 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06592424 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065828001 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063436002 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06344486 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065987576 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063985283 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06354841 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06583159 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063358553 seconds)
  done (took 3.116584326 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076005373 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073102731 seconds)
  done (took 1.32193791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065033578 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079830771 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062982124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069787731 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069746555 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066090433 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07409356 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069852468 seconds)
  done (took 1.725196013 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082470953 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077041383 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067666235 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080329738 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076388927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083046479 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132995782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067178151 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072855201 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064180897 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079478853 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064988515 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072341815 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066091191 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071623806 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072959411 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064244632 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072438329 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068783012 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065415484 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067289842 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074945899 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068310759 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061689818 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067255265 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088367664 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077318041 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065917488 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068910838 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073269503 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071503365 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06033324 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065847281 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066485555 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064428795 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075734551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081124456 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068990219 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074639111 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067282231 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077346303 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061652042 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071230583 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073006022 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076427411 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067069891 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067191578 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061861767 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064437529 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069018148 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061857433 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066574939 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061202333 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07634505 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070187864 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07722266 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065245969 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068146473 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069123544 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069687022 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073533859 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068750628 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068755429 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066353637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076208098 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071249694 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075559793 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061550952 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060848529 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064493685 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076008836 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088971724 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072885469 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067230283 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067078605 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064286579 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0693911 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067258409 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072092154 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072403751 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066091359 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071788447 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073694303 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066458053 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068489125 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074835511 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064112498 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068256599 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063290956 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080814258 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063919611 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063280997 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063092367 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076115656 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068445757 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064646424 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062921477 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072009435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05934082 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065557691 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066467241 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065833498 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075265012 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069481348 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069921401 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073425693 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072614109 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06528484 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068002142 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062169103 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066484088 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064905495 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072605288 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059226769 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06794313 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066110887 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06528489 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197698572 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06548295 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067568815 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074903731 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073408637 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065934687 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064401194 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07047136 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066527429 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069433138 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074667047 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065435747 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062712175 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061695349 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070322918 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06634431 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070307616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071834711 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070506168 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061598828 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065157229 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072153344 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075320856 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067239737 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067492788 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07340274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068462494 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066081092 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073284203 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069350514 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065783663 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071717531 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067226704 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.0621045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069793735 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069505963 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064926347 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070756112 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069539047 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069120681 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067564247 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065919219 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074757763 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067504165 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065869324 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066592577 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065625447 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077337556 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069403699 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062070492 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064379699 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075885539 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064770957 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066253804 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065807144 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068812632 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067684126 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064375786 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066062221 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068709706 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077098747 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070976094 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067795519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071694232 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077716628 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066372391 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069353173 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066177323 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067226026 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067222478 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07501993 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071596107 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071102182 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068451559 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063149466 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072058888 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07354221 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065343379 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063964128 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065455248 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070827263 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071661302 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070345097 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066940348 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064115392 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066958734 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069355948 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068687708 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06595089 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065477644 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072793282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064734913 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073335071 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067291707 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076195432 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069079373 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060655097 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068446751 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063571621 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071049368 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060357637 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063839857 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064858117 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066160183 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064166384 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067480959 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0593827 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072158908 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072756445 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065758964 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064731359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065011125 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07183993 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066822197 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068882156 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068746837 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071249192 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075603737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0642422 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068476001 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065506106 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059667039 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07047756 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063913287 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064275375 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064343599 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063551061 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068315243 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073954374 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071747962 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059987069 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06747302 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06358374 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064317768 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060427926 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069352791 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.067866357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066354573 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071630642 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066019617 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06586846 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069168179 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064875871 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06590419 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065996356 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067959871 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065474859 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067081256 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06443427 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067735681 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064378935 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063100287 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066902686 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064686424 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065382696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07020167 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064490935 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065354672 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067800922 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065535055 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06649423 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064639773 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064239039 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067543978 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065547964 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065047031 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066863099 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059409363 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070881418 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063751142 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071346549 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06474684 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061321839 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070812172 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06616173 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068585687 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063957358 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065271561 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065688386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064146947 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066720762 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070503846 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062177083 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073950362 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071117587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065128625 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067471626 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064439775 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065724206 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063842963 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065380859 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064796809 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064663167 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063349665 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068525397 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067036468 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065305654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066452143 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064874724 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064938792 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065288426 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059004417 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063979073 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064249115 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064126469 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073458907 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065208038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06398848 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063245776 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06482105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062625586 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061008193 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070818058 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072331161 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06426126 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070915824 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063613138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065442631 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073540383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059348997 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062257912 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061495529 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06236947 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071052681 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064879455 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0727048 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064293373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063952074 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062684797 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064892684 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062973998 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059562956 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062385994 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067650743 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063093889 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062972362 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064121525 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0664767 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064861149 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07306924 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063775571 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065568924 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064328004 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061516618 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063500376 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.297829521 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070309632 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068907291 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065873538 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06600326 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068696507 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0702506 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06997374 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068439278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070205101 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078159942 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068088651 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071085763 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071793965 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063133242 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070826975 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068396834 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068061762 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067187531 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07171367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071542277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068753962 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076614342 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06695665 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06849122 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067725563 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065376721 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067354916 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067608465 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067759131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067137716 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068954847 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075331709 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065078389 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070267639 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067795159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068178315 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073888639 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068046733 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070428054 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073902061 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067638881 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068716604 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075433419 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071436208 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070799758 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068192815 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068961708 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073160559 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066552618 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074314074 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067976788 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068082781 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068634192 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065376719 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06725169 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067103046 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066181443 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07354917 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067914828 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06693392 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066317845 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064948884 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068060153 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070160172 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074758895 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069409055 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069921786 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062097252 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064003867 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068212964 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065171847 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06892791 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069462455 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072369104 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068717199 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067063781 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065900516 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076189182 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072656875 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070663451 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065037183 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070409007 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06798666 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069375395 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068425289 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067324699 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068292723 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071414185 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068581678 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065981828 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073482745 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069714321 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067422079 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068381188 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06716156 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06706996 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061957754 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067285987 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06840426 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071905147 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068779801 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066684514 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076914458 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064397006 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067101514 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069604112 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065674513 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071382358 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061935514 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067738182 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067089981 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067058227 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061579897 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065452591 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06436336 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068494739 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065564389 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062098798 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076410051 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075588071 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06891617 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064975909 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064889036 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061253916 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.19612126 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067088501 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068796802 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069451709 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076802759 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066778308 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066137951 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062864058 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067283622 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069540146 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069913514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063802545 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06214416 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066149929 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070152156 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072334399 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065687419 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066522468 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06969357 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068640266 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064387094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07003709 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063492016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070286171 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079044502 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067458837 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067465293 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07291074 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074793896 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067538855 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062265394 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067553221 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069831131 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066879209 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067569769 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067614626 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08189142 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069769677 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06631591 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06564986 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069376624 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066310996 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074860709 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06754713 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067249029 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071312899 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069198871 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076167159 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069846698 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075415503 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069655876 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069856874 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066268747 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067424181 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06484838 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065923096 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068124674 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067307334 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072154791 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074883357 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065986523 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077579302 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075912483 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069037211 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063971774 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066330601 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066478698 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062253707 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067668902 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065568223 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065201672 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065106156 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065667895 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06784975 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07205496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067937295 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067354379 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066668961 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061410538 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069265608 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069201201 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0677124 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063353303 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066410118 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067204921 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070541671 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069949457 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06421206 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068374944 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068131165 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066857251 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061455941 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072679264 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064998196 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067916169 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065614893 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066064795 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067057776 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0697984 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070911146 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067210797 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068593861 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070049854 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06897621 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063845941 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064384811 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071895191 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064435134 seconds)
  done (took 42.321452303 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103507236 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064626413 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063474965 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06312495 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074790887 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063681541 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062454442 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063475465 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063377641 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065713276 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062452514 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062432126 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071393094 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078765042 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074963837 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067132636 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062876775 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063534422 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06285285 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063590071 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071697291 seconds)
  done (took 2.755658489 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075589204 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070372804 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072864703 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076479988 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06778795 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070995054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073238542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070836883 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076687054 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067771302 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076586444 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07127408 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076424596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067955505 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068017994 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071294842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076706068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068204269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071200535 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073137853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071612698 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073200762 seconds)
  done (took 2.872104369 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069340463 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06668968 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06797099 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061876795 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066380189 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061716041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070221695 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064581274 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069847283 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065720011 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06578441 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065829889 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068577276 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062327422 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066946954 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064501123 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110191753 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069915645 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066332498 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067372884 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062366001 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068669371 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062394216 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062342659 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065319321 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069876028 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067195141 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064374317 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066274132 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065624456 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066261872 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064420766 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067869638 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066714561 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065874364 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065743358 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066325852 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066125274 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062052297 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064408504 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067122086 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062355593 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06679475 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067935601 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06453514 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064167708 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067965265 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066205006 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061667177 seconds)
  done (took 4.557225 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081569059 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10969391 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068108394 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089852127 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080966045 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076230159 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069942004 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090231787 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064024979 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06491543 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082384359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080342323 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066576646 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07121235 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073178702 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066221669 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067773529 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065603354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070288979 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065916886 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069963646 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07280562 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080486469 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079351301 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070179844 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0653712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065599614 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070573568 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079084741 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070765066 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07085783 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071439622 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081009828 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071311679 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06548458 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068340823 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08184434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066656155 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068649358 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064064679 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068129947 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069826 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07256197 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08184627 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066233047 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070579869 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066047842 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06326383 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078678982 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067964897 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073771802 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080233203 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069370922 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065941453 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070397708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080276939 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065969432 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064405207 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069140417 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078338474 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063458892 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069795294 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079230285 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067683807 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073007517 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08020653 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071282972 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069640744 seconds)
  done (took 6.361733409 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076967199 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073019772 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081191305 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080454369 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072825566 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073035583 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072583136 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072333327 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071831981 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077535442 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072674712 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093823353 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067933212 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075485165 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072719108 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072939559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072472616 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073164154 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072553145 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072572208 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072482092 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080174769 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07269328 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080517946 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09889588 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067912763 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072628541 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073028905 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080924303 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072962137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079898616 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072488917 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073023066 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080628106 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080002848 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072374265 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065853824 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072176555 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072327216 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07248736 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067965715 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08027963 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072042864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067851286 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072753519 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07199885 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080505193 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079330598 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075127038 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0770397 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072574684 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080297728 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072082454 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072369242 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080231905 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104958875 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079982494 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080188398 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07259049 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079798026 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080483584 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086718218 seconds)
  done (took 6.02860966 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085076719 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0751024 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076290288 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061935433 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064243685 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069759818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064124177 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064298902 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074585062 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074843612 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077024971 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069752604 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072840821 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076828553 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070124277 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073315794 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069791603 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0700743 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074654324 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069872136 seconds)
  done (took 2.747201566 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075576613 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083815842 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067272366 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0721122 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069170473 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07212448 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068282882 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069712474 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067119674 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069315812 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076027935 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076214309 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066935211 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072144318 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075617327 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072266391 seconds)
  done (took 2.456399461 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076718093 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072541789 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079623248 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06655239 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064357339 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06252316 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066260476 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061988891 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062875399 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07860427 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065941232 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068600249 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065972852 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064756473 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063161318 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068481575 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062547416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063639355 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0659473 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078033954 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077062074 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064871529 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066811851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065767956 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065992119 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070963007 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065632524 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063649218 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063819337 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066580984 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066440596 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06939519 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063225198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064466397 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064823409 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063813031 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06607579 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066426534 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068469972 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065550489 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063704111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065784887 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065936723 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066974746 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062248801 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066793443 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062143793 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067924115 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063661805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066263913 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065244852 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068297479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066210462 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072497623 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068567762 seconds)
  done (took 4.984881071 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080129311 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069343171 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06199721 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063810676 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068575587 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067559278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069390292 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067526929 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067899634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064083909 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067967581 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068782039 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067688302 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069564506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068125615 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069511959 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062314596 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067783161 seconds)
  done (took 2.539490198 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071780848 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065754659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072298107 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066616673 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065887572 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068250317 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061993283 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064354855 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064449537 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066284889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065910282 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068234994 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064427324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068083912 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065942275 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066031913 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068350541 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0649218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066259092 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062112768 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068261618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064663095 seconds)
  done (took 2.770176137 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073080113 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092207253 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.13885336 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08388256 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081578756 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078754456 seconds)
  done (took 1.859436777 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091806389 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079550084 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066161458 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087842681 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073746279 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067620582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067216456 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067772272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075960543 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076317601 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067627757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07612021 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076148718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075978608 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073215876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073434035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067506639 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067371477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066275054 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084774572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067489624 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076074808 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06832199 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06735787 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068084797 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075530021 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07629929 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076803963 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067536362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07651382 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073111304 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067634438 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07644459 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076577632 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069252161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076453482 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067576677 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084894062 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073721831 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075735072 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069409653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074030839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07708974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073106125 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076429433 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068060784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072377323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068089182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067877883 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086559326 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073454039 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075483426 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073817632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07674001 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076525138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086220138 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076703371 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07539341 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073522302 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07932531 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075757736 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073532329 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075753854 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076883661 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07384339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075744938 seconds)
  done (took 6.213914329 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083664851 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086342012 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067816853 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076517157 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075508563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067541876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067682479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067666483 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067636321 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067714606 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107526398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068059279 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075844315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075978574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067977719 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067789259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067998283 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075648381 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067694957 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086891111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067856713 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075990944 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075436171 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075607701 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07700446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073705802 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067672708 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06808184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067712243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067634068 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072949154 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068006194 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075707408 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067520124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07570389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067992033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067815479 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073052549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067909432 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073238123 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076252249 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084326496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068055157 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067863082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077125804 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068110429 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068068167 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067873833 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067965265 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067745101 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076700481 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076322917 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07686586 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075991429 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068077423 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068198174 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067745654 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067738449 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068013368 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073342425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075506007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067673402 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087077617 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067774366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067616787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076120817 seconds)
  done (took 6.125908539 seconds)
done (took 127.525846506 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185190666 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16946382 seconds)
  done (took 1.662952673 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069669353 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096145466 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077487242 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129389912 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066666524 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10007841 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098559862 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077918549 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066360751 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06621053 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066532617 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067938211 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131431105 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066509025 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066552254 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068132648 seconds)
  done (took 2.638804055 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098635568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174426374 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100241786 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065288164 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097348378 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073485387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064906323 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075054016 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071214209 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065197551 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073535535 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070880797 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06525217 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070986327 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071329498 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072924775 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064937938 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073495546 seconds)
  done (took 2.776983183 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104046104 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090968643 seconds)
  done (took 1.523055056 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162138905 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106041858 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151805977 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.336751451 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162716493 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231689196 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129313632 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128856717 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121273702 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123832335 seconds)
  done (took 2.978276179 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100458164 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148279508 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257798437 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116319576 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07267847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091981791 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116522638 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077583234 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078589672 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078041453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07789779 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076105138 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096381217 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074377347 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074092976 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07621186 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100023781 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07313499 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076058695 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074279921 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097470724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06622044 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074083473 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072529406 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075712198 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074943099 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065893478 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066157965 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074316924 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073759454 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076914226 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09062822 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075084039 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105799828 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070077084 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106697603 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07660002 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071694451 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073989114 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072112335 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076231434 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075974059 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072343305 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076627687 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065884612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077185579 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065705781 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065616934 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078450152 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067192501 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078755038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077230736 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106027733 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06698674 seconds)
  done (took 5.907697972 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.670914605 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103454219 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070351096 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108651295 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09634829 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072792195 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.692837531 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090757208 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.179814893 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09192025 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08847129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070574602 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081218264 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08344524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111038886 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102390418 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0937718 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071331225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101700389 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099556019 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068167022 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09394679 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09029869 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.375433024 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067259745 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06966615 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06792399 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070034884 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.111334374 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078565354 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070223444 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.12207643 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084721596 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.122144719 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066959625 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068039368 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067789192 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079427986 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.186377884 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.135121754 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.130674595 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067355167 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067922017 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069039579 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089694156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067237738 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.111256922 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080283094 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.120152507 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069652175 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069709553 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067675903 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069142946 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079493685 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07742005 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080193603 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.233685611 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067939791 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067948939 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070416171 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.185508782 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079198896 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078849644 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091886 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131103367 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067662198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745456313 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083841408 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067508606 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069129347 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067373478 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069010745 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068269766 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245351777 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.344517973 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070800052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071255445 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068298137 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.164155256 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078686886 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06861618 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.113371023 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068042105 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068571848 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070516036 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070649797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.120199214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079890434 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070325228 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068670115 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070503353 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068645398 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068406985 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.16804249 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081022107 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080076769 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.164334049 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069748662 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113484539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079401384 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070522568 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079926102 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068982417 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070190148 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069705024 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079554859 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.09720872 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080104275 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069985295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068192627 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.099636668 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080656456 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068502292 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080028748 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.397354601 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080025745 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067320959 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081696601 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068529547 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.112726186 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070418398 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.183459198 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069254665 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079392918 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069017994 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067402796 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068381639 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.111664008 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070103324 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068791943 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0694429 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070191037 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080209213 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.135195678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070405048 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.163230314 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.133902941 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069927466 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120441217 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068419619 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117103067 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069492462 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068969163 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066904075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753406511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067855629 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068090792 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069496345 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136704098 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067892043 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079459841 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076953117 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066955713 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743383258 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078413063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075622709 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.209473361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071158894 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069880118 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068977281 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070408683 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.110517061 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.146405886 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070652444 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068833907 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077614412 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.113458022 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067624004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07887457 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078627431 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078577652 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069353613 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070041398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081011954 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.11928524 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078514729 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.138693762 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.516178772 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069018698 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077713531 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144579987 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069080733 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085617007 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068129022 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083359967 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.114130876 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077219868 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.232335886 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.114746 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.13920377 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080185348 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082733497 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068393719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068007939 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080095141 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068084228 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070110143 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078375707 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07000988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069992023 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084126669 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068712033 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.179743085 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067614656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07937241 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067299811 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070414817 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083470912 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068632204 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070373461 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07965608 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070181816 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078133763 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.642032053 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07795161 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067690052 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069373385 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.136020235 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.11392101 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068116524 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067966367 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069785429 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.109971169 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.161705418 seconds)
  done (took 28.353383055 seconds)
done (took 47.178012715 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211887673 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150709304 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202688508 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118113444 seconds)
  done (took 2.111166824 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122509811 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1008517 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094941263 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064901672 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101670688 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065100688 seconds)
  done (took 1.922113866 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311040678 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211195058 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182257151 seconds)
  done (took 2.07339854 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19672886 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187601666 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394588194 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253965516 seconds)
  done (took 2.518029397 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14308604 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089455592 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066889467 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083345308 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135081687 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162113695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101633886 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126976535 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078523708 seconds)
  done (took 2.417377935 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145720553 seconds)
done (took 12.562999281 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096090199 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.245812852 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179243589 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.148364241 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.187519674 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.190177783 seconds)
    (7/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168901411 seconds)
    (8/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.168176707 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071338956 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.121657915 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081157088 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077508489 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07369507 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.162224586 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079574199 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.175144068 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075214695 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087828535 seconds)
    (19/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159386337 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169763759 seconds)
    (21/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.148951866 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184902077 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19007945 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106304095 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.190687734 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080305208 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078223687 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077172943 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071571976 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196899386 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071384047 seconds)
    (32/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169931927 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109987102 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070955746 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065458635 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051929314 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072471177 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090532953 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137969844 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076810248 seconds)
    (41/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091273731 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.166981952 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100543549 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167974944 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072380159 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072722164 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.146621741 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072361423 seconds)
    (49/309) benchmarking ("sort", Float64, false)...
    done (took 0.125281421 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07248179 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129215975 seconds)
    (52/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.09167794 seconds)
    (53/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.156691712 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091644655 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052552395 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.180172485 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066868712 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100971229 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073843988 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134386699 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099122074 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071274496 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.1471121 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092751945 seconds)
    (65/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090461842 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066126057 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086074658 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064616047 seconds)
    (69/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050491373 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.162724231 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064931438 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050725428 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063882926 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053930945 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109312187 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073511848 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177115904 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.162565594 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052558092 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09687348 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075393245 seconds)
    (82/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.13568846 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051999085 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069975967 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081296963 seconds)
    (86/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088554052 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.065782423 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.315235018 seconds)
    (89/309) benchmarking ("sort", Int8, false)...
    done (took 0.141010534 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067823198 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091618674 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068723776 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051344901 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079512473 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.187520176 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074413927 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101120783 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052587111 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096399373 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05240054 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224185353 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091874573 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.13843181 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051442963 seconds)
    (105/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107656551 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050754842 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093276003 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091896908 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069184871 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.138486444 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073919606 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159123991 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091736211 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065612472 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144531642 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172281125 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130559466 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067166134 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065890149 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101601929 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.294833919 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072896884 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.134153233 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074157989 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075857176 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108492495 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072418366 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088908899 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071210275 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100366311 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091385163 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075786942 seconds)
    (133/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100412178 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050717001 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066379507 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098161844 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080829516 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071825073 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072230076 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091622433 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076260099 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.171323467 seconds)
    (143/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085651109 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102120606 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115056716 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065040571 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072228827 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052240901 seconds)
    (149/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108180639 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133946038 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05118287 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061123757 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14509245 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073233924 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064922483 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089781451 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.151931186 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072489367 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076336515 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050672639 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07817123 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071064408 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050954029 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072026731 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145223663 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052373378 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105356652 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 0.127372456 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087507767 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135884377 seconds)
    (171/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147893794 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07261007 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170847557 seconds)
    (174/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070871339 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051813447 seconds)
    (176/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051786803 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108446767 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064732282 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074039743 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065627033 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050582265 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071961752 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174463809 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090122701 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052148293 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06734678 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073361536 seconds)
    (188/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051407209 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052051139 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050912463 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068362268 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.169389791 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052559824 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06611991 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0748588 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.22516645 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.164852804 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066062436 seconds)
    (199/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073725859 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123131021 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104402738 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065563353 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068973959 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060993249 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065894043 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051775083 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166548809 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066644834 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095010905 seconds)
    (210/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076710845 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072663419 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074730657 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065979258 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053271956 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082752045 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051424374 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134640024 seconds)
    (218/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073456227 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071746744 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065811164 seconds)
    (221/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070327725 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052453049 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05124591 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050896282 seconds)
    (225/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074278559 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064833916 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06543213 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067113922 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066225089 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073069693 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071608248 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105045059 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062462146 seconds)
    (234/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06236492 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138845957 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067832437 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072107673 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08694012 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053916956 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071223346 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06755224 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08865777 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075701104 seconds)
    (244/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062322646 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136975021 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073345553 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063225014 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065284221 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072473802 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052730609 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064919044 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092393857 seconds)
    (253/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051133081 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052485211 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112556309 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065546615 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06624541 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087104278 seconds)
    (259/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051038641 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071449437 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109870063 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051284084 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06795529 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064548443 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072775848 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052578451 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051048348 seconds)
    (268/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052088619 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065175388 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107955356 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05121871 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145253229 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065049294 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067281712 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052757 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052756952 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086244851 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067357155 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07299115 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064025154 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065349521 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096706218 seconds)
    (283/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184609356 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063876242 seconds)
    (285/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052184044 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051903957 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066328665 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141699097 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090033695 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073257325 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066327466 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086597554 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051426682 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051164966 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051126997 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086547443 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071085552 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050856051 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050911298 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102082773 seconds)
    (301/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051040434 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065208311 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072810856 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062675053 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070798159 seconds)
    (306/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062008436 seconds)
    (307/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062812189 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066000543 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069550991 seconds)
  done (took 30.263803461 seconds)
done (took 31.648957602 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085608217 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092834927 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074654186 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092236258 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080460314 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076688741 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07235929 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078237821 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07991858 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081625518 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079157975 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054914253 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074247483 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074238162 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074668319 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091053357 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077773479 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072270112 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073076166 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064921465 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072675726 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065318125 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066934409 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054845665 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078518626 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071000423 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072042839 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07348885 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065575613 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0659957 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068826964 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072726882 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06560482 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077994769 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071598473 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072741705 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074488703 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076349595 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067138335 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066228946 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073347481 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065645324 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072741592 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073305324 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071621888 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071065924 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073175048 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078341511 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091305356 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068000171 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074109204 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076828363 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076126447 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072161907 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069101221 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072855508 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070711248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091504942 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073109998 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067667672 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073686387 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073779181 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070665236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072855615 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073237669 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074794089 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074793532 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070643563 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074324721 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070884588 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065590888 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073105043 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068921366 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065413278 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075150213 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076506798 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064594608 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070695277 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072216908 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071016738 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064517061 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067284813 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066922737 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071245 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067443482 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054369996 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069069616 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071123054 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06420372 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072891192 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071332457 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071792451 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066935479 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075337397 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06503105 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07028366 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065198297 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065346218 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066931903 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069339082 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064693976 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067145032 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073695115 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067008284 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071280359 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.0791531 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06505972 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071286612 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064386497 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064555157 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079547621 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074373887 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065212545 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068274804 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064520096 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072312346 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064376542 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065400624 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065342146 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064973398 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070666048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06462952 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066630148 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07154708 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076236291 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06401922 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067304315 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066245237 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064512434 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069289857 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064253892 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064360222 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200961706 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062353207 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067948679 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066418443 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073227024 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067882507 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072834764 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067236504 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073893239 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069769983 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071584737 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070797888 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064776465 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058836413 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067739811 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068276006 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067521852 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065445663 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067602928 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065675957 seconds)
done (took 12.399595163 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06774995 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143412094 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098992412 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095706362 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085723287 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066324139 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075888806 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101656555 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067821333 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10234199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087312363 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084442085 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112391475 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064605056 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065426732 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06935374 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067187821 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081278992 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101181982 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085975434 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109349391 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065372882 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095211032 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090319224 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087309884 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10168889 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067069983 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069635549 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069333864 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091133283 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086421558 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069611172 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066591439 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10097871 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092386149 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083794975 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066548211 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082444752 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066642071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065754803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.081520652 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09817125 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080165071 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080215517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069833402 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069345344 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067104457 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083604172 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089254878 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078347592 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086325412 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103116984 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068972088 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065955904 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064759943 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085220924 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06538697 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069148693 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066273816 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068314975 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066102252 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069084174 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081063223 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086806766 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069386826 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08024095 seconds)
  done (took 6.78605759 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084834319 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089977249 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08264032 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08252488 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065725777 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066327822 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066429274 seconds)
  done (took 2.018234963 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068230007 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088195399 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088578871 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088752874 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084484436 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087240471 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07564138 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066711052 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080518579 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067586835 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087603503 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101436812 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066714346 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072718321 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090276536 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066666076 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089922098 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066667356 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069606063 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0899092 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068958843 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082457979 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069870562 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066773596 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080530991 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066906001 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112629576 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070853546 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068242593 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069796184 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064748527 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105895835 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080044911 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075715801 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066407812 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080632292 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080581286 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064555605 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082505029 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072255489 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080250671 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066699375 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067091736 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064399239 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071060982 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076956981 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067737233 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066993099 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068882838 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086517231 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067319601 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080444019 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071277914 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069261293 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068118248 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070963248 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076742752 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067718206 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086778117 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068295471 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083310101 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082746787 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080220062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082790436 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068951427 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079907253 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080477239 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069112755 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068587483 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070186228 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082559307 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064800726 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067955822 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076915209 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068433667 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089272328 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089726551 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067944091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075593004 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067210501 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066440267 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066272486 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089096865 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069106556 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067174175 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070289531 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069713096 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06503184 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065790717 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070107662 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064860542 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068407736 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069776836 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070229716 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06924361 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08352276 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069110226 seconds)
  done (took 8.750622498 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070361119 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068167426 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069191392 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067371116 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068038186 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068128509 seconds)
  done (took 1.918429787 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095283742 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069476694 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08025482 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07296391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10457693 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086628901 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087199636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07900916 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083721684 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079208902 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086621044 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088735032 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092511457 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072745257 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087128523 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071702096 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087134533 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076112541 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078866474 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073189814 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086929918 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073658293 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073715562 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081793006 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075773042 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072138961 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067964017 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078741673 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078662738 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079025436 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072754408 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07592464 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070817269 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078899737 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087249231 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070687168 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071940379 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07723438 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072610987 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075629022 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087959702 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073096102 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074803068 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077433897 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07852347 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070826581 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077396413 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076367597 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086220642 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07694192 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.0766262 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071615963 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075733464 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077203891 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070261662 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078282257 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076874588 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086418933 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072115949 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070424313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069089583 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075367778 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077894843 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075203303 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078790293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076931532 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070353143 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072663407 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073160987 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072212759 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077466701 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069874378 seconds)
  done (took 7.080617291 seconds)
done (took 28.016428587 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545123017 seconds)
  done (took 2.015679528 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623934903 seconds)
  done (took 2.121646554 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.369725789 seconds)
  done (took 7.861368242 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398824736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.515440271 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716232285 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130727935 seconds)
  done (took 3.288285982 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.665145042 seconds)
  done (took 2.173159225 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214075224 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197127705 seconds)
  done (took 1.926064321 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371361351 seconds)
  done (took 1.862844862 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101945139 seconds)
  done (took 2.597706899 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263849848 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163122815 seconds)
  done (took 1.923161981 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462019516 seconds)
  done (took 1.955848418 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.859205367 seconds)
  done (took 6.356086836 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208597765 seconds)
  done (took 1.754353928 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240844881 seconds)
  done (took 1.742787166 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.706149751 seconds)
  done (took 3.199621761 seconds)
done (took 42.282566159 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080409005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080705005 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079879213 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077413009 seconds)
  done (took 1.798037355 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077702267 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072136233 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075899356 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072535012 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075999053 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072950618 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073755805 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076736289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072211319 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072561146 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072357941 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07221252 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074835998 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073755302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070745553 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074534906 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075858875 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072358198 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075379311 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072464916 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070754568 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074648415 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074596773 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07173835 seconds)
  done (took 3.271695855 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078593772 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072414783 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075035138 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071547601 seconds)
  done (took 1.806947853 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077828147 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092579047 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08841458 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078030175 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092195107 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08583137 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068731222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068911617 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07307547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077110486 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067594734 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096051847 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087426675 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076466692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078958691 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065742911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068107103 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086732928 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077057934 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077362074 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069480799 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076706661 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067741971 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087977043 seconds)
  done (took 3.391409247 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078459235 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102517377 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077505719 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087505817 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089132443 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065262644 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074262781 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089254954 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122451972 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064949879 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069608024 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065384106 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072598355 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065177525 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075862206 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104658349 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107220471 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068436277 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095443433 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065408981 seconds)
  done (took 3.153054622 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074331076 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069438238 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06515785 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068436093 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077504382 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07294636 seconds)
  done (took 1.939281103 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069156472 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06666543 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067511307 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067192083 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071675594 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067036777 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065411961 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066558294 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066716163 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066662237 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066431072 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065432388 seconds)
  done (took 2.311332124 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33096581 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06888222 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068180555 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065661227 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070777242 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066107878 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080083691 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067928576 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090019038 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066883206 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066531468 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068645343 seconds)
  done (took 2.619855944 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207585651 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076216597 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23810564 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136540087 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111814188 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115918011 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103959079 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11337528 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144225959 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102330912 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168371676 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166603043 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107072108 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136927437 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088865657 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098235819 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156039108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162607666 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103556982 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165654743 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144674623 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124719936 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146923111 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101528475 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106611563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122104703 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070788236 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080093187 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171409301 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132061069 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146906563 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111081451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093617378 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176861649 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171074173 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142284251 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13411964 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083601927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101706312 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132614723 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19875607 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087689031 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163121643 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244802399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08056667 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141089708 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120984058 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120442455 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107778814 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09012321 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146879734 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183535689 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139717345 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087941793 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111942825 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115872071 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115611995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103763518 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18108764 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162144102 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128338061 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071347682 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099136405 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153402958 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131220825 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108430554 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127704927 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093224845 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13512425 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153982363 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119063057 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143203246 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129187728 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088457451 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119290965 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140465257 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129366385 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170615694 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124239023 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072242508 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124416785 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102872596 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080615579 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141652042 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075283965 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174783496 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098173451 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106520478 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112857942 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108668087 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108579032 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161760893 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143324597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243864237 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066061015 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104178585 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119913426 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148074029 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087667349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109082776 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117098397 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078560389 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140193669 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075043313 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122542405 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075125823 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125797318 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132231933 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075275678 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122312602 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101550803 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100157551 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133994147 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159880618 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08909507 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082148528 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168128959 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12211008 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104410675 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14344861 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155982788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098976447 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102728495 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149954861 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180645946 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089562914 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163402344 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107765092 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083788392 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087539067 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123999349 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112883757 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122192493 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081780112 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11865805 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168323028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0749126 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094872677 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132682035 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078601524 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080348662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103335924 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100486166 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094855654 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099832577 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104265026 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139603503 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122841509 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104598772 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269556943 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09951952 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172311635 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088800206 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100269378 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103753014 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06972735 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13710408 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156335271 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078997759 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165506999 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123414157 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105654163 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118800027 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083015334 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140436706 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078994151 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070652213 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14438129 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109917625 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110668927 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150862959 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104563205 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128118759 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120257646 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135269302 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132768838 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129442237 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105527775 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088297463 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111651061 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126296776 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072778364 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091784142 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080270756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104552657 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095958135 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083106484 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143032444 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125552483 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10035018 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11156407 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096459222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146888299 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076209658 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129480623 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119056677 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09349694 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151644464 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151907813 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131225947 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099581737 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144717415 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070198964 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073722968 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231547991 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125063661 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082904198 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083494463 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118437027 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146990771 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130001668 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139048848 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111177309 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121865904 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154653117 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069027446 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115816755 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148926835 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121474117 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104517973 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090040763 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099564764 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142373233 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108641332 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182588056 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114746602 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126307067 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153418662 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099876587 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079313953 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103134789 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136425152 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105252105 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149958552 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099632564 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087805228 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110505771 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074276937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10002222 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128367651 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119909953 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135905148 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114830379 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133140879 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076777647 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117092049 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120064039 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122030512 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063464201 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119715419 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161566216 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093705403 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118807703 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153874516 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079327541 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12354058 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322072419 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147246277 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085033 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109525095 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119792384 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128708423 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120444942 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141021874 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11080099 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135170631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110428661 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08579429 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087922963 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09715825 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104873262 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095007507 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108077504 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115288515 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094464049 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132573966 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103188853 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10972152 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117946959 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09614038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088830382 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097488141 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174620966 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120437381 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172669628 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09842296 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145759635 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164232128 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074718467 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078895571 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078112737 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139829798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083947903 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132117356 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097774146 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105802649 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125831583 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14279329 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095024933 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068294105 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108663522 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134048373 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111619179 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097863923 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10427507 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162840375 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100208913 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078965367 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114118598 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104186192 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102703331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170894127 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.20467371 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098166483 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075936559 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081180208 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128842677 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153480875 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080527637 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103160583 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119558475 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111033355 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128562411 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101995542 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099764245 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114447665 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150610808 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129749495 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090252442 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112817292 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130721333 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174214188 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105107417 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095496127 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171269472 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152640975 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160402803 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088575467 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114117943 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114134257 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11064573 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139509803 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083193436 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164380669 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082169798 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136849542 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104314423 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090591761 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130840618 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098774621 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088689911 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148283941 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117144644 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082492512 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077248884 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117668159 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119675718 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106370381 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074827604 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139698437 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073008606 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132172362 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168801043 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081012313 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103909328 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241248136 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080109756 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110095731 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103148039 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089478522 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098539342 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173480788 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089191269 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150736195 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141990212 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113964493 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138806871 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099746962 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635575342 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078596242 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152551516 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11684847 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174136021 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097909384 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117563432 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108806559 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124165655 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145812681 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10510856 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176934505 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132382872 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115830664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079686131 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102543573 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103042014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088668931 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105464232 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113678401 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116213542 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093781413 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116265259 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124066931 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081935091 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095364588 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15667954 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116921245 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14449777 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139811233 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084372163 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11732826 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13875954 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07989369 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12224821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15234511 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10573548 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097321037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079578465 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247617033 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171715667 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073258997 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164259584 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119397375 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109733778 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113464667 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11457119 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13161268 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107826636 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121216014 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093986621 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110551088 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112498133 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082542636 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077181387 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104964314 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112840452 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097742058 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098346935 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097662179 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15138666 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071041317 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096417679 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10316815 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145602935 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17577147 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087709726 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083007499 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119625113 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112666739 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113339916 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121006152 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079460411 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082094231 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082064156 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077096015 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10839846 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112363964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10432785 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111890239 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164266425 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083023213 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225243309 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095230254 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104399232 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069517292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078137031 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095482036 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096652997 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108035806 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100168066 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169125211 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094215888 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08935034 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091880114 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072764035 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081977689 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271861997 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112115107 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119685765 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097377276 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06261668 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109412028 seconds)
  done (took 58.945955474 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109543954 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082560577 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096660653 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149744297 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122674302 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211926293 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157725713 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199960916 seconds)
  done (took 2.756729421 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069269595 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094227382 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099717893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082210372 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066665942 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067810617 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226360284 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081404014 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06640609 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088662436 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078914284 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068406356 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.402129257 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065872507 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066980809 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061311103 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066956182 seconds)
  done (took 3.370430553 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377401994 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359662628 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372705006 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072992905 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.656045583 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087985286 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.073340183 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095101333 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070937298 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.266930387 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.699972679 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091305581 seconds)
  done (took 13.851238025 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075672084 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068658818 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08344869 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082426153 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071378508 seconds)
  done (took 2.006322648 seconds)
done (took 102.753855055 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080300767 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.298286863 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052972733 seconds)
  done (took 2.006668744 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084032742 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083953129 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084391841 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083634502 seconds)
  done (took 1.967570145 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075085443 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075857661 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084079291 seconds)
  done (took 1.86043968 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224822985 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138829168 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086495228 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082454833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077205972 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078158384 seconds)
  done (took 1.870356373 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073067193 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074764343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072974853 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076108702 seconds)
  done (took 1.919680869 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.0770366 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052358393 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054538359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056182657 seconds)
  done (took 1.864633928 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08678753 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078665146 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078192408 seconds)
  done (took 1.868834118 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107530647 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085417287 seconds)
  done (took 1.819126879 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081973335 seconds)
  done (took 1.71258196 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099533577 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112928388 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127887739 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109135066 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136416013 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108895317 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085279647 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086719103 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077078384 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087388011 seconds)
  done (took 2.659951616 seconds)
done (took 21.703386616 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079646485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366599621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36065446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090021111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66977262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356924795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989431978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092212588 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121261355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067760188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083690737 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647906207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981715329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324052113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966686554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31820997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649445866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068061808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067445105 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067903048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977362385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067008113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06754366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068138426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648605212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370854007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068103064 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318316172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067478618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069388518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354895941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067621256 seconds)
  done (took 16.127072961 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071390867 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117834249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073771952 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083903213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070356083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069396999 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071561488 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068726496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125242542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067490195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084203772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067240241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071590807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068215586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086500369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068125327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0688039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068383255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068096147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068158317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085689565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067672522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067722565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068312385 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068259165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079623182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068605946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068392238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068468663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070120439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070755413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068637624 seconds)
  done (took 4.030828398 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115382283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124799199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073837162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10275414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111698941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070032251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143371251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092398404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127790965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06797986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084237208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068177425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100634525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068992119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087299288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068345595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068902902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068616369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068149192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06836065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087140739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067889554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068302334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068339819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068660505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081138051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068248718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068687018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069820643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070464572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071487983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068833919 seconds)
  done (took 4.282650044 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073353485 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074923741 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082167025 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083588684 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070137759 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071267016 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072418851 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069656837 seconds)
  done (took 2.241836371 seconds)
done (took 28.311701849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07980434 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069135023 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072298947 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081106354 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072375374 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078528322 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066844116 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074410238 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07190445 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072669585 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074766047 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067320448 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070896015 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067355342 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073635381 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067675855 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079230362 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071988138 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079758386 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079248605 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069981386 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072983267 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073983629 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079289433 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079323814 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078755723 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077001492 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072315864 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069071466 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070188649 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076495344 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084179544 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068323703 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079198841 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067803509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067926536 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070883496 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067793166 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079198227 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076160112 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070263276 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076110888 seconds)
  done (took 4.717323499 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088951741 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090665741 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085026618 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061427611 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066870574 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064630659 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088862858 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059498567 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05935327 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088271317 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055845179 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059028847 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062160193 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053863031 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059128823 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056669424 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061446519 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055986844 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059099712 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059072844 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058012454 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053905576 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059725886 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065110947 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056297072 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061532638 seconds)
  done (took 3.342060081 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075594128 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083895856 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088444377 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126727988 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104101556 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076801329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077765023 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091953411 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084915108 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067060672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070993928 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093357945 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087467537 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073751578 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067833183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084502577 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081880906 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068732336 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073526781 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089791568 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083776224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083221402 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091818698 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080322159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066322237 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069001668 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071013407 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.0809427 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071576341 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075912376 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071429597 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070463606 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069018669 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078719888 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071427329 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068850861 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089719279 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076642902 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077598351 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067868711 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070743753 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068521294 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089636294 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1219693 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067076241 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074141252 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074957297 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076559482 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067887232 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085700222 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078284526 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067217556 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070413635 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06683777 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067650946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080373841 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069099409 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069621042 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076282852 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070276406 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085602844 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071221088 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082439389 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066976106 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075248 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066299287 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068658935 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066283805 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092829616 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069030079 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108436519 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068735635 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068456831 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075847898 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074557922 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084558866 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067978823 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082651477 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077287147 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070827462 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075542656 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070440944 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069782221 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087150674 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069549843 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068738249 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068503086 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073976309 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069935459 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068561798 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080175192 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06728038 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070147489 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083696984 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067003272 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068457377 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073470403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072109484 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066964459 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078592652 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07193746 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067604493 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076535573 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067430653 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070110511 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077260009 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073070207 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0662303 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071758566 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073378268 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068211971 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069215324 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070252289 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069108955 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076589354 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073675338 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071828605 seconds)
  done (took 10.53941064 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161588322 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153744179 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069835408 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144424364 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076220577 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079214332 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146878353 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094101992 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068030961 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068768503 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068369373 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118416127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105733055 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121883997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078411365 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067841835 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083055759 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117622063 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148643 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142430677 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08334757 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076683977 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069824311 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068647535 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074333077 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082701359 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090572314 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076586255 seconds)
  done (took 4.422645548 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08274735 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10116366 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074450528 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088306896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09101875 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067461128 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069357856 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069082385 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080062815 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078757646 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067670469 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073245664 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074410304 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07414426 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068825907 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075517361 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075219215 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069717685 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070549316 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072799225 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077594036 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080928928 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071638883 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06702904 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07380682 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066864767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064314553 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084989921 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068141468 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089577798 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065648089 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074371578 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081724221 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06823012 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067537296 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067622841 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067716684 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067534465 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069654755 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066086272 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066462718 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057868192 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066810385 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079724936 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073679165 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056572136 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072372433 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072964746 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07302523 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065716023 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070287012 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070474082 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071276658 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074696371 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072475135 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072591195 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068817374 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066036298 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075213558 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067597021 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064303763 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066029734 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071823282 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06637753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075438509 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072003462 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0662942 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067447074 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069536396 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073492441 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066949857 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070607776 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065018366 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069474981 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072244495 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069121068 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068367144 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06566696 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067451423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068037471 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055387193 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06764055 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05366573 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070570953 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065819622 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06583938 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067154515 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072361124 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08023179 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068914927 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072839607 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068407072 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066748657 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070213517 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060073942 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070059053 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082791775 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08276501 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067664826 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065255245 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081620044 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071730204 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066464363 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056223402 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074747987 seconds)
  done (took 9.139530614 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095598331 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08814503 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070262155 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083081411 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091219039 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087243192 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074741137 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076595326 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068994411 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081774539 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073419918 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075932298 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068178879 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076850354 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093898776 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076711865 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06935962 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076427598 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071977342 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101006702 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082824502 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081613429 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075027932 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068202106 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075263838 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080555121 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089722516 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080019107 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078186065 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075296325 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079996388 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089727082 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074106542 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072022108 seconds)
  done (took 4.393900284 seconds)
done (took 38.191509298 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.723571308 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.967143529 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.718444304 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.13913517 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.806269131 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.878703155 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.770071558 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.731344236 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.836615363 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.752654813 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.946521768 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.760162528 seconds)
done (took 64.682443052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.756081857 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.850267836 seconds)
    (2/2) benchmarking "String"...
    done (took 1.98677173 seconds)
  done (took 5.485878299 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.005133901 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.237290905 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.955937131 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.711157724 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.716684633 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.01791793 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.518905968 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.239586809 seconds)
  done (took 30.049077693 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.914251702 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.90870151 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.366808977 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.401539641 seconds)
  done (took 15.29006786 seconds)
done (took 62.313652595 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.703920232 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.74992556 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.747997274 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.691881369 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.772879955 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.728014767 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.807918454 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.949183661 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.709039216 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.694094912 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.712042656 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.138210478 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.709044963 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.791711765 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.704929228 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.710871967 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.749852304 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.131949913 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.860008707 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.72311643 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.722416395 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.719728575 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.704637394 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.700854512 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.703885891 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.702868568 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.141359559 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.699874799 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.324079647 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.703050627 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.727646121 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.959528488 seconds)
  done (took 202.245984508 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.701632228 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.679798714 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.724197575 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.749617603 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.073069589 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.896621659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.83641041 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.10511936 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.704958682 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.713631884 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.868120716 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.700524611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.883213864 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.650168105 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.709450172 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.699352243 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.887637619 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.897276514 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.700320999 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.971872617 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.717459832 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.775224269 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.715523166 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.845279023 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.730815426 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.796677635 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.840750215 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.723461164 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.884404339 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.853787299 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.69629471 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.706393385 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.921326769 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.565481592 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.717353268 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.701695098 seconds)
  done (took 166.987963962 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.120149187 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.694439777 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.693855424 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.694565818 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.708514065 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.696256474 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.818211919 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826372899 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.157532245 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.070956415 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.737800798 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51571157 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.691617142 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761388652 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.70303407 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.68987145 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.704393896 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.715398687 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689857341 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.690339897 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818802071 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.700256965 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.905015344 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.69609494 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.689599051 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.694846933 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.058632927 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.687166466 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.695101642 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.538281212 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.954883857 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.691456805 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.688375954 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.687806158 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586578838 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.7705372 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.68798745 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.693282734 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.688244438 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.908309466 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.68689324 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.687551181 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.690551963 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.860049532 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.686544196 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816091711 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.686089602 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.18850068 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.686200126 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.689962241 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.290162072 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.367581896 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.686461079 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.688037707 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.690022828 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.689264798 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685600173 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.692856822 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.23201366 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.758945192 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.685460781 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.694271793 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.691019614 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.686841738 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.911455072 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.686062159 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.0866057 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.739331144 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.799973378 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809286305 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.686387927 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752041582 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777353481 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.681725667 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.682517418 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.684139669 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.684944735 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.767047335 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.683180061 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.684283442 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.805271179 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.690684894 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.686646711 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.734426936 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.7519536 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.682842858 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.580928966 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.684080288 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.684327645 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.99399568 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752012942 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.683315846 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.683663209 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.685103424 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.68479155 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.683530344 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.82245606 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808475175 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.449534537 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.685381427 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.293262664 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.684931976 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.832716372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.682794992 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.867301858 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.685254976 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768138331 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.686867078 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.687208067 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.684527492 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714903454 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.685714256 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.744511426 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.686073306 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.055406371 seconds)
  done (took 392.074417673 seconds)
done (took 765.135222335 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.361511896 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.324260475 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.428642243 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.347576372 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.324594427 seconds)
  done (took 13.410025044 seconds)
done (took 15.032274024 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.770218993 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.772969364 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.707338101 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.773543326 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.704005355 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.77243204 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.752275505 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.709257876 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.74023733 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.711957772 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.741518478 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.709329303 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.695765676 seconds)
  done (took 24.185209951 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.912541592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.92277802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.756387333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918800813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.7309514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.912661716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84867781 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835790464 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.836129839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.701685985 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699237333 seconds)
  done (took 21.700600713 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.920521094 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.922453082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75938635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91933356 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733708065 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.930859278 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.853840724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84003499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837854652 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.699419871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.697887122 seconds)
  done (took 21.740164192 seconds)
done (took 69.248035588 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.696843061 seconds)
  done (took 3.323214265 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.715980599 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.850702329 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.701371961 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.699230822 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.697409871 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.695781487 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.700886823 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.694778476 seconds)
  done (took 15.382343873 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.691582246 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.694983768 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.691554616 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.691360249 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.694251795 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.692005421 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.694335402 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.692046944 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.69454633 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.692630322 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.695885704 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.694386448 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.69420776 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.693397944 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.692045147 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.694495563 seconds)
  done (took 28.72113865 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.693417405 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.692637565 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.692922239 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.694260546 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.692868674 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.693098973 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.69451169 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.693054278 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.693576497 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.693323726 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.693676359 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.691885786 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.695382093 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.692993805 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.692540162 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.692491095 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.694406545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.693224473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.698568728 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.693242681 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.69298313 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.692851547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.695059927 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.695443649 seconds)
  done (took 42.277531613 seconds)
done (took 91.328471622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.396565731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.12990769 seconds)
  done (took 8.153268397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.697419155 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.696920273 seconds)
  done (took 5.06097679 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.696331252 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.696373585 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.696919042 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.695827469 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.695811171 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.695719794 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.697529685 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.698091555 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.696304412 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.697950508 seconds)
  done (took 18.595615089 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.696304291 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.697112696 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.69622453 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.696506144 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.696386352 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.693548028 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.696968548 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.696423886 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.697167288 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.694541459 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.696122765 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.695300649 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.697637036 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.695288786 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.700142505 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.695171602 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.695880847 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.694390124 seconds)
  done (took 32.159968143 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.695544873 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.699102865 seconds)
  done (took 5.023141759 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.695208785 seconds)
    (2/7) benchmarking "second"...
    done (took 1.694719909 seconds)
    (3/7) benchmarking "month"...
    done (took 1.694951488 seconds)
    (4/7) benchmarking "year"...
    done (took 1.695270811 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.696039846 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.694535072 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.693972072 seconds)
  done (took 13.494925698 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.697813944 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.860235544 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.939777197 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.375268914 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.699597397 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.701988638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.633348089 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.704723965 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.703026219 seconds)
  done (took 18.945569475 seconds)
done (took 103.06081621 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.498477674 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.699608709 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.073060571 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.745504462 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.709965157 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.991037831 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.715204152 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.92150828 seconds)
done (took 41.983495197 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.73294512 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.162893336 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.171929039 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.340529932 seconds)
  done (took 11.306620425 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.686032855 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234838962 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.747350328 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.377014967 seconds)
  done (took 19.878094416 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.070454379 seconds)
    (2/2) benchmarking "read"...
    done (took 2.0609618 seconds)
  done (took 5.774074515 seconds)
done (took 45.323616718 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70710754 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.701921252 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.704563801 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.703380548 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.705187961 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.70256568 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.702550225 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.706386766 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.703981598 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.70729776 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.706317649 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70649565 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70411254 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703168503 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705872762 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.703293968 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702732739 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.705482149 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.703205288 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.702835461 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707428869 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.704233663 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.703891692 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.707568264 seconds)
  done (took 42.548631681 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.706426132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.704945389 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.707237347 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.706786195 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.704028048 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.706191384 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.706479557 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.704272535 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.708769607 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.706446746 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70488042 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.704615953 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.7065548 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.707282448 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707341235 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.705476074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.707168472 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705068525 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707196606 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.707493266 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.707238174 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704728483 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.704195173 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707054316 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.704187388 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.706800676 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.708015386 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.705394351 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707966523 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.704646602 seconds)
  done (took 52.824304298 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.715181513 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.717424587 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.708608195 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.708705791 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.708646763 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.709214963 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.710688717 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.708508774 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.708640001 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.710062169 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.709190352 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.708931847 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.711911102 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.709533544 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.708528476 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.71012288 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.709602983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.710113443 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.711351116 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.708750317 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.709187379 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.709578898 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.708358412 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.712205516 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.707911171 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.70909638 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.708138358 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.709266618 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.710958052 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.710396338 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.709888758 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.709533863 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.710215527 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.711188682 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.7093144 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.710261962 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.71425265 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.717500406 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.711150759 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.709569221 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.709897315 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.711150722 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.710009621 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.711498228 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.709391214 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.71084362 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.711336247 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.710479952 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.709089644 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.710589144 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.710338618 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.709621207 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.711514457 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.711751704 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.71057172 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.711499519 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.711138698 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.711559176 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.711436871 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.711748752 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.710962483 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.711545198 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.711195526 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.711417599 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.713693699 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.711432258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.711599392 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.712724518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.71212828 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.711444335 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.714608282 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.712718704 seconds)
  done (took 124.815260349 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.710354277 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.708998424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.70921804 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.71011503 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708163155 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.714598047 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.708840208 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712807616 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71010315 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.713315894 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711880511 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.709793769 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709007091 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.713317062 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712118695 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.709808014 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.71255913 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709995456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.712901305 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.713010895 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712785793 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.710448752 seconds)
  done (took 39.288219159 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713700016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.713132745 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.710293927 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.713300028 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.711577871 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712501697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.713378009 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.712546131 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713683444 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710350659 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711788401 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71354897 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.709694931 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710289063 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709544962 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.7114761 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713768288 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.711236885 seconds)
  done (took 32.460219738 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.710649931 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.711428577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.713822138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.712138024 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.711379931 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.714613119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712991627 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.712453151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.715318919 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.711856775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.715042659 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714939938 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.714918249 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711578752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715582809 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711311645 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.714777975 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711108328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7139159 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713063639 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.714017844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715377667 seconds)
  done (took 39.337724732 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715437311 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.714811281 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.714492802 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.712098456 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.712456047 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.715923429 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.715266896 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.711899152 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.716420428 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.713972008 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712117283 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.714164535 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.713322394 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.71345183 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.71320989 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713367546 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715671795 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.7144812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715604873 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.712632672 seconds)
  done (took 35.927532288 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.720994143 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.719818399 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72134467 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.720106492 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.720023429 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.720389057 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.719514574 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.719350127 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.719111135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.719735626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.721203763 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.720188606 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719893766 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.718868326 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72012034 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.719550805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72152849 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720975362 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.719098579 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720812097 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.72187402 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.721330172 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72080488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.721079913 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.721790638 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.721098718 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72179795 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722231484 seconds)
  done (took 49.823170289 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717622101 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.717757528 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.715734067 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.716019633 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.715860165 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.716033602 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.715997597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.716214535 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.717523076 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.715220962 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.717870031 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.71787594 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717893351 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.718210252 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.718771714 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.718203109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718849977 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.716460737 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715700146 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715257066 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.717890441 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719887431 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.718456426 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.715635979 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715270515 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.71826838 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716349276 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.716871966 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718803968 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.714698393 seconds)
  done (took 53.162151623 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.738050112 seconds)
    (2/2) benchmarking "in"...
    done (took 1.737877057 seconds)
  done (took 5.125692586 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.718239184 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71934618 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.717524533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.716467191 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.717465005 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.719255614 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720392283 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716920882 seconds)
  done (took 15.395839429 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.720643321 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.720387143 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.718907807 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.720838895 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.723219955 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.722486561 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.729316275 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.719751502 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.724453091 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.723872444 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.728336095 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.730596219 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.726719168 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720510077 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.72166188 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724120462 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.719797629 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.724479076 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.724615823 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.720311222 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724309404 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.724527779 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.724725771 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.717230137 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.72304173 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.73352862 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.731965703 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.721032295 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.722305617 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.728116678 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.723839114 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.717680499 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.726391082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.725397329 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.721043973 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.723620678 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73156109 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.724514966 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.731541211 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.724575169 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.721927622 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.719252337 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.723062958 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.724613317 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.724763382 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.724275555 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.722127409 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.719181764 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.722011433 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.726985669 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.72645791 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721749131 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.719466524 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.731103756 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.7220635 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.735130512 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.725052262 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.726535806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.733978641 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.737622135 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.738477974 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.735804243 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.726121464 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.72546016 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.733823608 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.749771856 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.732289671 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.717441364 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.720641659 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.723178197 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.734655831 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.738192723 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.735021264 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.725822983 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725749271 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.723572195 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726259309 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.723594982 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733892817 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.729277407 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.727141701 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.727603979 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736951598 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750557449 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.725085679 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.727473233 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.729327765 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.72732887 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.727933833 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737246941 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.727244318 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.723576063 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.726621637 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.725247185 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.730158529 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.729810932 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.72364377 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727382643 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.722765585 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.725483597 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728727901 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.730345985 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.736215524 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.728817629 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728415633 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.73351005 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.724307226 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.725159605 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.736807906 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.724536348 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727917924 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.728665841 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.734940674 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.721741076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730287645 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.736057015 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.727686709 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.730788057 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.728213907 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.725516165 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737438734 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.755535139 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.725544257 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.724540663 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.733345236 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.740002059 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.730364179 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.731887249 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.727648297 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.723080078 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.724346439 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.72844422 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.727168346 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.72934973 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.728907889 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72878206 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.725496502 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.726061295 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.729019655 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.728087339 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.732932315 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.72960423 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.730055269 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.732507845 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.729271251 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.730168922 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.736955945 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.732110546 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.731655121 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.728980382 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.724986215 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727309006 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.732500501 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.733611422 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.729815108 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.730252626 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.728795365 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.730926734 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.7274204 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.72800131 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.727158117 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.729495428 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.733811968 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.731418939 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.733953745 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.727974151 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.724386136 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.726040642 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.73018004 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.730015503 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.727751891 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.729377017 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.734425995 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.740653752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.728076852 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.731849933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.73382253 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730975831 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.734273206 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732831852 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.733389759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.73962436 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.732582297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.738669531 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.733415682 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731362387 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.729370176 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.73217527 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.732056764 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732499887 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.733579864 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.737979642 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744777167 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7420512 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.732777965 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.733711216 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.732951954 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.736513014 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.737610486 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.734673198 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.730096477 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.732145141 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.732080225 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731260539 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.73480422 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.733905646 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.731338418 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.730055956 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.727751635 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.732294713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.730437725 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.733919803 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.732483712 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.727150214 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730617454 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733108209 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.73070752 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.729095819 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.731655186 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.730789393 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.731217152 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.73301759 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.740006355 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.727118281 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732621959 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732209585 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.73298567 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.731588616 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.731373632 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.735405513 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.732406582 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739299139 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.734279652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.732891326 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.742852237 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.73449893 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.732103532 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.735949395 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.731734529 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.729080954 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.737180895 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.740296108 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.731512582 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.73530236 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.7370549 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735194794 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734861279 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.741198676 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.730187588 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.735156312 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.732174369 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.739583933 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.730846726 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.736132216 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.737396759 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.737210599 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.735947148 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.733877128 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.733584099 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.737501585 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.735638256 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.735380871 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.736110946 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736606189 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.745147755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.741048626 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.736095401 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.739654494 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.737646217 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.736939613 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.737169367 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.736407632 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.735803186 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748579342 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.745186142 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.744300582 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.737565817 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.733430139 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.741421574 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.737790864 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.74224658 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735928228 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.737164363 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.735630296 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.736066816 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.732462721 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740161863 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.732260962 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.736060219 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.736807282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.738181114 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.732480805 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.736490673 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.736505586 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.737099856 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.733922327 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.736498247 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.734477295 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.741219186 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738638253 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.737300544 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.738064172 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745219826 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737123331 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.738279738 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.737045777 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.737884207 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.7373156 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.740068626 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.738281327 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.741631172 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.74685721 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.739510485 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.749014353 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.738472695 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749750358 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.740245465 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.740168408 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.747660519 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.733278137 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.739113235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.739308878 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.740525444 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745803029 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.740734357 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.737794082 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.745914257 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.739542538 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.739995029 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.734437196 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.741436445 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73599102 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.739886943 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748109262 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.74048045 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.744013074 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739937132 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.73428866 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.740533063 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.736116948 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.738277796 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745095424 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.738518907 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.741369506 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.738448144 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.740249555 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.737024338 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.741418902 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.739632397 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.73463388 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.738149352 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746529237 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.740613024 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.745199511 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.738942261 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.750316854 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742340449 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.748218279 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.741228309 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.740726384 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.742561164 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.739462105 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.744283925 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.74170253 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.741720883 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.742486047 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.742050388 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.743520455 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.74117098 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.744732449 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.741970895 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.742316174 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.741063345 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.751745919 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767613433 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.742597426 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744580404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.737342743 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.742401559 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.748173679 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.742513072 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.739010677 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.744031353 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.75260199 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747677349 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.74280349 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.742813884 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741583009 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743685076 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.740809317 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.740071023 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.743616089 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.7395738 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.742581227 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.742102232 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.748446679 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.740329811 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.742381967 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743682642 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.741704984 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.754624112 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.742440986 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.745539623 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.742920611 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.740370358 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.744009111 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.745062544 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.744230166 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742844794 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739427565 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.74388373 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.751074679 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.754846854 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.745176194 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.742690387 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.745349939 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.74423829 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.743921574 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745334279 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.745180588 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.746671942 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.745815556 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.744033222 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.745499282 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.742701386 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.740368952 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.742545098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74252572 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746457205 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.751351525 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744850414 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.740393639 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.741960858 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742590968 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.742117432 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.74451331 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.75651334 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748627783 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.755306566 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.754801125 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.750110486 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.746695311 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747200867 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.754304005 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.744577995 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.747480038 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.747386177 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.746793293 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.745723862 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.748381417 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746055615 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.7539538 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.746311291 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.745589212 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7533887 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.746356678 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74580741 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.745318774 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.749914622 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.74369872 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.742048605 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.743602939 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.74476337 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752898299 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.750246538 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746832243 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746952868 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.743437684 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.74578612 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752959232 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742859171 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.746869382 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.739533867 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.744886065 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746253368 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746225776 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.741310695 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.747212432 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.746096795 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.750361915 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.7561519 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.742979335 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750370655 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.74712038 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.747079259 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747898337 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745289076 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.742122314 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.740640548 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.746078296 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749532992 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.747366234 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.750081016 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.748625019 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.747096881 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.745721522 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748492123 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750631475 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.758068657 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.753963294 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.742465233 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.746139838 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.748358744 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.75170422 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749681345 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.74857688 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74890328 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.751277162 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.745935367 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748961367 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.74757228 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748488968 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765501807 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.746580305 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749713945 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.750277568 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752926508 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.746966621 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.742905933 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.747555438 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.752330845 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.750982273 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.758931732 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.750968834 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754910145 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74899051 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.748585332 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.751699244 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.751203748 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.757862663 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.751675882 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749972134 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.750863041 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.754357921 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.767221204 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748350867 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.759853119 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782014277 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.751421649 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.750784478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.750152928 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747711877 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.750914274 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.753151913 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.751521138 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.747533711 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746452658 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.750015517 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.750544299 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756661484 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.751237587 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.747144163 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.747008546 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.750064217 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.752382464 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.745952049 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.750442135 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.747354945 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.750247783 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.751086098 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.750662964 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.748954979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762530197 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.760674612 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.747805232 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.749887233 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.745720064 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.756520776 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.751909389 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761732703 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.756700586 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.751293537 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.752851637 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.751753725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750271177 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.744595591 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.749935527 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.751603497 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752312358 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.745627486 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.76512169 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760072068 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.757642915 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.74985142 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754657564 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.749735862 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752482517 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752516696 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.75272172 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.754157475 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.751315848 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.756807849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.748133037 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.748012952 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.753085376 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.758877092 seconds)
  done (took 1038.000665447 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74679584 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747191871 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.746972529 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746943007 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746517231 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748290176 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747794656 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.746338704 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.746686515 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746933184 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.748673016 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748131881 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746661383 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.747853398 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747246942 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.747619592 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747146514 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747958878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.74646441 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747998596 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748387562 seconds)
  done (took 38.374682852 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.75268571 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.747981537 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747243131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750521731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74793734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.752056512 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748468128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751944948 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750885718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747654788 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.751730789 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750792835 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.747721799 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.748432318 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748199576 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750700191 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752410881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749467714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.750707135 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.74992349 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751674295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748029813 seconds)
  done (took 40.179222559 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.755629852 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.75368659 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.753206181 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.749836451 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.751925046 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.750891869 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.755743461 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.751909824 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.753630894 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.757335079 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.753559329 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.754728479 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.761948961 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.75737042 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.757551798 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.752398434 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.898443637 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.756683345 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.756608871 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.756387922 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.752620235 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.762971106 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.752586446 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.749824222 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.753550803 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.756942159 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.752990025 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.75436873 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.756171552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.75509942 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.760001041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.754063809 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.755578317 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.757815233 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.754692716 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.756585836 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.75641912 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.756211206 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.750783878 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.754282442 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.765199639 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.776283609 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.757652038 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.764034369 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.754271778 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.754957846 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.758062189 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.766322309 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.751489731 seconds)
  done (took 87.87485295 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.755433054 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.754411484 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.752273683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755139431 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.756655018 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.753719656 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.756048056 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.754256981 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.753096117 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.751823066 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.754062976 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.751582484 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752243068 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.754064273 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.754689614 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.751507113 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.75388201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.753689986 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.752790587 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.752805228 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.753311219 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.755660276 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.755675354 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.753987283 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.756001188 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.752533444 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752339618 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.754656789 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.75193088 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.754096638 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.755403952 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755630796 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.756581973 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.753242787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.754203541 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.754427114 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.756575042 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.753103343 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755514926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.753722699 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.757310523 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.756450591 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.755346673 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.756992554 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.752862769 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.7535009 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.754665085 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.754823779 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.755445265 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.757785741 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.756756062 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.755412782 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.756718616 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.752113232 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.756153437 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.756925954 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.753268622 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.756144452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.756475191 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.755181472 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.755982238 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.757342265 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.754997806 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.757170489 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.758686823 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.755914148 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.755384358 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.758921286 seconds)
  done (took 121.015097747 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.762254072 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.761965202 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763132049 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762278234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764544452 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.762959096 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.762895293 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.762044927 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.762954677 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.76292992 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76145775 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.761925253 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.761792263 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.759764515 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.762718706 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.762456655 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.762283485 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764790111 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.763736603 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763943221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.763686037 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.764290722 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.764381306 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.762399668 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.762260834 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.763420352 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.762249379 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.763305403 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763349206 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.764332579 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764397484 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.764388325 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.762690555 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.763952748 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.766271436 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.763849675 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764229309 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.765017922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.763836606 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.766932007 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.765430197 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763205733 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.763683051 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.765142534 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763934125 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.763792111 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.76246096 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.765180241 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760082986 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.763351952 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.7643879 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763374754 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763200449 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.765250602 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.76490237 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.761763076 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764153632 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767142866 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764290125 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.764700117 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.765867892 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.762000635 seconds)
  done (took 111.030277847 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761716574 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760778566 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.760298977 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.759568043 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761348884 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.761070492 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.761278129 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.761912476 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759733656 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.763366439 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761275074 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75950306 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759779447 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763955518 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760690236 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760601493 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758697084 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760509141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762110095 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761162631 seconds)
  done (took 36.911783109 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.761205695 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763278183 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.76027333 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760861033 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.762951547 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.762124444 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.762336428 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764389896 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759519046 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763323317 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764561865 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764663371 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759543862 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760376457 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764549635 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.758841837 seconds)
  done (took 29.885181957 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.760556656 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.762379759 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.768644136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.768296543 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.760423168 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.761452191 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.763728879 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.761523362 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.762324753 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.765598199 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.764956005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.764562127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.764043761 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.768139778 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.761042998 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.763781618 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.760667448 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.761291703 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.765458157 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.768329266 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.764021939 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.761999825 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.764602814 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.76545003 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.763393074 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.762485655 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.763670801 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.762430137 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.762124001 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.766447034 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.762196066 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.76240854 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.762044981 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.762061399 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.76821316 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.764021298 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.764150361 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.76383557 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.764586085 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.765472056 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.766785057 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.762832821 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.766492641 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.766410609 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.762745411 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.765443029 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.765335416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.76271832 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.762536757 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.763745621 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.765482397 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.768988638 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.767403579 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.765497145 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.767625255 seconds)
  done (took 98.728031724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765248046 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.765641768 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.764145353 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.767352748 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.766345495 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.766924662 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.766470287 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.76400749 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763420808 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767088617 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.765596393 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.76823546 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762979087 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.765915178 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764940491 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768215458 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765989177 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.765020669 seconds)
  done (took 33.481621495 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766613347 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765836928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.769062957 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766276052 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.764904259 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768779724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764967596 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.768345808 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76820565 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767143492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766816007 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.77139997 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769151553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.77039601 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767755431 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767087851 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.768290484 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770139107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.767174726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766115975 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770632646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76983174 seconds)
  done (took 40.592937402 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.771936041 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.769594307 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.788881832 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.819233985 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.807142589 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.771853655 seconds)
  done (took 12.428757725 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768731052 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770327842 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.768148172 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771066945 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770077803 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767287482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76638047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768040729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771152333 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768823335 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767910975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7701555 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770455651 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768232123 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772071867 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771958094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767921101 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769104165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769482341 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772266142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768097521 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771875889 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768080036 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767614213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769843909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768976466 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772130333 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77006077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768624247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771407125 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771886611 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768110053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773985004 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769600604 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772641735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77115801 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769589071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772076953 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771896994 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7687522 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.771319808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772158233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771873498 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770514888 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773601453 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768264487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769472244 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771211886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76974071 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777091366 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772730169 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770495371 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773241107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774294041 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773044611 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774289054 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772002352 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771582779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773934244 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770326853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771721604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77408049 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771148536 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772065835 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773813991 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771292648 seconds)
  done (took 118.573699683 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771378181 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77073727 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771174238 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771417942 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771468432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7723621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770984764 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772125684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77098787 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771022189 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773789128 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771675023 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772349035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772141523 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771290642 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772863469 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77310809 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773111804 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771963299 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775543711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77314879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773028205 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772667837 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772185839 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773532621 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774683698 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77279495 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773019442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773264551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772188627 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773497094 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773133174 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772742551 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77279603 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772896917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771624002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772930143 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771532253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774168983 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775388556 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773907192 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777233967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774933853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774182449 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772995469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773808432 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771359885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774062645 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772642603 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775629685 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772293079 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773880146 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774605025 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773945091 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773494101 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773893707 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77401863 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770466053 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77277418 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77662518 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775162067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777270408 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776779901 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77487511 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77419309 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772585937 seconds)
  done (took 118.736064309 seconds)
done (took 2418.156737355 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.849221623 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.785193534 seconds)
  done (took 15.340609562 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.940965951 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.894364369 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.777819431 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.782047228 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.775865564 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.80149869 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.775618223 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.77591064 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.776888277 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.777140772 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.778539538 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.965848353 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.779252624 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.776796871 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.779555366 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.87051055 seconds)
  done (took 50.741882273 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.780103711 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.782523251 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.792724233 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.784517909 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.780434322 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.791861514 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.81584999 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.786965642 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.816362326 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.80351876 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.853059662 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.789518551 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.783218461 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.830544738 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.79172546 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.797224552 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.882333603 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.854855531 seconds)
  done (took 34.224781239 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.857279011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.784631634 seconds)
  done (took 10.35725469 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.80683803 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.792909515 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.784987646 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.776086604 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.790540076 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.793463905 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.778277007 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.78230406 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.784176594 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.793155727 seconds)
  done (took 69.595055435 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.788018949 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.782304281 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.783475224 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.782719219 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.775463123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.778481192 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.78246731 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.779285827 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.459932853 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.816437819 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.788371265 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.788895303 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.784724607 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.784718373 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.780138108 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.805619368 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.948892952 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.780691731 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.77948914 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.78825039 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.782646187 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.843087847 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.795232789 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.78445184 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.814556971 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.463778993 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.789706625 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.78849797 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.902514343 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.779144468 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.782072142 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.782614256 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.784976968 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.160465194 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.112797582 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.780162637 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.79103978 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.790031062 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.779593396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.892827525 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.783961478 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.788783828 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.720810859 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.090708705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.883788097 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.82941715 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.137128376 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.789549763 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.787870335 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.819129622 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789868764 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.790364801 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.800981115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.305637312 seconds)
  done (took 127.992760195 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83638253 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.268721164 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.937026607 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.784295525 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073810674 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018107312 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782279314 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.832257186 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833180163 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034226778 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959927696 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.900916196 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783617743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.781308649 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782875529 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.781167597 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.932661018 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.855391886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78241029 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.782502231 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818933105 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050552295 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.908570298 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.919211808 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.807893053 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009903345 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.90965791 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.900066758 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.783714537 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.780847078 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851128622 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.785776489 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.787133917 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.785203167 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949819868 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.887693885 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880724403 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.784369587 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801538066 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.781910284 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.817919164 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005022968 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.893270417 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.920946239 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032429583 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.011526078 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.784522743 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.784032666 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.792888111 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980453812 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.999595571 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.039482713 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.913104414 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.786122568 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.122718786 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.784899189 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.883811648 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03699344 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015524803 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.895870947 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814989421 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.785107815 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.78333662 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100636393 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.785170524 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890093418 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879017738 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.787790184 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.894490581 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.898585814 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.01666564 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025652139 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.816666475 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.81176627 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.82567951 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071455468 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.856683385 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036801066 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.799395657 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.787642923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878333661 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.788068996 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.958618704 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.101762342 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05088804 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827840875 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.789947395 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.786302814 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.033080554 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036802778 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.061468895 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030393739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.950209868 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.816305804 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.786602364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.785678256 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.805068997 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.918408725 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788537192 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.149575619 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033002666 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.563770931 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.817277974 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104887634 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924951765 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.787945172 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.790354461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.78788265 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.993684405 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.830308585 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.791262117 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.790587729 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.035740778 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.733410859 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908605443 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.494803228 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.853544219 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.790101393 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053786626 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.794066372 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034115856 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80644285 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100419619 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.551814101 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832113072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.984425781 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.03406286 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.790806465 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.052801265 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101207184 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.91245478 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.035467736 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.549405096 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.789656553 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081019238 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.801288707 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81705076 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.958169601 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.794493097 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.96414624 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.792749429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098183282 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815532527 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962233979 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805267693 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066990661 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83444503 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842433653 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793054392 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923709593 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.790734043 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.806545895 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973762395 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.367708339 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.789653355 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.36225168 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.7890003 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.938152176 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.087499737 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812480822 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862661285 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.790753369 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788982915 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88475788 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8158322 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.39143301 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.789820754 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.960806158 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.748545012 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.243935111 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.789750711 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.101552938 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.002116611 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.794948173 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.793474266 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.592435889 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.791243834 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.942254731 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.950825196 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.41101839 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799157115 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007524948 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.791713828 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923141929 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.792697724 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.79257804 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.142056297 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838362176 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.790784984 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.801285152 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.790530555 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.790785602 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020613691 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.820366935 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.525351619 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.93175847 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042636398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.102133282 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.058900191 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.840750044 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.795729854 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054940274 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850798249 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.859080692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.792616225 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815638815 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038167323 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.795216792 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020484895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080789299 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.812364594 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843046827 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.794728345 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860010196 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.790930103 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.933842308 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887523936 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.793365858 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.794830672 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.910445362 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919649489 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986319977 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.795512166 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.829407234 seconds)
  done (took 936.799928982 seconds)
done (took 1246.756154608 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.792620943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.792374063 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.776970461 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792201502 seconds)
  done (took 28.881678253 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.809641735 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.798252163 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.801935669 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.79899592 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.799892632 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.798596787 seconds)
  done (took 12.534350385 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.821710497 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.792978907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.793388909 seconds)
  done (took 21.135959619 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.868404367 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.201445194 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.903312602 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.237190661 seconds)
  done (took 9.937299969 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.802864734 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.802600677 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.80293671 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.801887148 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81013043 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.811055967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.80232213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.801835392 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.812007752 seconds)
  done (took 17.977606831 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.010818025 seconds)
done (took 96.202577331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.904250798 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.77829803 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.904112376 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.176641348 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.741511751 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.779677658 seconds)
    (7/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.08123448 seconds)
    (8/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.958630178 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.955701514 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.944314793 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.798319175 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.897166079 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.816804882 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.898992853 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.881641347 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.276903972 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.796624916 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.914999104 seconds)
    (19/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.018451225 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.798743939 seconds)
    (21/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.936916195 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.093546387 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.782646393 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.75500594 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.183847438 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.951679042 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.819720868 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.540735106 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.005732185 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.303817213 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.942193527 seconds)
    (32/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.874843383 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.010255742 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.959203259 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.170070813 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.126139477 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.822729212 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.719212213 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.800296913 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.850668826 seconds)
    (41/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.812264452 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.974551329 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.359433663 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.00491042 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.823240772 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.904341971 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.991365214 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.822294014 seconds)
    (49/309) benchmarking ("sort", Float64, false)...
    done (took 5.600503079 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.05564201 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.797325394 seconds)
    (52/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.309328165 seconds)
    (53/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.381933251 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.439944938 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.784436904 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.921754457 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.932307014 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.868922112 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.879832984 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.799184825 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.845929835 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.131855912 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.941105029 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.711071423 seconds)
    (65/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.389301311 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.88272916 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.811239699 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.78344108 seconds)
    (69/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.995154464 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.160232318 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.063321316 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.974704193 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.906212763 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.782532948 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.944326888 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.885092542 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.798077619 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.10436553 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.785428665 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.216192764 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.278794075 seconds)
    (82/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.097390333 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.16939191 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.820370198 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.30363774 seconds)
    (86/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.833548885 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.507407304 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.803599861 seconds)
    (89/309) benchmarking ("sort", Int8, false)...
    done (took 4.797520271 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.800195861 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.256913056 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.921521427 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.115360257 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.469207385 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.170254899 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.918618847 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.799012495 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.065573409 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.176418943 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.390135592 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.780896983 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.437099477 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.904882138 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.168373778 seconds)
    (105/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.928801498 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.992259626 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.613284929 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.022682752 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.862722204 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.867933693 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.826536824 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.995027588 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.846179646 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.037121816 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.80469801 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.157710887 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.825851591 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.905242766 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.093628474 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145257735 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.828162079 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.825059764 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.247037607 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.823960063 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.888755307 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.982424528 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.143422466 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.885810255 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.014803006 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.941230033 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.05792691 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.911801642 seconds)
    (133/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.96569258 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.1009396 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.802078859 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.019836431 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.632327282 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.054590026 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.905123808 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.173866117 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.130094501 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.789814595 seconds)
    (143/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.875609365 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.786670814 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.490345985 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.015201607 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.823597674 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.133244166 seconds)
    (149/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.993817144 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.803434632 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.888421788 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.2989455 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.910517806 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.820068972 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.984870881 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.487656784 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.692334106 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.826199947 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.799686663 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.923166864 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.472273965 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.02787347 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.3989559 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.198267525 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.799107585 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.315884301 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.008240289 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 5.565918635 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.041837998 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.784250353 seconds)
    (171/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.656928449 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.828768074 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.800312861 seconds)
    (174/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.701887903 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.077192284 seconds)
    (176/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.930041317 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.076388724 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.016487249 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.860309672 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.10012058 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.991840718 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.829592722 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.800334134 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.065217158 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.003397617 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.014508721 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.841278078 seconds)
    (188/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.934414605 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320433771 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.993352558 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.869546372 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.393772848 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.229772048 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.931977721 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.097931098 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.867902836 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.970056794 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.857544009 seconds)
    (199/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.907094941 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.788858037 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.023916939 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.204076298 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.012482061 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.064911048 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.807189147 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.113818865 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.806255558 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.460615582 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.850242775 seconds)
    (210/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.808250249 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.009305543 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.329580184 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.047730347 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.180491559 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.623472763 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.242367989 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.814366807 seconds)
    (218/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.814825673 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.825506807 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.075181284 seconds)
    (221/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.922548332 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.932551989 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.420595622 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.861531479 seconds)
    (225/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.833518138 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.843628521 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.899104192 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.805539709 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.196319643 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.042889142 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.989061455 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.78943594 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.171765693 seconds)
    (234/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.084768305 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.807619527 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.811314202 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.938716055 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.792116448 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.046179096 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.923218909 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.809621408 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.849376697 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.815492228 seconds)
    (244/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.026498637 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.919790649 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.081753302 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.891831037 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.199415472 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.834913242 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.066946597 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.907882739 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.837890775 seconds)
    (253/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.070108236 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.671145548 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.927119361 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.144697473 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.955468371 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.135802055 seconds)
    (259/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.985157539 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.834569601 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.88726239 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.971849201 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.879372788 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.890862057 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.189847663 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.411173274 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.109630318 seconds)
    (268/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.957972004 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.146977783 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.317829943 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.196756502 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.810618212 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.139283476 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.892828121 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.406684968 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.803407681 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.756333808 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.875949351 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.891334441 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.891291143 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.404159619 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.795638042 seconds)
    (283/309) benchmarking ("sort", BigInt, false)...
    done (took 6.817995135 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.929335511 seconds)
    (285/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.765787098 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.796526442 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.983956788 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.920314483 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.610406221 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.965355258 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.811552136 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.728822415 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.694356727 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.18997421 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.016595434 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.723046859 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.859943487 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.103112338 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.189946999 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.883228835 seconds)
    (301/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.160999862 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.110741913 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.823047821 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.350662106 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.832432314 seconds)
    (306/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.141484906 seconds)
    (307/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.427802901 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.910654101 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.911981033 seconds)
  done (took 1003.744492244 seconds)
done (took 1005.488870965 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.843590469 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.837601399 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.820492542 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.842771357 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.934718393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.852317409 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.832541618 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.824043882 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.870219256 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.87117034 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.821829393 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.849985732 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.823193367 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.822969455 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.82164676 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837087881 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.127477124 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.847780704 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.839888114 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.831388052 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.838957329 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.821751111 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.872579414 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.850968048 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.826240864 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.827548801 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.826239674 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.842998323 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.9360129 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.828328147 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.82609318 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.835795744 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.126956033 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.845690609 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.818210227 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.843447123 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.835503492 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.833550235 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.826045585 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.856042978 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.264394366 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.827970269 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.825552244 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.824581813 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.82560037 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.828407657 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.826190336 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.832840969 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837412035 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839256569 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.262896109 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.844680301 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.828319497 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.825812654 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.834249016 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.825054254 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.829174824 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8416411 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.845637621 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841700333 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.119865797 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.85359206 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.826262009 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.841978111 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.8330772 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.301030442 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.825607802 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.82954889 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.265386586 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.833139583 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.300447442 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.837763397 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.827601421 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.840774037 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.85799602 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.133007567 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.843724766 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.825958249 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.833114538 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.824305543 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.835836485 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838606822 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.831021518 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.826334798 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839440059 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.855238798 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.836630276 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.827953706 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.836538345 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.847414809 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.834701281 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.839071814 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.831126377 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.820948631 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.836540689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.830589991 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.829804954 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.830829446 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.832455376 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.838104333 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.264691103 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.848300835 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.823825538 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.824723411 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.82717044 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.842798536 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.264026061 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.832993994 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.850458115 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.874921393 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.829352378 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.121886172 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.855563501 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843719044 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.835992921 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.830534016 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.822112197 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.122206432 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.29042537 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848112484 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.830420917 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.825534365 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844540892 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.83135515 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.825413277 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.133777361 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.85370825 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842186629 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.949959523 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.839194386 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.860703886 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.82677585 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831293811 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.857596658 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845408233 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.86032191 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.832401372 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846027246 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.846221781 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.827439995 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.841011085 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.840706328 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.83176921 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.835891294 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.823973475 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.858661465 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842964902 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842900587 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.851077331 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.950305048 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.827393468 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123952232 seconds)
done (took 287.222305735 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.898547805 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.820074489 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.927206169 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.826763251 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.912932505 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.912388795 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.823623698 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.824853527 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.823419437 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.206671318 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.824100817 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.833483193 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.82208688 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.824191477 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.911312657 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.827130126 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.82355026 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.249996453 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.830460372 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.899104638 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.827753093 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.824049527 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.826636333 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.296741231 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.829639484 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.826227064 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.901226179 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.827604259 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.174815466 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.819498525 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.830431913 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.249768976 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.920234733 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.848085956 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.83859225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.835241304 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.9128291 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.83239828 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.911313683 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.912414374 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.929738538 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.871688133 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.828130891 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.82644029 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.830263522 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.833626544 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.82674139 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.856473132 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.825786272 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.82565086 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.171174649 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.837999986 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.827060297 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.826799104 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.825405628 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.863771459 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.827106272 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.832946518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.920281745 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.831675896 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.897682334 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.212182858 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.300500817 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.828805597 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.827539303 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829223984 seconds)
  done (took 181.937412283 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.898734371 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.905856678 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.898496294 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.834156167 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.880387649 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.903808682 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.834990555 seconds)
  done (took 14.913145418 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.838023363 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.831522977 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881917639 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.881685672 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.834264184 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.982249742 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.829575203 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.843518531 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.827892098 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.884086292 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.831965393 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.830617236 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.835146394 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.832714533 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881630934 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.843642104 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.946180531 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.833578277 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.834268229 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.989849401 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829269268 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.836919779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.887020084 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.844541223 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833318804 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.840472717 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.420082629 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.836536179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828265059 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.83052126 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828408737 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.873118559 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.831152462 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.828609445 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83008941 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.948229025 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.833277029 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828772797 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.832533345 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.831294941 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.831317304 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.831706357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.831375869 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.829563815 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.832368723 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.857152004 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.832351799 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.831205962 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.832020526 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.834343474 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.883900642 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.832194764 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.830837167 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.829066622 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.888629846 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838939761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.837343835 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.82959262 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.833041039 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.829081937 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.991780345 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.882185107 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.832358999 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.881628508 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.832833382 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.832265976 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.832736441 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.830950924 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889105242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.83254727 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881914272 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.830928304 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.992112495 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.858119846 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.833587257 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.838158212 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.838726855 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.836187307 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835903928 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.841557947 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.832462416 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.837443739 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.84155888 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830822536 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82997504 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.941334152 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.943407558 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.830908948 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.847636222 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.842746279 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.831408766 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.88993212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.83546399 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.832055935 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887602021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.951526268 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.891188552 seconds)
  done (took 202.206121132 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.839336994 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.843837326 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.837464246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.852595158 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.836824552 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.837051895 seconds)
  done (took 12.807489446 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.840694408 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.836824898 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.836304866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.837525277 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.839351881 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.837442832 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.840529854 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.838477328 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.84343031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.836272015 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.836737024 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.836619999 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.838548811 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.839012761 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.840870586 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.835829766 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.840167253 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.834635021 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.836421604 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839195776 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.994530316 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.275855425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840179396 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.840385493 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.843471236 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.835680519 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84617465 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.837185745 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.837306079 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.845691397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.843189649 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.840295787 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.839433361 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.845776849 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.843649332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.840359681 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841123375 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.838663669 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.835045769 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.838737875 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.837467076 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.841414511 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.838478983 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.839732885 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.841651508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.842964157 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.842636814 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.847303398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.84295574 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.841059411 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.840452289 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.837371414 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.841509433 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.840447051 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.843375085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846624576 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.843395694 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.842153097 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.841795095 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.842494343 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.840303259 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.840099678 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842507629 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.848549459 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.835666072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.838923852 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.842012353 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.846559114 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841818469 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.839800377 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.839698232 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.836598143 seconds)
  done (took 135.861198374 seconds)
done (took 549.490318929 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.114238242 seconds)
  done (took 8.879151983 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.900178387 seconds)
  done (took 8.761105005 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.170218166 seconds)
  done (took 9.936830709 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.854343586 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.854607337 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.842483813 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.832516667 seconds)
  done (took 29.160420504 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.185548933 seconds)
  done (took 8.952451618 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.847235746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.830805543 seconds)
  done (took 15.518414084 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.906343484 seconds)
  done (took 8.674100432 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.986678252 seconds)
  done (took 8.757737504 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.850050434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.844308522 seconds)
  done (took 15.474546742 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.818952362 seconds)
  done (took 8.584797835 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.584232826 seconds)
  done (took 11.363069594 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.843349529 seconds)
  done (took 8.628149278 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.837248471 seconds)
  done (took 8.605665485 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.969030718 seconds)
  done (took 9.73733464 seconds)
done (took 162.797510996 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.837889241 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.835031192 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.835857514 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.835656383 seconds)
  done (took 29.109543565 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.87773057 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.876442935 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.882370063 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.884423719 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.879225583 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.873071504 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.865785869 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.865648355 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.885698494 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.874889475 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.875534735 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.876784647 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.874380406 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.866453414 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.87447955 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.875033346 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.885478718 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.875574788 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.866955068 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.877611986 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.842212225 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.884742654 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.877592382 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.842003763 seconds)
  done (took 46.727840584 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.041874247 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.914912448 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.996333327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.896454205 seconds)
  done (took 9.617210433 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.893127576 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.89394473 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.906699258 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.946616307 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972527094 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.904009827 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.869346737 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.863948803 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.850076219 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.895839942 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.969546665 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.911081059 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.991673368 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.843381281 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.018927011 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.843271911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.842567114 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.893800848 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.946127726 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.971368524 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.842989987 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.893665274 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.897158009 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.911769122 seconds)
  done (took 47.544047299 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.839420294 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.849512082 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.847827374 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.84192474 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.841220239 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.84287907 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.847902149 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.84158642 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.861633005 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.841920515 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.841880309 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.841596284 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.840758719 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.842385811 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.84244808 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.854685202 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.854475591 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.841633577 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.845775748 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.84683684 seconds)
  done (took 38.677856728 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.836635349 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.691009935 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.188173676 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.093193954 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.840381266 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.83895808 seconds)
  done (took 31.258522487 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.858128798 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.90757953 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.85093814 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.900758861 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.986309498 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.850293052 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.84569495 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.912801461 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.952469297 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.914392842 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.86144788 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.871897257 seconds)
  done (took 24.485680743 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.840062582 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.839237407 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.838005309 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.854935447 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.855480087 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.852262841 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.853092218 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.839530494 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.856815966 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.86247931 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.850994125 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.857644091 seconds)
  done (took 43.97644666 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927504988 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.881971465 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.86073317 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533862878 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.216945765 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048510638 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.493394049 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169398585 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.841443413 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114013202 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864362558 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943461094 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097024717 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303341705 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.871393013 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.30071629 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142015791 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049308946 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868256873 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554337358 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907149374 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.988014985 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.617187563 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902394317 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051622614 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.972924187 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.102845949 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.841682686 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979636123 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87814754 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851276232 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842333434 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116194473 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223914148 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944051639 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850987598 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.463164589 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.553365865 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.83119473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.631544732 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.583573254 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.965712118 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852906818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842657915 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.776362639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957772934 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214118136 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.845379979 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.552460564 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843767772 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853509791 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937920644 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.847774421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.658166557 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757607601 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843929639 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.840782436 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850162641 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417900412 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971016543 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00167959 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.815723888 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.938046004 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640802242 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240207676 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.994577881 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.84594568 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84535936 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778565491 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.551900969 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901549909 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173096363 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.863519586 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493983178 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149129241 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.913059336 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785400125 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112890972 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.344443405 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.815141607 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072575063 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844669086 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779927321 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.789042869 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778801676 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109441056 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88329382 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.592368804 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892418968 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172402281 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856966333 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865131929 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869481037 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068703321 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.997140063 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845614856 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.638383168 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99729948 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866481671 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176609633 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778243464 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.848102687 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101549422 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.057110528 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.889778471 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339827258 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007751342 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371698676 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.896157144 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.960722451 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890577191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.115714114 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906185982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983689815 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90229564 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84564193 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171935129 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40182129 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.98118167 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.863721781 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971845092 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161353569 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87515556 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92944829 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855719008 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846063726 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.661323296 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400752396 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.84606373 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.848441405 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.89238291 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88983971 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.850023504 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794313511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.473835556 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878486997 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.859792577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071777034 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378210194 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156553031 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782184616 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175590847 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938691249 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.069483567 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.498238632 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.922161809 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109554488 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891100376 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.929038544 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893883377 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868244443 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946670387 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871781102 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.963351688 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138595461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.852057524 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.852363155 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.641552443 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885906343 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84737261 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.853375733 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602540437 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122025171 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877415793 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853668059 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.738669019 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.863336222 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913507163 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852823462 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858320625 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391441879 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561568208 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.854702924 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.435668191 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074396767 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859363176 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.540385828 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969319157 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.933037786 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121343299 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912850925 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784215881 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.560680063 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.542723623 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849684214 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78505846 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851833027 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858226526 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861357118 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.050829278 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.12543046 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896188721 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.546795349 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.895553934 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861260414 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.854789632 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848918595 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.357944117 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982024313 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011412331 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893566241 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995236414 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.864120683 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.785151867 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.855048758 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857743755 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.851791846 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.850898153 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885870634 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.561061418 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235472496 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110997426 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.462752076 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864211784 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.572879581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.912022244 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.850680829 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668235267 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982050209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.882801707 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863363898 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.862761417 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.634166285 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.561939891 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420329828 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169401878 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162946491 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291201364 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.033626084 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877223107 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188689743 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785149553 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.409458728 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910888431 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193107368 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796916344 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937016255 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.502343883 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194921008 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865570469 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080017784 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238982298 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.721633863 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876486405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065858041 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888324556 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.975235111 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811990593 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.155350764 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997056331 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.556844629 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05813155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18655945 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66790554 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867458026 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.85573184 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.533254216 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944201067 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.562667892 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027272047 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.007955762 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.775524479 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355327553 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858851318 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.081491568 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213111333 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.9905203 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.975137786 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789501475 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.864738487 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866156615 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.85632764 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.850940381 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.730171617 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.106978408 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865992358 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790323981 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.935046381 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142643851 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.760627593 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.8590489 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857072113 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148935348 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.362346586 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024699844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.931198746 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.371035726 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862655586 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791905057 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790198372 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.552717229 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860738177 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832524924 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06948249 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.961715262 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804902272 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904306631 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935084615 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114456019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.87033165 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128379867 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134244635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561528607 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878898597 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.95754404 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.512006855 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.966300562 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.856115578 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.091821859 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613379269 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081965944 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.88721461 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.817645995 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857170896 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070765362 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856200485 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.731591377 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088545878 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.578193505 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.905924882 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169431409 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934500584 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.742164305 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.902776803 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.95238134 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869085585 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936890907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867404592 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.869073327 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869207471 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90356927 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.755675715 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.982160426 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.870872189 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95281376 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.004851585 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.379679152 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.862061892 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13385006 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218227519 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184934883 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920477308 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857588233 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859171133 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794113441 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005634719 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083768813 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136215001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.987699213 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.974065204 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883453968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.520303175 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.039670731 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097552906 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132845691 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.753336129 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337241473 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.898509949 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.859641938 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87111531 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.069531249 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074715169 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170079996 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009861301 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.912868249 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216945905 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133223169 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.862101541 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85819922 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454256688 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.919188798 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542298062 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.90831118 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.790438544 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137038926 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872379137 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243111795 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884064992 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.015969669 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.634774228 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635379795 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152436962 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.853841022 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924108318 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136130527 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251326071 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179199619 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9280381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871734348 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.988553085 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009641457 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74166102 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860538301 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86188903 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911973603 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.571937495 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872046183 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13977566 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177658057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.858737116 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.749564656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883839871 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.872189387 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085441697 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140179816 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11753994 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871309709 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870534866 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.680943821 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135210143 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924952268 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798184186 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.865520448 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964310615 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111111399 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886972075 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.315730119 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.574517799 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134696202 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.867978637 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887449543 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990649485 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224885662 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18503079 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.399134218 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070353645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452551211 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401195947 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163937972 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.867979053 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984422612 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16483433 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.867951827 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.914326263 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901296923 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131923534 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17750734 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.868895318 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.553344229 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.836183154 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205681848 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4192369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803155068 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873386268 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.925560541 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864564784 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.997696923 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877663207 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.756958398 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.989422848 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.62514531 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141574525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.868513143 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.854267267 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.56744666 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.117247755 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899466819 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023152743 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865178202 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.539800591 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.217432998 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121703272 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.920060647 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.871219976 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.867846837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867612596 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853810025 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.061434966 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.06445454 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145519595 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.949229015 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901106429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870054318 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.084286805 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079538467 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.711781528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002047572 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916140385 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907098647 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.773383896 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.375831908 seconds)
  done (took 1665.5470024 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.881654629 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.897270845 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.926291055 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.98034972 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928631722 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938490064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.906426164 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.989815692 seconds)
  done (took 57.248939892 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.868575262 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.085062403 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.87705368 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.868326369 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.876396476 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.868999814 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.031860987 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.876606787 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.876754946 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.87965021 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.879314809 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.868084129 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.182152376 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.89035001 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.870237288 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.853834358 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.875813445 seconds)
  done (took 74.355742024 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.870072567 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.100464745 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.895417367 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.876678972 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.861711557 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.885287237 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.675323712 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.895128223 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.870354208 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.983262382 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.49885929 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.889738078 seconds)
  done (took 87.102729483 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.878323211 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.876407486 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.875878319 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.875056472 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.876850236 seconds)
  done (took 11.184553548 seconds)
done (took 2168.629998905 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.208520739 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.08138517 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094050228 seconds)
  done (took 5.975500157 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.018862625 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.067053061 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.188670402 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.19450275 seconds)
  done (took 10.272370317 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.162346566 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.240280371 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.078187535 seconds)
  done (took 8.278215954 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.270037114 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.871677863 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.975825478 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.870403138 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.869426628 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.867017694 seconds)
  done (took 22.409769773 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.872830666 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.876889872 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.872165276 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.875845613 seconds)
  done (took 9.297368708 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.852531633 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.576514631 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.853983414 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.869336082 seconds)
  done (took 20.953997405 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.624495256 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.634793598 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.615620523 seconds)
  done (took 9.675745882 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.479390015 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.853100702 seconds)
  done (took 9.133390375 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.126072449 seconds)
  done (took 3.925870833 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.006196974 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.137680964 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.402537005 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.38561786 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.422797783 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.736594516 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.179673996 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.112622573 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.264469668 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.306612791 seconds)
  done (took 24.756552788 seconds)
done (took 139.803395262 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.249468178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.104878585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.077492025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.208678357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.135660301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.083794074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.09145637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.195780847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.714873223 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.713776996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.208469738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.097988018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.035847852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.106059571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.037320595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.10599234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.091342464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.27106734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.905007134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.104453799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.092121996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.846828569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.052244689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.862819298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.092176402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.024422832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.428071119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.112528903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.060087264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.434955562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.028394737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.257921436 seconds)
  done (took 172.635943435 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.634077016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870871482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.871169278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.871953602 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.247666592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872746121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.871904414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871106583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.045433777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.027286229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.872477212 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.225224445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.872994876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874106669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.873443639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.878206648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.228902329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.715218863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.887880277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891599237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893901725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.17768779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.89474326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.214466864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.242145863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.89300041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874314959 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.892981173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877743265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.885553875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888984792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87513382 seconds)
  done (took 207.922393741 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.875872576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876314358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.877573609 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.876902513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887947151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881417621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.87928595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.874175325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.645649739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.647794372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.884327014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.89108157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.887469074 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.875489756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.87747764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87859759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.884968118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888458099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.879698699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.886008887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.888179449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.697077236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.889385278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.698161027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.885263985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.887213594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875957414 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885320204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.886865156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.887167079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.887511829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.876586333 seconds)
  done (took 221.229161498 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.072973448 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.883427384 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.88315718 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.821138914 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.884971249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.884023147 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.878982903 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.073193909 seconds)
  done (took 19.203104221 seconds)
done (took 622.80272735 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.306662438 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.148825542 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.053934771 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.90668453 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.130575917 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.935464066 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.903649033 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.96241805 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.091982089 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.971390592 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.584031139 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.922332258 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.677909414 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.923137884 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.032050094 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.956549555 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.43596165 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.528556327 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.08594561 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.973657797 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.066117699 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.857872427 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.972533775 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.158898804 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.702077845 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.908461922 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.061649502 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.438332808 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.909503937 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.067681865 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.608945377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.258513416 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.912404841 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.900998161 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.951701651 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.936264907 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.235494661 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.910137033 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.028270719 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.661619385 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.954226902 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.972214636 seconds)
  done (took 104.814298061 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.874173082 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.874745091 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.872729261 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.874624216 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.874606199 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.874193558 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.874255177 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.872378646 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.875139023 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.873644599 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.873116759 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.876171861 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.873626959 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.875613992 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.873966364 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.873959011 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.873863532 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.876289819 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.874584312 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.873965566 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.877541372 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.875537982 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.87743454 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.875531111 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.875868927 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.874306935 seconds)
  done (took 50.566608483 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.887256783 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.028293577 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.106327929 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.905254846 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.890847175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.894057123 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.904586804 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.888869465 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.890125194 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.891379572 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.97973521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.890633109 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.906091113 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.105556692 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.901705418 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.887624529 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.887705151 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.888917632 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.036344721 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.903084268 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.909850291 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.891952856 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.906663791 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.899762382 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.892584619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.891861721 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.892822502 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.33199615 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.897670951 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.98300984 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.931141785 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.90811683 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.279337925 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.11232159 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.939198098 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.893868269 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.888574799 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.985745708 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.894701647 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.891486681 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.909503193 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.893161214 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.110848731 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.381772336 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.901318118 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.88869595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.338512013 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.990832215 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.929607622 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.901009515 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.114338692 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.904400791 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.890665 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.892298472 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.927384894 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.9005164 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.892332652 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.196252581 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.901074252 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.908093149 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.892189647 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.891344043 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045717697 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.896815673 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.034660002 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.900718458 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.898849799 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.893061794 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.112741023 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904719851 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.383906877 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.90172413 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.89197008 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.980796131 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.037402394 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.369710816 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.902619904 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.050992935 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.295629907 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.912708275 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.8969242 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.320722412 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.916316021 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.900398621 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.893772882 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.893316287 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.890770295 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.936888158 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.907115791 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.321576166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.385630891 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.208227815 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.915775456 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.9058053 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.894208951 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.19894346 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.898870183 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.893480818 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.105078321 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.395897494 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.905373036 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.90140542 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.372726359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.905845404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.913056943 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.902399956 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.115614026 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.904559042 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.937349216 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.892123361 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.901427951 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.896201443 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.911632767 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.899234221 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.893329717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.363246188 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.998799927 seconds)
  done (took 233.977958824 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.890203993 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.889005185 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.887870418 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.888575554 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890497259 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.893091344 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.888042177 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.889640906 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.893189973 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.888739531 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.890022224 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.892872085 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.889329426 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.889108299 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.362935377 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.899235462 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.503168957 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.89517295 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.890380031 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.901775496 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.571352639 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.9013687 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.891772553 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.890456878 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.896155627 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.894524376 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.900397486 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.914679147 seconds)
  done (took 168.597476976 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.897446211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.082861468 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.919534067 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.93574531 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.90360267 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.895233696 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.924102251 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.91615709 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.903410355 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.895766534 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.904244521 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.958996169 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.910517268 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.025137305 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.93023884 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.935078603 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000919112 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.904901832 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.897096692 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896335469 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.929518123 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.894459245 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.958850937 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026559333 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.915781479 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.016207661 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.902738189 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.898846933 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.896894577 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.02014297 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.912831287 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.960125738 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.929224313 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.91689321 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.021746642 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.015751914 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.003496525 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927477826 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.902491096 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.89757009 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.897348736 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.887629656 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01561208 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.916655088 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.901247758 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.0056659 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.916276191 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.89983747 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.908513447 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.897012144 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.914947377 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.919030835 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.969143874 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.033637739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.933837595 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.925099212 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.9276521 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.191120944 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.912862448 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003442974 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.89273839 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018182334 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.917948097 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.887250569 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.900357997 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905024687 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927275764 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.932680052 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.007775341 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907178393 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.001765008 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.935200577 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.907469445 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.901020028 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902710377 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017868113 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.019427221 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.934255521 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.936584448 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.93438602 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.894276222 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.902651147 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.889753641 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.91927014 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.903865429 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018591506 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.021221906 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.90889407 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.902552028 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.901946186 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.900467102 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928599439 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027386091 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.937344141 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.995292699 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.969518004 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.977740044 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.916348874 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.91201934 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.90581987 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.96755268 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.915632003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.911512138 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.240205496 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975013546 seconds)
  done (took 205.918675583 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.999452172 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.378220762 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.956752601 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.958418055 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.177809117 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.330472654 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.68492003 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.951981888 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950126401 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.978176145 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.114135913 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.010445873 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.962335696 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.937542908 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.363456671 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.940738792 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.95444651 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.971703767 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.953180858 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.532636416 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.257721679 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.079808439 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.95289526 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.079392843 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.935562616 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.240025153 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.446071227 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.331799607 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.987007206 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.308003789 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.290931208 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.637230502 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.164285543 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.196239788 seconds)
  done (took 75.848370981 seconds)
done (took 841.529803904 seconds)
SAVING RESULT...
DONE!
