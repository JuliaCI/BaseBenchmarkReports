cset: moving following pidspec: 6727
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.226680191 seconds)
loading group "string"... done (took 0.548242464 seconds)
loading group "linalg"... done (took 7.562857363 seconds)
loading group "parallel"... done (took 0.167916171 seconds)
loading group "find"... done (took 1.159666794 seconds)
loading group "tuple"... done (took 2.088390465 seconds)
loading group "dates"... done (took 1.309591827 seconds)
loading group "micro"... done (took 0.241100582 seconds)
loading group "io"... done (took 0.692882577 seconds)
loading group "scalar"... done (took 40.940370362 seconds)
loading group "sparse"... done (took 12.554156397 seconds)
loading group "broadcast"... done (took 1.122377564 seconds)
loading group "union"... done (took 13.916666477 seconds)
loading group "simd"... done (took 4.74489407 seconds)
loading group "random"... done (took 9.616456211 seconds)
loading group "problem"... done (took 2.125422713 seconds)
loading group "array"... done (took 22.445154833 seconds)
loading group "misc"... done (took 2.079411423 seconds)
loading group "sort"... done (took 3.433900514 seconds)
loading group "collection"... done (took 19.379155634 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.58423418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140380065 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148994484 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145903429 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187096371 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154699843 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156830418 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098674303 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.958636252 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173272781 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15127274 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528888555 seconds)
done (took 5.168365725 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.307777216 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097104633 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106481835 seconds)
  done (took 0.884138535 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077236673 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146940992 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096330717 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078919738 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096667217 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078051741 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09589789 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081849776 seconds)
  done (took 1.362904665 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087585648 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098563654 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082174748 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097739919 seconds)
  done (took 1.05419993 seconds)
done (took 4.383652035 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746898652 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274517112 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203247303 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468752841 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19531256 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217878764 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673953506 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353612691 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251142788 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099502621 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142025836 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384702536 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137030324 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675014695 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088111144 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124187739 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178868768 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.474635365 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084875886 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111807781 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118058182 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141338639 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127104309 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092075755 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184507275 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081167058 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191207556 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107557575 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07953413 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287878659 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200269532 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67857049 seconds)
  done (took 10.903601507 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113267137 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135115371 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098109521 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139317634 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132755636 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098869549 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083642976 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096611552 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119897612 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174138618 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112937657 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134415771 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094142682 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081367278 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114469319 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243485186 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121761033 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102906295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099649074 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102943398 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120565428 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112846206 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106700009 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092761433 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165339307 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220790998 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111056494 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127632305 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098088892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112871352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143931555 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144168829 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095237624 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079436963 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170892639 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123016229 seconds)
  done (took 5.126348723 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.086152725 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18782376 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11966829 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168890642 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079652737 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142262502 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094035347 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112330702 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253247316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.183778556 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177425453 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143996209 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099322817 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097197907 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080961364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096482916 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.647773787 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161146491 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133695471 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095879537 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103119802 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097993449 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366638933 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085838524 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095813379 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08057413 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081877504 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159969012 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080281457 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.175497821 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101164728 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099892415 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131105091 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190834752 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12508111 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115677092 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096196291 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077603149 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.189708681 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088951624 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.15415335 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096614602 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10052548 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135763967 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137873156 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098591201 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081835672 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221559861 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081632825 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116729483 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.913711627 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181056273 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090248956 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096692033 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327026029 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099042333 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097134191 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081168959 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.253432442 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184301321 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099782113 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07972118 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09660463 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080158924 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.42213927 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082175642 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.72118569 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083213773 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108714483 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08231455 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097169322 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102725881 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087232706 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114656747 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079422735 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098678141 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078192583 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095881814 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080912964 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108006917 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093649996 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083685136 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098424309 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14790127 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094086209 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098844277 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127274503 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101802121 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079435484 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132177534 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100189414 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079176082 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133020498 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098078421 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090087576 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098642231 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142885981 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098931174 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125745545 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079663866 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093967663 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108552342 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099395225 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128971691 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112527373 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097899068 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084584011 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094412323 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076893907 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162475777 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079923746 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09834616 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080131802 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094466301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107614102 seconds)
  done (took 22.43073003 seconds)
done (took 40.234283985 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323276704 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10391421 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10526791 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102840336 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101288424 seconds)
  done (took 1.498188748 seconds)
done (took 2.231421126 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291907242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176838556 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095792847 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169019536 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093772244 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174318999 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163640397 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113297382 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205549324 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095788658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167132352 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095052635 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077344327 seconds)
  done (took 2.683718228 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096042514 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116481643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081778172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110872709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075544266 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112222211 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0933347 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118458742 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111289294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08628069 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092775836 seconds)
  done (took 1.828562544 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095910373 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114512377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082662368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11132281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076723689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111411649 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091709991 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114968207 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109411598 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084863802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092696536 seconds)
  done (took 1.816561724 seconds)
done (took 7.055311857 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092380366 seconds)
  done (took 0.82101649 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.927795558 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.87462419 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112231822 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149931916 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298128305 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190001769 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475577814 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128300614 seconds)
  done (took 11.091782039 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.11611458 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101826637 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112361521 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081676636 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102339229 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082535017 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103078629 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101758309 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082907722 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103586632 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08361454 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103235661 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101935042 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083556268 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102684257 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086102779 seconds)
  done (took 2.347269139 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121272164 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118818949 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106430448 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108522576 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086874965 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103754583 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105320336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088356388 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102985296 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105158969 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091254632 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106443627 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105255253 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080584039 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107119784 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109281756 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086833543 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108368332 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110022643 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090439528 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108299343 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096804159 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088051369 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107795229 seconds)
  done (took 3.292311076 seconds)
done (took 18.284067592 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160413491 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110416774 seconds)
  done (took 1.00810924 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096811675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114874331 seconds)
  done (took 0.952934775 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099072296 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097149536 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124159027 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111451679 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081303366 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098476507 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12061351 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080900649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097957812 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081358921 seconds)
  done (took 1.735469723 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083840794 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111473956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103158228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095467795 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106524356 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097195852 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088953063 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101013584 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111496484 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077549813 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103534421 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115440652 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085775335 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117942645 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106965852 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084125805 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103722735 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100011007 seconds)
  done (took 2.539490196 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081022637 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099020567 seconds)
  done (took 0.923541625 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082106913 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095792775 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081634273 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098964815 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096244099 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077591996 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095624948 seconds)
  done (took 1.370989527 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491687752 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136137619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262707357 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103238352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121371375 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304326845 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099419033 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085304781 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105901038 seconds)
  done (took 2.494969243 seconds)
done (took 11.768019779 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093704654 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119388818 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113906645 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469975164 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108917594 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099486136 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148660063 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249241201 seconds)
done (took 2.154388483 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147193685 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330222121 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116015281 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068309064 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0970955 seconds)
  done (took 1.364399215 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080112859 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101185278 seconds)
  done (took 0.932162152 seconds)
done (took 3.200368558 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081007565 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099054681 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078718846 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133620478 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081372896 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097682935 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078904996 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101090421 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081458127 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.100250224 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097624163 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081170089 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096147342 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078312904 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098686752 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077922731 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096330311 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07797081 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095577887 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081135791 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095900731 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07857684 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096133862 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081454413 seconds)
  done (took 2.956721142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100774867 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099478452 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104819726 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086616939 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103294161 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089698899 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104064939 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099034727 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087118289 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100953615 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102726282 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084204565 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101287342 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085389479 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10067009 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10369981 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086780592 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099636365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083190637 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101988826 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103596887 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081385444 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103757423 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103923867 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084621126 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102919808 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083748845 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098924638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104660803 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084852491 seconds)
  done (took 3.63360346 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08648584 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095756056 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07892808 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10449933 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079060325 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098917431 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078335003 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097984878 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080445446 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097007942 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080461872 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096583782 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079490503 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09749742 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080092237 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101008769 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109213388 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078407654 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097031348 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078971814 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100228154 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078812155 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09748567 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078970583 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096900013 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078420298 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097187658 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07935142 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097828282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078704596 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10015451 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082880405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09669235 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086555909 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101008598 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078533369 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099686095 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07929329 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097724079 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096041897 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079521926 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096928219 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078591827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104356319 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079433046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09923298 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078884837 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09836331 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07934855 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10066559 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078700439 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096955888 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082080806 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098301299 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083178335 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096870551 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09783178 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078472166 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098123416 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078935977 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096442639 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07900839 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100014294 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079813623 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112561681 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086400143 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096737604 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080621128 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09879459 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081662786 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098586288 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110703143 seconds)
  done (took 7.264036873 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083965681 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107155304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081610016 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09923862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077512772 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097755981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100565757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079684443 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099387905 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086281233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097570178 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08116865 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099026961 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109579045 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079564104 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099573411 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086055091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094888268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079945671 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100931954 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080200081 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100953333 seconds)
  done (took 2.784306451 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211197679 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106364703 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14511573 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10974813 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084511485 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1077954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103732871 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087187553 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103650212 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084736571 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102292578 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104522554 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084547591 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10198456 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103005493 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086196413 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104878181 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086225898 seconds)
  done (took 2.681520743 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094260544 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100263411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104667857 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101399508 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10103916 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084884776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105779649 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109852568 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084838873 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10017254 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092026311 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102187955 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102858667 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082791495 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10316144 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082659181 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102277231 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08185426 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109303384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106356947 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105690583 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092281947 seconds)
  done (took 2.917046345 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097787707 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102436858 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120690683 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085064001 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097249308 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080455323 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107303229 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083091844 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109403828 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102403442 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082673468 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099482655 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089484531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100015687 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105889321 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082319813 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103210515 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082268125 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10283028 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078648887 seconds)
  done (took 2.680370838 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104657385 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.214317772 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101723021 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093985287 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102812052 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085138351 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112223989 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102103795 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083816012 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126712712 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101800248 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084613486 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112033413 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10838843 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101875709 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094088251 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111561334 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112116972 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084340815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101975648 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128191724 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084891154 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110732868 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102137585 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084141993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101613855 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102604055 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089767332 seconds)
  done (took 3.71425682 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082408656 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100893482 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079397252 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099005222 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079903983 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098723294 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079604016 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098248225 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082434055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098152632 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081978584 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101336527 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085365572 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101396519 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082553935 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101405352 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083229484 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09899111 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080726224 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098461568 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082063662 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100952467 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082475812 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099343443 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080010882 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100974818 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079819026 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098632057 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083090106 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098622157 seconds)
  done (took 3.494169572 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091796722 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108934097 seconds)
  done (took 0.971825791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080322444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116756294 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080099688 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105360695 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087614552 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102148283 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109625885 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087606734 seconds)
  done (took 1.54178229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098556992 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112659349 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084502419 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114985933 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111700931 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099027007 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172603197 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103215438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088559274 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099680592 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115855797 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08187662 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107316072 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082959556 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107193069 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088622376 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099537471 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107107701 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085550666 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100344239 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084397126 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110481855 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085957099 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098241062 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103506018 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091993812 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114573002 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083929099 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105040317 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109494627 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088377038 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095525157 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082806173 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102901626 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081902541 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110698397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118199807 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086206748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110948563 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08594339 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114090615 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096802384 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089094722 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107992932 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112811866 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084275198 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103818224 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078113531 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099432085 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08531611 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09718528 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083375097 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09718126 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090691235 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106354259 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113214955 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082314475 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103257139 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08647156 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105259296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089501387 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103835399 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104677962 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082279792 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108865894 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088036115 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112732074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078552286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095811107 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102946925 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093397739 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125657629 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090294718 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10337638 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103146254 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082209755 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10544497 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085296304 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108074706 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108901489 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084407854 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10872165 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09180739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102113281 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086870399 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111583007 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100740622 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085366269 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099403741 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120764664 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082401364 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100903948 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081647089 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112933996 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08706905 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102729407 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081650003 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109556321 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096541177 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085199993 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103394451 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084468495 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113802235 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108786319 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089953098 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111237805 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090282053 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102802989 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105584569 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080067506 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103470623 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085717982 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109565497 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07763293 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106577163 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084338069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103549151 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111875347 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081967098 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102983605 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09146608 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108844268 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082533921 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099097564 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105602944 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084159936 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106131902 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092188641 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101630077 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07836827 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097825976 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106844871 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083233933 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106597906 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089925585 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106266135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077824933 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100602016 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107137522 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093643223 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10351561 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084128422 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109349578 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104452226 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083056444 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107652626 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086740565 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102302733 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090525194 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103557561 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079764636 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106932387 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106105676 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083195924 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107021769 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087852776 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105920144 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085447514 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102099005 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108810085 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085519571 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101332257 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083022357 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102219385 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095360494 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105413506 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098625922 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080889022 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110889531 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081471967 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103451906 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083022704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.1054869 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103418857 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08208957 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102376185 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085503099 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115516481 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107341178 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085767023 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108859297 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096431014 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10323362 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08604282 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102849947 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105128255 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085300366 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112733027 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089332868 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109236459 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105787745 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080870441 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109204289 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091970161 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102254016 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081679718 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10270972 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087144069 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108890438 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10654596 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085471284 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101554239 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084930144 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107050506 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106763024 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084529257 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102428891 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089007906 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102111808 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091125959 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105422682 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113422833 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087330988 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098978161 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087693652 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100777835 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109439824 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080029419 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10104121 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082951167 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104401411 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083604129 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106570254 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078526553 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110297149 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111037395 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083608485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102821875 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084916447 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110177844 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085740792 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107232738 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08841543 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109419024 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114299979 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084018097 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106767706 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095441114 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103236506 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07776999 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109198061 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102101707 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0840323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102461494 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082080437 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10649385 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113088758 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091315683 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097236998 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086925327 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10219659 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083136414 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09983689 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088508732 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106026528 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104492407 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091692496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105581472 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085374435 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107497537 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085937394 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104596305 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105114987 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087372555 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104772629 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08780786 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103346281 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086986016 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103219309 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084707916 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105668244 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104333012 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084737659 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11012003 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084506761 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103817945 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087797123 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104398917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085610674 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105085904 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100298479 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085377074 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10271075 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0845721 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106477561 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079358768 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111580141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084695019 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112033 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103983014 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081617117 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10976844 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087234784 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109373868 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10519737 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086132238 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105114844 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083954061 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10688952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091323437 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101935771 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116525845 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093456147 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10507224 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088067345 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103904957 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086595725 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102791245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085532467 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104981935 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103912399 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08471495 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108346817 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088015892 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104708038 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086501063 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105860415 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084372854 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106303652 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099069956 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084093702 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103223253 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086503148 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115754998 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085975624 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108059013 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104381037 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086682206 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10385576 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081416436 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112904837 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114485805 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086063008 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112190654 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084679164 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106257787 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116293249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078914269 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10292783 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08365639 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101935885 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092842217 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105757927 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094587114 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105353837 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103209001 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081957555 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105341644 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083718513 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099241688 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082987265 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108398125 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086812916 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102920216 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085325005 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107262161 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105637512 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104050962 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103102995 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083024587 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101920357 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079504781 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099635314 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081087319 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104161616 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102077516 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081194927 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098419105 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082420203 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101619157 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083819654 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101152478 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083945876 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108225353 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101224798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086077441 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105931787 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079480505 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10780354 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084676154 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104530246 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083948947 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108167025 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106399615 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086945069 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114526928 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084998503 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103286735 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103696087 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08193103 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101205249 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082761242 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101066505 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081387303 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103785959 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090519641 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100093421 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104189177 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081820836 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101137029 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089837539 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102680906 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085324926 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108842487 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104982126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084871469 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111815372 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088746212 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109047385 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1065867 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08667286 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110983835 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083702542 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10999995 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082760859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103724743 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104357797 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082520368 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101737404 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082341057 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101600012 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088857806 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103512695 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081437811 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102527581 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081449902 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104558687 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106578228 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093472911 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105550643 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088616188 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099111201 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082843494 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106296309 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10321559 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088157705 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109096159 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091938545 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107701693 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086085592 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104879729 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11477958 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091603766 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110078008 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082958431 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109172465 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086463587 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107430651 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086159085 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106178161 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105807932 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088324205 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104755564 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084267562 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110762538 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086720424 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104310926 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106678953 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086156772 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102009614 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078121398 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10250661 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085797452 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108272393 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08595863 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103251275 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113103439 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082563638 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101573055 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086104985 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101826582 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106821647 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078200161 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10262479 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084024723 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104287328 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080348868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104464338 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084105034 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107539904 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084810612 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100722941 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116451094 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095224371 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108816543 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084712868 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104311629 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080799788 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100111751 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084264125 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107169918 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107842759 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097494175 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104655851 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084538113 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100941346 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086644738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108536603 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109302486 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083124664 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100434114 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084220553 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109575558 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091063127 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104522651 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085379315 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109620524 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107895682 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0838699 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109860358 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082453247 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108943236 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098872628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107738408 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10689753 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092995415 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114095006 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086820845 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101760096 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106391286 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088776096 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105158646 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087791826 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107251003 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122464042 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089055566 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104741128 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084647286 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108408182 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085221206 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114611731 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087000676 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106906517 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110030847 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087980601 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114614443 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089101413 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113804543 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109143731 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089564764 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105147453 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086273292 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104441607 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084423703 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10697322 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107481104 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091834729 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11470349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085015864 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117447598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115680526 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091047213 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102551192 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085521296 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105598018 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081973914 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107190891 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084663694 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104738823 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083457453 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105443783 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106923607 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092178622 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106918377 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087611881 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106133338 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080310611 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110487518 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088677179 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106828362 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10356687 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086795383 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10698509 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090526929 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110956263 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087273798 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108055753 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088202928 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106698033 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10099221 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092997702 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106272217 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088818105 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105821073 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087078008 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108162577 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09038019 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112497462 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108286053 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089218164 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119581986 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089574849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104334777 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083677327 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11279177 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10478193 seconds)
  done (took 58.981443187 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150673094 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08385694 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101982232 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082331733 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116140814 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102932986 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082462967 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102950011 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081948354 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10539865 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081587361 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102072483 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113038957 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128221877 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096223169 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107141497 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081612964 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104062869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101794989 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084176637 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113090009 seconds)
  done (took 2.944074109 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107976966 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120776074 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119298064 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123961731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091985092 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118707729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117605005 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119021089 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102299167 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114528554 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122480909 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119111712 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093854162 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114463119 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114321952 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095818718 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123442582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112417379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119451171 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098429384 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117947631 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118205964 seconds)
  done (took 3.307056657 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087602247 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106036875 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087710203 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101156512 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086434934 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101411959 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090875094 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104532336 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089948014 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10560476 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084734066 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.106212962 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.1081572 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080970651 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10591138 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084376691 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156726613 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110810619 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085950891 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108622727 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080831051 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109506294 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102474418 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082359219 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10562561 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091619555 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108112394 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084291217 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106859374 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085147894 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10669951 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08399632 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108479386 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107039322 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085321251 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105235333 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084221412 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106152438 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082244924 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105849819 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086947974 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102737162 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086830036 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107940455 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084850057 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105776408 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087198972 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107015653 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.101554244 seconds)
  done (took 5.620007158 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107638067 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165068013 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088287175 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14256473 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122373316 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112276312 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08720495 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14149504 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101653748 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08248216 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122334952 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119007732 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102810651 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089183765 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110945629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103796892 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085074141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102135287 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107898505 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08346784 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108481112 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089596517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.1191308 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117061608 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107351061 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083002613 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103562657 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108662382 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097257209 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109081811 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112232217 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093412355 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123558202 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112162724 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08641901 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111017563 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126000569 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10816866 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08993629 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105321252 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089737709 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112571095 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114683905 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105146166 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109279984 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113456119 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087224586 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105584083 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122526494 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090146649 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117224331 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123217342 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112361309 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087918957 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113044562 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124218712 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087881297 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106335631 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090807572 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12152608 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10528982 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092179388 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124006758 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111060485 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116562023 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101747652 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112959464 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112124214 seconds)
  done (took 8.268451863 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096468859 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115498138 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124302963 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125003595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094044232 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115483018 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114633361 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093685711 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114508797 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120855173 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115621005 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137944868 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088731418 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118818956 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114714726 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094295064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115841842 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115233019 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093765071 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116154576 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115607922 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124600293 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094151042 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124799451 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146610282 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109687325 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094507783 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114877158 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12478652 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114433853 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127516448 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094559872 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115177434 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124335776 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127466351 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095217982 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107381871 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11498245 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094436867 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116282791 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110162675 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104281034 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115979474 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109838678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093869485 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116960404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125463762 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127062892 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118705237 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099467683 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11529304 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125301311 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114735197 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094364698 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124636969 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152268193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125624093 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124398075 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11607893 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103553978 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124757695 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134039765 seconds)
  done (took 7.917235824 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110611662 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119746686 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121870301 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10419787 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084807713 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109280864 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084249237 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10529367 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116738597 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097838644 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120853205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113650026 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095556016 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121257776 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112863847 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116460668 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091911485 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112753571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118238384 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112945078 seconds)
  done (took 3.007753622 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096320212 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128423021 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08920386 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116252706 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112215677 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094586408 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111787694 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112111586 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088328309 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112289107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099601943 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120738046 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108806598 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095140399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120453717 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116460902 seconds)
  done (took 2.558915397 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099069269 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121421587 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125282671 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087978847 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108863339 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083287711 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110013342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104715562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084082733 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125041688 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088533653 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115068082 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109463091 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085970207 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105667081 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090638922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105734815 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08508438 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109201468 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123706836 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098954855 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108615894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109521824 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089769572 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109881182 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094117862 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111008693 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107191731 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086918514 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109378457 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088243445 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117668535 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106179198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087230208 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107071847 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085604606 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109128834 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088780884 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112414836 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109083011 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087087851 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108774622 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087934987 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110089084 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084024769 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109541053 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105220224 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094938789 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106566988 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089096128 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109335924 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090327083 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111063021 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120434359 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091297226 seconds)
  done (took 6.450918681 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102840488 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113357396 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083819166 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107504204 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091479572 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112568813 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112961036 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090631482 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110969165 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085842244 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11185119 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093524432 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111541066 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113172284 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090032587 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112832295 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083749402 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11051893 seconds)
  done (took 2.68636865 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094430947 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108953632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095589233 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107425072 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085157957 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111980434 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083491769 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108063153 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106304345 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086942785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104865179 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087125999 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103456284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08698157 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106411918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084041718 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109403991 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103518242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084150912 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100378559 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087312824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104538817 seconds)
  done (took 2.995842158 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12251457 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129968257 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095381716 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.240396946 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107404294 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136371558 seconds)
  done (took 1.676404973 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112921911 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126366567 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110759418 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111819165 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120570777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089846059 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111682429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11206879 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122651147 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103839308 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111735328 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123318774 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122467086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100176194 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118783911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119650971 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111996547 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091787276 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110998923 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132776006 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091616224 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122413381 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11251131 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090494722 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112136896 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123023267 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122353837 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126496335 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091101339 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122382715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118719931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090613375 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122788754 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127303346 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113131121 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101005604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111925753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133870627 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118674585 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101043873 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113352634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118701217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101555203 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117686714 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123886832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112493966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096667079 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11235649 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113001017 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140156726 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097121007 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121798128 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119984193 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121869955 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100423508 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161988427 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105285579 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121510088 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119709543 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126636178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121151456 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09750113 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121446526 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127464238 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119290425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121667839 seconds)
  done (took 8.423107362 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105904601 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130803753 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113043828 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127097924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100523599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112324621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112226436 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091029081 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112812759 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111585309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156470555 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088197556 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118164684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118781284 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091154596 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113546137 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112933898 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122037953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087628961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135862192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108777472 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117380289 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117961437 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101115447 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127021622 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120052339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112938319 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091845294 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113293097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112965239 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096332254 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113672429 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123255392 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090681289 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122441035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113315586 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090722349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118428232 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112582633 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119852952 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100523208 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132350212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113223253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112675751 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105031913 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112908156 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113295968 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090880994 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113730196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112893022 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105506904 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127510827 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127310993 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123007129 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11320353 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092088019 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113737666 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113219462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092247414 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120105083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122511328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091432368 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161782154 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091320723 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113016732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123230864 seconds)
  done (took 8.277312375 seconds)
done (took 158.505472224 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.245687182 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.231110562 seconds)
  done (took 1.323972672 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102017541 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140533419 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095619765 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167583599 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105567469 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117846734 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138777408 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097280475 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106102737 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085650142 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106023468 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085940392 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171623248 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084155761 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107696859 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107839343 seconds)
  done (took 2.673248749 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207028367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.263480072 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105924763 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109518777 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091325392 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111408227 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104633364 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089880881 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109604897 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084447507 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108436184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085928926 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105279717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.084955417 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109758166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087061951 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106205143 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088053738 seconds)
  done (took 2.907884342 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116578095 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147575081 seconds)
  done (took 1.123504964 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123292143 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18512591 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318125869 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154771382 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105999102 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126191519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156926053 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130422536 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196588585 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122492788 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12199685 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096662027 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139954939 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115319978 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093580523 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118611033 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14100349 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092363494 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11474497 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115158456 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115810354 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105625176 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114799631 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092674161 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180961436 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118653501 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083837741 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106404641 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116082219 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094487136 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112540582 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12440411 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09717423 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177894613 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102091526 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176981097 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098939368 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.1131223 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114386376 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090567436 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118771064 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117788944 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103256201 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117805682 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083922822 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118453447 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105277248 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084704531 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113811158 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096101115 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114651099 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11359035 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156025693 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117920728 seconds)
  done (took 7.520718551 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.807818545 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157949769 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089480299 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89480738 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137877519 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102837505 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.793279418 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135208952 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231697316 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758607891 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133441966 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121241641 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228602206 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235938261 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954808048 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314399902 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670177438 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101104847 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151025028 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15160706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118394394 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135648933 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130320111 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428020103 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094143872 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111809123 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094393494 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120965915 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158203161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125178453 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113627393 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17729502 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249075873 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204803037 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115254189 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088824214 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110752794 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169326777 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268144944 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21322264 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180199484 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086575163 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110759987 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099660972 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131321559 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108435897 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163367104 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172373175 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194381873 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09192691 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121668602 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118996449 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099225462 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186256851 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098180827 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319087946 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316133319 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1111233 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120143882 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105313537 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263576651 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122579935 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222188254 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117370738 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212876811 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109922639 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780673038 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188862653 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08939791 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118349646 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096382879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116278542 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121712703 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167303486 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392136949 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124265556 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092761952 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110978862 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210624508 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125539036 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110479702 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16234699 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093332542 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121559031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12444675 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122070688 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168755794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234576774 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123917515 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118845127 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093538164 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124668487 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115992266 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211062072 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219845908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163681114 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207077035 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122447642 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162492954 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188601335 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09793546 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193835059 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09835047 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125099255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122218907 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215998595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145325788 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101781727 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114780448 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11695847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148323412 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106052812 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118801051 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168837571 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477184206 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168358158 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107922786 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105719644 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120106765 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159845582 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117912117 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.255807232 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099297808 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189756255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097100225 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108821238 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120034983 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164848828 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121751953 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099702114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123150448 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117761972 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236151677 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217724121 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100472978 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245584444 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18335682 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117851062 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173414824 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1215724 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168554445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118905016 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099409244 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1174116 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801064687 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100688377 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120481746 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114514429 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186022179 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089991998 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125036923 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124282599 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086421541 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775417502 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127221974 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098395749 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124219857 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118182699 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119574631 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095945219 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116329065 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163587959 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229951346 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120983868 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097368966 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125893858 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158411092 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117931169 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124088225 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124291873 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103388471 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121919308 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11497668 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101461074 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190584124 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162399128 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219109216 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568397488 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112533688 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123641284 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226205217 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089441264 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288025091 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118693758 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202407857 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185746144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098729721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308415437 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186722378 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187841964 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104718146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194282725 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087286735 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118015204 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165050941 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110941075 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094928074 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182685396 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103437456 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123475365 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958998359 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089235943 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24770237 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087091847 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169158045 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1174911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121134439 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295232158 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089864687 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128866418 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16371036 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115102586 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12336627 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.712129687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12555689 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121745725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096071081 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222937503 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166254079 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119974719 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118651181 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097501543 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190220179 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209209427 seconds)
  done (took 43.978414478 seconds)
done (took 60.382592881 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280277343 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214198897 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262922278 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16936636 seconds)
  done (took 1.889363022 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177298067 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150826358 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120150143 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107008619 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149970216 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084884758 seconds)
  done (took 1.673843058 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372568949 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.283506781 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247663409 seconds)
  done (took 1.792890685 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.327826795 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247318901 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.479208216 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32958837 seconds)
  done (took 2.373648662 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.217282738 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.139386979 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117642209 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109366771 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202943965 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.257687566 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148125769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.209724084 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104536981 seconds)
  done (took 2.443480647 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20348762 seconds)
done (took 11.267473897 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.254186918 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.220844697 seconds)
    (3/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.156743337 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.171197755 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101861595 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.132574487 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.227240797 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14835357 seconds)
    (9/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.224364581 seconds)
    (10/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122935895 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102013847 seconds)
    (12/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.137411862 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09761527 seconds)
    (14/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.248269613 seconds)
    (15/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110359383 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117631199 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.229762811 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124701817 seconds)
    (19/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215268513 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111760952 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180931754 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133371271 seconds)
    (23/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.224000685 seconds)
    (24/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15737746 seconds)
    (25/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125033539 seconds)
    (26/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124805013 seconds)
    (27/286) benchmarking ("sort", Float64, true)...
    done (took 0.229858375 seconds)
    (28/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09537313 seconds)
    (29/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.225152238 seconds)
    (30/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.238643033 seconds)
    (31/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12153641 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096139401 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.222802364 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121009584 seconds)
    (35/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.260826148 seconds)
    (36/286) benchmarking ("sort", Float32, false)...
    done (took 0.173498271 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093931876 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170526716 seconds)
    (39/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193278237 seconds)
    (40/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.155176611 seconds)
    (41/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.120993195 seconds)
    (42/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.202478663 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094173541 seconds)
    (44/286) benchmarking ("sort", Int8, false)...
    done (took 0.186970685 seconds)
    (45/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.127491963 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.20902458 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065564368 seconds)
    (48/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.20032307 seconds)
    (49/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.179417416 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093187152 seconds)
    (51/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.185728546 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117007364 seconds)
    (53/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176737349 seconds)
    (54/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17018623 seconds)
    (55/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119865271 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093462561 seconds)
    (57/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119080704 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091252897 seconds)
    (59/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183393455 seconds)
    (60/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.15165611 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113616546 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111144741 seconds)
    (63/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065887957 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.102538934 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089779024 seconds)
    (66/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121110853 seconds)
    (67/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067188013 seconds)
    (68/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111117959 seconds)
    (69/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065738753 seconds)
    (70/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09083517 seconds)
    (71/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.12001161 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.117373173 seconds)
    (73/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099521001 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.21983153 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153732384 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129822416 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118315144 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122861646 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.071874123 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126566162 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09929505 seconds)
    (82/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.158904238 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.233981219 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.091971062 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.097351898 seconds)
    (86/286) benchmarking ("sort", Float64, false)...
    done (took 0.152791562 seconds)
    (87/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.152696082 seconds)
    (88/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067468722 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118092373 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175553909 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.161316902 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.141107223 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.095374305 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090798716 seconds)
    (95/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080880397 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.1713613 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208873416 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144784564 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196313308 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11351751 seconds)
    (101/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091038769 seconds)
    (102/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.128665267 seconds)
    (103/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091104678 seconds)
    (104/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.162079335 seconds)
    (105/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092578677 seconds)
    (106/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.10002929 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.122240982 seconds)
    (108/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094344584 seconds)
    (109/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096224833 seconds)
    (110/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095841558 seconds)
    (111/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.121980209 seconds)
    (112/286) benchmarking ("sort", Int8, true)...
    done (took 0.226270055 seconds)
    (113/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098566474 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1231573 seconds)
    (115/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094416905 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.210722786 seconds)
    (117/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.147893089 seconds)
    (118/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093399323 seconds)
    (119/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.125045452 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083350147 seconds)
    (121/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116039526 seconds)
    (122/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097375937 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070685104 seconds)
    (124/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233019231 seconds)
    (125/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106199037 seconds)
    (126/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090394025 seconds)
    (127/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118655694 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.183186558 seconds)
    (129/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071434622 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124210442 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.140423027 seconds)
    (132/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167552791 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16205097 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096749858 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.140295774 seconds)
    (136/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.180859718 seconds)
    (137/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14777384 seconds)
    (138/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.082747351 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.190629675 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09436659 seconds)
    (141/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090620385 seconds)
    (142/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157395663 seconds)
    (143/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185958203 seconds)
    (144/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16339162 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086344663 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136176463 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.069392633 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112278923 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092996627 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111425176 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110429416 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06527423 seconds)
    (153/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135556721 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099452994 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116350868 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081455452 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119075416 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089680474 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119173329 seconds)
    (160/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068107878 seconds)
    (161/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066856121 seconds)
    (162/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.153921664 seconds)
    (163/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121078241 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069053328 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167572816 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147643574 seconds)
    (167/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092656036 seconds)
    (168/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163321602 seconds)
    (169/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085352377 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115311978 seconds)
    (171/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065670054 seconds)
    (172/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06643508 seconds)
    (173/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08991698 seconds)
    (174/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077085485 seconds)
    (175/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.157143737 seconds)
    (176/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105376602 seconds)
    (177/286) benchmarking ("sort", BigInt, false)...
    done (took 0.442536159 seconds)
    (178/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117426639 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119579793 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077666415 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092731805 seconds)
    (182/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092084029 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.074975256 seconds)
    (184/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122791121 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094708317 seconds)
    (186/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090820231 seconds)
    (187/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067525145 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108947257 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086089717 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116448305 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086692907 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.220371775 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.1089887 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066668198 seconds)
    (195/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111973147 seconds)
    (196/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088467881 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116153066 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087347314 seconds)
    (199/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.142491046 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086650981 seconds)
    (201/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116476086 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06733065 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118508393 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094024604 seconds)
    (205/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115191183 seconds)
    (206/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086476591 seconds)
    (207/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110006431 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06592049 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120765672 seconds)
    (210/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.16459109 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.14435188 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109138498 seconds)
    (213/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066957315 seconds)
    (214/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156769187 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117717562 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11549835 seconds)
    (217/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108373619 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066474126 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084648947 seconds)
    (220/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.090739855 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087763081 seconds)
    (222/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090225527 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068691289 seconds)
    (224/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066171474 seconds)
    (225/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116289832 seconds)
    (226/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06767148 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109915665 seconds)
    (228/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066692896 seconds)
    (229/286) benchmarking ("sort", Float32, true)...
    done (took 0.227298925 seconds)
    (230/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112247654 seconds)
    (231/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084664173 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110001947 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.070610065 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085501411 seconds)
    (235/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.091012411 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086201621 seconds)
    (237/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090108726 seconds)
    (238/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07542864 seconds)
    (239/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066641681 seconds)
    (240/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112664733 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085397255 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.142536225 seconds)
    (243/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065256259 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093508383 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066312526 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110281196 seconds)
    (247/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093351633 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117313377 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086319644 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091231304 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.112539409 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125842916 seconds)
    (253/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075618022 seconds)
    (254/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110391566 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094172154 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14068451 seconds)
    (257/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186612747 seconds)
    (258/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087971847 seconds)
    (259/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092431655 seconds)
    (260/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234006326 seconds)
    (261/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075396254 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109040707 seconds)
    (263/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087310104 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110604256 seconds)
    (265/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105255607 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116999019 seconds)
    (267/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088959135 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108830187 seconds)
    (269/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092163194 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091403438 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085483665 seconds)
    (272/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117998544 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09367898 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090803512 seconds)
    (275/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06720263 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115697817 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086856363 seconds)
    (278/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065189785 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182053489 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116701695 seconds)
    (281/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.108870907 seconds)
    (282/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091892057 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092077207 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11019688 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086503465 seconds)
    (286/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134011302 seconds)
  done (took 36.359040182 seconds)
done (took 37.254747776 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105534617 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150398282 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096934746 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135569453 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122946444 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090698415 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118485276 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097175149 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124111179 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12582453 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097091561 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093717011 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095904739 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120119461 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099009222 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138833102 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123461536 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093290234 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118230785 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085371194 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117999636 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085419175 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112348522 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073828986 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126336702 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098659725 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117482109 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123657029 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086913952 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110105059 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08940688 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117534343 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085577775 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122920828 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092626303 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118763325 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096565438 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12063533 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088197019 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112151123 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117866194 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085295033 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116846781 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0939763 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115903967 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09140724 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117960364 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098883846 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139612691 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11531801 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094223264 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120017013 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095173644 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116916335 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089641892 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119055898 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090859138 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139878826 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118936944 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091160969 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117395808 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094245247 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116235605 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094930309 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119010982 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122370991 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097550169 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115931535 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096534944 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116040594 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085995236 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118862416 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089786381 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111872161 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098602715 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121834284 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085295026 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117454075 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093601132 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117369511 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109916689 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08849838 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112384174 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092005047 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113656223 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069484787 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089925781 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117624667 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089351837 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121525566 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11709458 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093434812 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11283238 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100521303 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110244714 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091352955 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111495363 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086706682 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112781049 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093762707 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110216705 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090401037 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120698127 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09241348 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118826212 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100229956 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112017394 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117999875 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08532737 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110608215 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10404476 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121695434 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086714885 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116357721 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088684586 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119723003 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.09149947 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111584416 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090513527 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111510274 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095998466 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111748312 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091319572 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118425457 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125514463 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08793177 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115300258 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09197788 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11179179 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095807282 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11146753 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088569164 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113098694 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078010445 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114224562 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090073311 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122721108 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095621571 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.124421541 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094745409 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125381692 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096619904 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117329752 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094124934 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111275999 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078189846 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119443574 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089230651 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113452456 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086583575 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113372634 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085902562 seconds)
done (took 17.019544411 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093034693 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190172104 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15110885 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146032523 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110953436 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113068304 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12419344 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118762731 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115069492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147885719 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110519251 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132239236 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148072766 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087086292 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113072936 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094690141 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115824229 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10759378 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148203157 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137940349 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.171885537 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091324974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148217756 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139342829 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121908876 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115179072 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112309073 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091052022 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115444332 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102131882 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133870118 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090448418 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114749996 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134241328 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103494482 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120003135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086845533 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119271346 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089376887 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113337288 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.146312148 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.11507922 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.124718721 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123025776 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095383151 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114315371 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088843816 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121193894 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099460218 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117513286 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127523627 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158393494 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092860483 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122847501 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.091152174 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124652834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126572055 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094738343 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112937088 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090326559 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112223068 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090626656 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127330394 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142961609 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091129966 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123039055 seconds)
  done (took 8.736701731 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10974316 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146213894 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108645717 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133061824 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112322051 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088541704 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115902012 seconds)
  done (took 1.768599126 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093357941 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138954602 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116922469 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137116562 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133716123 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109464335 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124686129 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092102029 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133170728 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091221686 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136425872 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156527461 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091484342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122209886 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138413333 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088620511 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138155009 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091177153 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117926273 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115402432 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121770503 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137643519 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091226043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113549769 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10220067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11517374 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16799233 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098556717 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12079595 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.094811365 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113330616 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.171626266 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108488407 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130995354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093990545 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13481833 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.149487198 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088094396 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130167261 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092685694 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128416867 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088697717 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116697986 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086350807 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120225797 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124222677 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090400839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115483172 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092241621 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133825294 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089590153 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128305519 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089841548 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119297368 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.093597186 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121330257 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126050044 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090336742 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134019544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090754002 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13170169 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106688072 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131337644 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13074866 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090984959 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127403483 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101475374 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117898339 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092654037 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119299633 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137150976 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092324868 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.121030944 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10585593 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121771448 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119020269 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144209067 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096174116 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.13302711 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119954238 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093310369 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11712243 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111449856 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118241159 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090144208 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121696189 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094926261 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113478396 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087648526 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118834319 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090547609 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116976269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092054328 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11705743 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117031774 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106300955 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115308677 seconds)
  done (took 12.045582719 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095200409 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119009486 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094951652 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114327337 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089738452 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115357814 seconds)
  done (took 1.595274321 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120774482 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118178454 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104189691 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123112219 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156280939 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102268559 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131786618 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123826084 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107752328 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128296581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12899199 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104496306 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135912038 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120821569 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103423192 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121098419 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103974721 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126919438 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127485849 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095966318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137996344 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120681847 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096245185 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132313283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118352306 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094977648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125545752 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102670625 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127785392 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123533515 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096124152 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118953036 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098813334 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124208418 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129803199 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098849058 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121372645 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11904702 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099735588 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117807726 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103463092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122310118 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126904086 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09372955 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123776793 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120191529 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093942569 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125551321 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103799976 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12146605 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119372331 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095561655 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117962477 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093152907 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121605505 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12315348 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093140292 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13036914 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094975387 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123227406 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118252759 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092754165 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123737552 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117719261 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10423841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118629843 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094730633 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121859247 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121889874 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095587365 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119888137 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092687484 seconds)
  done (took 9.22785243 seconds)
done (took 34.324070758 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696936948 seconds)
  done (took 1.661138099 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.856073874 seconds)
  done (took 1.82155071 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.120215873 seconds)
  done (took 18.116243979 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510854273 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579832643 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.013981125 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178058169 seconds)
  done (took 3.249653984 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.963935573 seconds)
  done (took 1.95081979 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290878349 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230835719 seconds)
  done (took 1.49272844 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784223703 seconds)
  done (took 1.763774606 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.366240769 seconds)
  done (took 2.337341736 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.338948702 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186584933 seconds)
  done (took 1.509219326 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554352536 seconds)
  done (took 1.534653104 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.843167622 seconds)
  done (took 7.828987345 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.278420926 seconds)
  done (took 1.271514369 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311715256 seconds)
  done (took 1.295751863 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.578295464 seconds)
  done (took 4.564495385 seconds)
done (took 51.373715505 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104850157 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127296384 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101353814 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125060663 seconds)
  done (took 1.437078198 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107820724 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126964944 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106508049 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121895036 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.131011526 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099152727 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123678083 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100188204 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12159543 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099575506 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122282921 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124799785 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.103032245 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.127155829 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093212123 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124832515 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098350838 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122430445 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124486782 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095399744 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119291834 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097435962 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125680971 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095697285 seconds)
  done (took 3.700310606 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106892824 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124718718 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100588474 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118943253 seconds)
  done (took 1.443581158 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105808775 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144421371 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.144417735 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101821037 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142757336 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136548475 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092181641 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117377329 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093889496 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125491801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093602848 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150882464 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142997132 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105027381 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128894016 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09413927 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123500132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139634079 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104668719 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127072593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093025291 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126315517 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089933315 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14104816 seconds)
  done (took 3.852704596 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175705192 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128330241 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138225599 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094224707 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160801405 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140398357 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087558635 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140728621 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087737268 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13177078 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117739534 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13160943 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129189467 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087956036 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11499992 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087043308 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129448854 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128928836 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091509675 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130585643 seconds)
  done (took 3.431166415 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103503536 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117841046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088945458 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116322185 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098724774 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120965993 seconds)
  done (took 1.640546517 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096430937 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114920424 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090472085 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114628846 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095400982 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115000833 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087764884 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114270158 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08882709 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115414444 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087942088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116550656 seconds)
  done (took 2.231111567 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.525452586 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123859583 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119019298 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089527375 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121469893 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08834532 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128894355 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09171723 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141397491 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087974997 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117214524 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091009683 seconds)
  done (took 2.720357025 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24207816 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131705107 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295630931 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382996562 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160586476 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179744586 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292388637 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167157746 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22750735 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174627166 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212545967 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232904749 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160373873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198869727 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147355358 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153564922 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213354917 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257767879 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162756925 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217493225 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236144526 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177271324 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191130739 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159912978 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147244198 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17923491 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099990822 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136317566 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239081623 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184184543 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224750948 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171323497 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154355472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219619087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265099694 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230890992 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299100075 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142518303 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156991871 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17556014 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266936239 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139384472 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23554326 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132893695 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138541332 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222390796 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175144665 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180113947 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154599311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142654026 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19976877 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246037145 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198640907 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146709549 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315335476 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15106176 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.203415658 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203467855 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261748254 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209551706 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220098772 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101367258 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191221476 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227605985 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191289465 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.18075334 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.211492759 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154202983 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206678392 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195556731 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164363779 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22303217 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189614331 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139311655 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170216821 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173732078 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199884386 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237685074 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213715305 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099245285 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169470961 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150975611 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13983232 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197708142 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102337808 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244466039 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144932205 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163229948 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21645527 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160418646 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162369532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204382382 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236716458 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152362507 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082772208 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156519783 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156839616 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222345118 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11822045 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160253034 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162560892 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131983425 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188749519 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.132077682 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192772327 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120919425 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176050683 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183775844 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129642295 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162580229 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154860894 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124471053 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204647103 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205761194 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143159891 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13315201 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216550785 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181766371 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.157891798 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184592415 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238131051 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122650118 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15095169 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237432138 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252752918 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119437347 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23190452 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161141241 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112422746 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133848255 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18527512 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161962578 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.169093356 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142555112 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18880193 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242167557 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100136942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141490464 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197623716 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136796076 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136625485 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169254202 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154999205 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144481093 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129834361 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155393153 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21420987 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186032333 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162431822 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174288311 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161315933 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265192393 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149743467 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130591157 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15284976 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.128574908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200592204 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234268653 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110381363 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239564419 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176935993 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211837124 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173727964 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141714625 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182076499 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137097182 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097915136 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224588428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175586173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170205272 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205213805 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238668778 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187870998 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192130895 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210103916 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182978458 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.174708199 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16596436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118206347 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164212795 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208579871 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102185411 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145874874 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137438346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15379852 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121772731 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135849552 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227611042 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178392906 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199774247 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165541187 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157413496 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190455182 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.135920893 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180848307 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185403993 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154764014 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207449363 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23041735 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194054498 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150910082 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207901905 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126508148 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12468284 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11720015 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199731784 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113538727 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140856863 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165142562 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182250699 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180492039 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206470806 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220062164 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202172929 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197791269 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101659247 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172866831 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194253779 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180459275 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.200939928 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147541421 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156798311 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186840645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166389668 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265901849 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172616426 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183528569 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244654032 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15400711 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110200049 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153033225 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193527019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159770805 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210026041 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122173987 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142959982 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163133491 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135380469 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166781415 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190603474 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169065506 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225415121 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155327987 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18707123 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131778289 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168156177 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166795022 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172393593 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.086662826 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177457831 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242618431 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153630699 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175674733 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195736971 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140271697 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319403598 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250473485 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202466452 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142615262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162440051 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165525894 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170342456 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175653374 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181365472 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1640193 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189619444 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160888323 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143758658 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146202389 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126495527 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152351865 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133445301 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151350616 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184687579 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14926884 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195172008 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171089284 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167790733 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181260645 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159720109 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150600772 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15803035 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224680034 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190390088 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248440484 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.158892362 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189987397 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2439928 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105172075 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136830309 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139530314 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18462811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111303476 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225574808 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197062937 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237363876 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185631304 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194003991 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144682011 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126812198 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133753865 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203428624 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212010127 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152442362 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161400472 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23518903 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.121903862 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13496962 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182157471 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323297228 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118186972 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228678585 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.085130027 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280875944 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12475209 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103934937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166732523 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240067153 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.143675413 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196765305 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179813662 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177411876 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171860404 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154540802 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198110388 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247761901 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20756515 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186557315 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139196637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157681998 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178613704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227209626 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16589114 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.117823991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234619393 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205653732 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199148438 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143530821 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170768176 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169866216 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158359932 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220157348 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112631594 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240894138 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141683094 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20160293 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160970148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151495187 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183611078 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.222601906 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113706784 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217916105 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183976699 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135461537 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109456881 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198532402 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191196943 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15961854 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098398831 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208992802 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101619583 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222694622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239045966 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138325563 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156792394 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15462057 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140779366 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159229372 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162624524 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112959008 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166165494 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205097041 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136166286 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193913291 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238428408 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17346494 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178183152 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14986122 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693038916 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132605104 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194632017 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159381361 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236926328 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155072957 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172418545 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157964927 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167528238 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198275247 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161288591 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230300458 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221591683 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181576664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132503315 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159109946 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162528892 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115465545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152400237 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169354088 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160562629 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153925151 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207167162 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179353005 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112398752 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140905786 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197853161 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160657956 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214012957 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186795112 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109404383 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202132921 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187318456 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133983578 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180297405 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240946988 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119070415 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152924399 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133774524 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157269598 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265690148 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098667429 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236702082 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193755168 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166780989 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172615656 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150846137 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228772459 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16446511 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186444308 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148531838 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162667635 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158904588 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1381962 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100565568 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158101799 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166391348 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151133976 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159672295 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16440928 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195101249 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122623645 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115249004 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317750119 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192037801 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247805343 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112395771 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137727043 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162756412 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15252858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177383491 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178169776 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136003025 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136543992 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107180577 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160166938 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115014965 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155631311 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222282031 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165249199 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206417683 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135336742 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277409047 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111034838 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156892306 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114702625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102748232 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150211982 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146754997 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1578114 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191752781 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263884592 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147699691 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131833679 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14930202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098202025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137456154 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162821689 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164309615 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17760793 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143589284 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080082278 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154996584 seconds)
  done (took 85.467282324 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169616996 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13160703 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14636288 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201410936 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175030822 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267525612 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208248398 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252165148 seconds)
  done (took 2.63836422 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098613847 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145338825 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156694125 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130983419 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090798444 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11882883 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342826649 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132137458 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116876064 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120436633 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173823211 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09289489 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548836978 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089829911 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119118758 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107396241 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091619221 seconds)
  done (took 3.756495563 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477980287 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.718491385 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.508293459 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096229767 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.132119422 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111476134 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.783510569 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195642565 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113648526 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484446025 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775635327 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157606405 seconds)
  done (took 18.64553216 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120422422 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135962893 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122958032 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152526829 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140509029 seconds)
  done (took 1.768222446 seconds)
done (took 133.714055326 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.110285184 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406775989 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070491678 seconds)
  done (took 1.602081004 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112586138 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136622043 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107452324 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135800598 seconds)
  done (took 1.594313327 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103881618 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126675383 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107964042 seconds)
  done (took 1.434156754 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32350875 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189179392 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.168696824 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111895451 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129731637 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102231377 seconds)
  done (took 1.441952354 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103595936 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127682716 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097196146 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130850488 seconds)
  done (took 1.559821765 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.10057871 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.075084256 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100453336 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074026641 seconds)
  done (took 1.444039807 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120072776 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131909302 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103372131 seconds)
  done (took 1.457314391 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136855713 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139376084 seconds)
  done (took 1.377845372 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111886158 seconds)
  done (took 1.206560385 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.124016099 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169631502 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.194345534 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163979315 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.235501625 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16500041 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140459381 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113739462 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13362313 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143398001 seconds)
  done (took 2.686463441 seconds)
done (took 17.685541043 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10939283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423048154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412057831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117662188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721844092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379518857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.074363511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146209779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165156374 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095150353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139719475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672355969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025125774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372506531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984210517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377550664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678358992 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123330463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119280384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093803887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.06030955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091571282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121706086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091579102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703916394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42793056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099030773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376838091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091630142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126286969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381737157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12352839 seconds)
  done (took 17.014293722 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101494541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176050758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099227329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139948169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122739229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094155777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123828351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092683786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180354269 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122850739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109524232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121748028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125237931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094537654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141570463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092039598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125770186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091812133 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122746464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121469768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112782799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120251936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093064964 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121458426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092634564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137083381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093379882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123920325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120496948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099996916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128527989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094223687 seconds)
  done (took 4.837441848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147925886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185616184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133466705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125718566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168017664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12458707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20017439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122729491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183917277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124062679 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141569989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093102203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157078143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093676969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143870512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121165681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095945671 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122518971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091695975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124554853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140094343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092412958 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122476057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093168617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123269053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106611658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124857594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120764596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092864877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126309753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09938941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123900523 seconds)
  done (took 5.176898357 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103527273 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126454941 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111936458 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138302064 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094217209 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125827466 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096995868 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124502881 seconds)
  done (took 2.02744208 seconds)
done (took 30.151799166 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118177435 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132995441 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108490887 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135089708 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102325662 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131753078 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090732086 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133930969 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133052817 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103220499 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138087328 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09281234 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123783375 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09379727 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13628411 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09657195 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132638364 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101491565 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134345849 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133419594 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099053533 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133788512 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102780874 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133858389 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103483879 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133653417 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137003254 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098578409 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122530967 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093607633 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125247122 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104675563 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124178216 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104204911 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127513676 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096595735 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12409869 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093192271 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133827736 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132285144 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099169893 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132759011 seconds)
  done (took 6.027703533 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114003132 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143132735 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109990069 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080541474 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118675244 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079246102 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139348199 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081489458 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11148042 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109483941 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073356741 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107495322 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077605037 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102853757 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076940262 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075102306 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10964109 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078863997 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07629635 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106989636 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079291995 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072450855 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109327638 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077943225 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074402678 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111381353 seconds)
  done (took 3.604870717 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106266117 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135505358 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1131674 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185136821 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161325409 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10007096 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132608393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110190578 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140807557 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121396434 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096719755 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149335189 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108321137 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13061315 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090980028 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13789785 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136823059 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09324185 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128702441 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110961901 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139587428 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101826754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142073552 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133752808 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093508328 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123289888 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096138588 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135200538 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096969132 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13301923 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096207536 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127564724 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122963724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105422845 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125679932 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094447331 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141709215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101694767 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131019278 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092382865 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131942042 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121562788 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113378196 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16101249 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0906672 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129319005 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0944443 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134966792 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121259544 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109682945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131026712 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091082871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126273504 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090503728 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122253102 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105086112 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124375309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094080329 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133524293 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127711233 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106334253 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125920092 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107798216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122195477 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099272767 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122047179 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092274652 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12205943 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115072035 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125566164 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162199419 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098704296 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124237257 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100518131 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131044019 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128364322 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092353785 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137837987 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104660049 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.1256005 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101359772 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126554651 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094527578 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141169428 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093920554 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12503798 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092924732 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131541697 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124817307 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093274985 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136433259 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093590727 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125486069 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109402543 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123162054 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09302188 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129463157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126647681 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091883977 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137789201 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100990855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123867869 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101895193 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122585844 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095336325 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134444291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127536717 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094228551 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126887379 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100554584 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123728396 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09602315 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126521071 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094220221 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134629244 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098924346 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128039115 seconds)
  done (took 14.864517099 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235116604 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215105581 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206374637 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.291918024 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134760084 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113562825 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212628933 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158590678 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12424988 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160659815 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18072547 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185460102 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169525504 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.184843137 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171774621 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.095534124 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142780989 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133810895 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.259054219 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.2575393 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144226236 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130770074 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.130483583 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162086226 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137648652 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132879281 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110978025 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133410232 seconds)
  done (took 5.844026828 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113817078 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156351772 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097298017 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14702168 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148660151 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092828727 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128625282 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093001412 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13629325 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136040096 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09243287 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129397081 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099614607 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133366027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123672566 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102502282 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131813507 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094754375 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126604248 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096796389 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133422511 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100586603 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127741562 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090925671 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135472253 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121975406 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086593911 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142112866 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092397678 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146552256 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121271709 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101789883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137014882 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092622954 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124070814 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095030285 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126119289 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094574661 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124760756 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09100287 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123067446 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076838127 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122438188 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106772242 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131639626 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079439274 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129360939 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127471209 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096980766 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120428763 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096858769 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125857653 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095485494 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130417433 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095571878 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123243936 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095547694 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115864891 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098968866 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124789769 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084054029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120127061 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100736006 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117370206 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101215551 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127596965 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091315749 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12545671 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097170024 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129083333 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0947636 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12956962 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091378595 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126828819 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094752025 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12914008 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095630066 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124187283 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092519571 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125398454 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074546398 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12533212 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074345407 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126739365 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091468728 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122958216 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096777548 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130860633 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13838031 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094336099 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131921552 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093487472 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122993218 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09540888 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113695097 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096275554 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140554981 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141004975 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092840922 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122404281 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107227609 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126785563 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092353429 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10644651 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101636798 seconds)
  done (took 12.976810211 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133269441 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154115677 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094757231 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144054717 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157075942 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.164484812 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106547159 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131834894 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101045401 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142606809 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093130903 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132881443 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094699288 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139079966 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163240978 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107130415 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126187479 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109853499 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129767788 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169541571 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114934615 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143644288 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11007369 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125317046 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097767504 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.143498954 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161902357 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106829956 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138189972 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143129921 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109912175 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162098278 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112906318 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129972956 seconds)
  done (took 5.539279053 seconds)
done (took 49.964111151 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.241290872 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440043482 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.207862607 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.182742941 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220796598 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.220053631 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.233205593 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.207470441 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.804629048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.20660743 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.461495615 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.917995395 seconds)
done (took 60.483442069 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.224758832 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.341776069 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474384751 seconds)
  done (took 3.949938219 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.566132351 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.174382958 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.4674708 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208129966 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204382727 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494575875 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.902155482 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.588955849 seconds)
  done (took 28.172665206 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.217139816 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.292445642 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.233871064 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.215764061 seconds)
  done (took 6.09569662 seconds)
done (took 48.144625794 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.232850368 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.24731668 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.212196839 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.184783686 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.337631963 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235398999 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.60516829 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.23399333 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.222809795 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.190666138 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.226727238 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209536564 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.226783034 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.640125435 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.220961269 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.218009293 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.253992013 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.738647363 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.636262064 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.223748257 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.214268703 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.242576968 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.214338582 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21143909 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.242043699 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.211300416 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208262014 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.206245011 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.869722422 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.212528153 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.227607973 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.761064842 seconds)
  done (took 191.252520141 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.209733391 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.261255112 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.33325525 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.240076348 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.668011658 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406907389 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346160047 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.735466332 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230822813 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.236281376 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.437837011 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.21020967 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.512786771 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.257093342 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240740329 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.314959526 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.519703395 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.564383852 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.253942547 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.392063652 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.233068819 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.441827273 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.355789076 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.446656521 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.246927301 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.295154195 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.21905371 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.228646325 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398752736 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.437330111 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217390162 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.260027653 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.84830597 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070767919 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.238014182 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.250788026 seconds)
  done (took 150.698263311 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.260301658 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21278752 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21292318 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212989657 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245604211 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.212365673 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.809093858 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811621312 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.715568144 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.758567846 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.646924733 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533410734 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213899569 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308985882 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223345979 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.21120416 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228035148 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255908077 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209605143 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213635589 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810110813 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227098631 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.371579186 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409344692 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226363477 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247198795 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.606082226 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211472664 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246615223 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54840265 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26018782 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210590287 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.637033168 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.372771302 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328459265 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212872809 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247427492 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214905333 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497409816 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211196415 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21542961 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.213350483 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.217747613 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.914053339 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214397133 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.811406419 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214505737 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.190977887 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211531651 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215127062 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.617333876 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.965582367 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232193592 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.215837967 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219759895 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217665351 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21667906 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251182955 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.579625794 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31245737 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.23215477 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.219126721 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249498514 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.215341563 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.457607301 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21647703 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.371672414 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.285442118 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.442900561 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814944561 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215106798 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316145856 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336643504 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211985096 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215580609 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219001534 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.216650288 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328372914 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215077124 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.653583589 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.211647616 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394950303 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.231151977 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.663545928 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.315760314 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.213611589 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.633356035 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.217589912 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218730032 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982762201 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312795734 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.21439767 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.216838893 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216662418 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.65111655 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815627764 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49941011 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220718907 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.577948615 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218506914 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.218857896 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.671089033 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781724801 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929761327 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.222084713 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333165076 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392908684 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232780421 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.216041558 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.659933462 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.220478681 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.279484847 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214175376 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.21747256 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.618380313 seconds)
  done (took 368.395093641 seconds)
done (took 712.740156734 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.824087652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.81811351 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.934460431 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.809473987 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.777583314 seconds)
  done (took 10.306514689 seconds)
done (took 11.44917305 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414845067 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412773775 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281452032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415573636 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248049709 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435188833 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392171528 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.239205626 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.32488276 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303468352 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321722578 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273731651 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247865146 seconds)
  done (took 18.454193036 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.551013983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538254242 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279820225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548031788 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257499819 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547819427 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428418424 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435677956 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438524826 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252329026 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234546814 seconds)
  done (took 16.657706647 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555454351 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544577228 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284999567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577429183 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261336897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541114638 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427327517 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441154694 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.462802723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253354682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233126787 seconds)
  done (took 16.72818257 seconds)
done (took 52.98576008 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.229851772 seconds)
  done (took 2.374293395 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.267557691 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.428008384 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.247800653 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236778346 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.232982495 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231146311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23706259 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232309179 seconds)
  done (took 11.260757578 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22833329 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227704012 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231157676 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.227468937 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.230667904 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.228174967 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231292532 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229995808 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.226931219 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.230255525 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.227271582 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231760541 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227404777 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227249496 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228831822 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.231013131 seconds)
  done (took 20.814170178 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229597081 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.228705881 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.228274005 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.229161317 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.229925806 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.228784046 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.229344356 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227762902 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.228591767 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229210979 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.228324489 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227902419 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229266141 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.228646739 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.229326573 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.231013556 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22955126 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230871863 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.2338333 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.227844072 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.229654018 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22932427 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.231732283 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228724212 seconds)
  done (took 30.655649729 seconds)
done (took 66.252135208 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.486322348 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.963684288 seconds)
  done (took 9.597822653 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.231054354 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.231592971 seconds)
  done (took 3.611819927 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233722241 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.231994377 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232617079 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231983939 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232470608 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232687743 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.232193964 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.232026423 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.232547057 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.232064301 seconds)
  done (took 13.474867046 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.232177286 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.232946076 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.230827265 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.232518312 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233232696 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.229844011 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.233037895 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232543752 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.233683605 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.230040585 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.23307765 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.231034502 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.232956423 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229369024 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232787335 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.231123085 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.231101709 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.23116868 seconds)
  done (took 23.323284085 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23276743 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234327087 seconds)
  done (took 3.617644937 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.23173074 seconds)
    (2/7) benchmarking "second"...
    done (took 1.230562791 seconds)
    (3/7) benchmarking "month"...
    done (took 1.230878715 seconds)
    (4/7) benchmarking "year"...
    done (took 1.230575132 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.23139989 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.232028582 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231716587 seconds)
  done (took 9.769140374 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.234791102 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.410277904 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.49220261 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.824071207 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235268644 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.238323136 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.108055839 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237808972 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.24078355 seconds)
  done (took 14.172753682 seconds)
done (took 78.716888234 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.26586648 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.242996508 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.435908885 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232033199 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.260104325 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.53049306 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.268718597 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.367000141 seconds)
done (took 37.755854643 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.249345779 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.214039785 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.055951637 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.224528862 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.259513499 seconds)
  done (took 18.907304045 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.303934402 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567508517 seconds)
  done (took 5.023298888 seconds)
done (took 31.333618951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238075456 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23557359 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.233348698 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.236374478 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237361261 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.233315931 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.234247849 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.236241845 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.236726923 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.235962874 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.235388966 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237268527 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234526317 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234391249 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237147639 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.23318207 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234117907 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233975858 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.234967316 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237474873 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234779656 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.235632084 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.235928804 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23773864 seconds)
  done (took 30.806491521 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.238807389 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234862026 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.238073755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237532017 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.235562307 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.239179867 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.237411706 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.235390481 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.237041825 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.237772261 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236215942 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235165007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.237842024 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.236604843 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238078053 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.236785003 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240534151 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235299303 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239483756 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.236062622 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.239073558 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234380257 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235888217 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238334804 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23593128 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237267391 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.239713704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.236351388 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238543476 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.237517488 seconds)
  done (took 38.272070517 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.247244943 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.247225938 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240358207 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.240586668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239307435 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.240728774 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239574038 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.239901639 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239827188 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.240066814 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.240198505 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.23966246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.24061435 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.240056341 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.239820264 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239554799 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.240271674 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239554507 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.240742242 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.239988961 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240935199 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.241611769 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.239532484 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240900622 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.240979 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.241330393 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.240510783 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.241183654 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.240073649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.239632832 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.241524391 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.239915605 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239994287 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.240287328 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.24122219 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.24074615 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.246245776 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248913122 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.24161365 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.243363806 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241789705 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.242178876 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.241490195 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.242269465 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.243104046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.241662379 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243154872 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.243549392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.243142685 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.24121988 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.243237308 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.241335909 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.242609617 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.241645183 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.243625164 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242952993 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.242583493 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.243869381 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242823298 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.242839322 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.243477622 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.241610057 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243101846 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243091857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242933828 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.243863738 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.244388922 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.243582556 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.243337616 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.244601089 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24372049 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.244685084 seconds)
  done (took 90.577917528 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.244297696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242815542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243208722 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242559946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241645875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243841864 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241294383 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245394213 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242125748 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245486746 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244978388 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24271585 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241613964 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245272233 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244730291 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24295722 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244680776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243057245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.246080366 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24571369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24368695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243483673 seconds)
  done (took 28.522672228 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245655416 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247466235 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.242685232 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246518757 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243728474 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246114069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246553201 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247116824 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245342623 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243155549 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243497883 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245894693 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243131514 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243288864 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245001277 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244915135 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246181475 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245666643 seconds)
  done (took 23.573079708 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.247081299 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.24585579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.246567779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243267136 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.244093734 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247354422 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243960507 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246628792 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.248740265 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.245829455 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247930847 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247834652 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.246797094 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244678057 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247997461 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246088841 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.247897258 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245165563 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250352971 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24715913 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246110993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248934195 seconds)
  done (took 28.588512191 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250314301 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248766253 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248473709 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249085213 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.246580952 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249574602 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.248512084 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247016432 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.251294991 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249786101 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246268514 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.248797812 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247194362 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247418985 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.246359949 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246045462 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251061991 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248030566 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249157272 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246388359 seconds)
  done (took 26.130849004 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25083394 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252935174 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252427815 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253296115 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251452665 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253030699 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252259187 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252971309 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252178909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25287795 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251181421 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252764159 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252583264 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253529321 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252955878 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253102733 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250961867 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251153198 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250254795 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252102956 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252098471 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25341944 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250743933 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251621819 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251260838 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25228329 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252963602 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253061954 seconds)
  done (took 36.228545371 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250451099 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251146789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.247023057 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.248174248 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.249952358 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.249193584 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.249004598 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25039415 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253176351 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250978479 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.251651273 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252347752 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25286953 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.251530817 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252116633 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252780607 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250774867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.250857779 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252381664 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251146099 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.251963994 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252431318 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.254258901 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250954113 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250581562 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254056622 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251214428 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250082183 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252551109 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248527293 seconds)
  done (took 38.701794866 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272028568 seconds)
    (2/2) benchmarking "in"...
    done (took 1.27041483 seconds)
  done (took 3.709914599 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.250656681 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251636589 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253855848 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.250966475 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252882552 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254770991 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254893947 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250617063 seconds)
  done (took 11.188924788 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.254334196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255139467 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.254411883 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255415666 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253667484 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.256141773 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260328737 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.274091966 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.25422413 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.255867188 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.261947198 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264547961 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255619128 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254373993 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252570008 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256694325 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254979166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.255866848 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.255225887 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255506418 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254886739 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256676904 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257405361 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.252637866 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.25651523 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268277578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27863974 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255700939 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253965796 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258804119 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257092043 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.255171833 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.261491702 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257596824 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.25840503 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256828567 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265323084 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275497496 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.261883698 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275730864 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257306003 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254887589 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.257075779 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258074725 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258024271 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257153063 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.257598846 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.254849025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255622525 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260474999 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.265996109 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25717978 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25653178 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259288628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.257731863 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262218501 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276933616 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.261352261 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269795094 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.271116132 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.290312963 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.28315041 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259767101 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.258291212 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269257979 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.287252289 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263837044 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.276055391 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256106412 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260150235 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.266753818 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292108711 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283406617 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257059334 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258356402 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260193349 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259412252 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261162592 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265349471 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.281160952 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260560727 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259782155 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269885314 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2840112 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259345048 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.258344768 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259942403 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.260557597 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261979296 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271187864 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279642705 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.261310963 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.259684547 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.260732697 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262352976 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262395968 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.261728731 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260783969 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.260828073 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.261475565 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260573016 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264193354 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271345661 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261247775 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262961391 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267966663 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280541497 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26225987 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266753746 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259809475 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261013324 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.263489138 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.26923914 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25851014 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264671182 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.274014822 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261654662 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264857298 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260745327 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.264054481 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27102696 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.292252283 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.262189074 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.262624812 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266417361 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.277935717 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264354756 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267578771 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.262298231 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.260215661 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.260672412 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261951002 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.263675882 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.263128666 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262916059 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264612909 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260502718 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.263829667 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263981651 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265010563 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263404654 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.263464905 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26340377 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265847799 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264672092 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.266540169 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.267783946 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.284234196 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.266840129 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.264198671 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.262567298 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265432919 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265240412 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266727818 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.266222029 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266108026 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.267897521 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265245877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266381625 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.26684667 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264834573 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.266192247 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270802708 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.267041904 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268429263 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264517111 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263588263 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.265463985 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266824326 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.26494445 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267801643 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265630539 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.27241432 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.277658183 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.270281485 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267058723 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270694702 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266619875 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270167795 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268528148 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270771039 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.277577457 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.267448884 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.272997669 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.285918704 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268117539 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268540939 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.266692324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265211763 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267793724 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270921467 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.277383303 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278237485 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29082663 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268266858 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.271481617 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268451822 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.274242921 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272593656 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.267074644 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269495432 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267703199 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268659799 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268844927 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270252675 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268373633 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26775441 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269667705 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268467063 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.266586799 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27041563 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.267982342 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267673561 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.265595552 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267686342 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268461495 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270304268 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266685529 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267495001 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.268709397 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269045844 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269274316 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.274559134 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267045676 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269555313 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268378674 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270283232 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268468958 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272018588 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272061731 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270148842 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277619642 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.287949005 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271274552 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276151872 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.289417987 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272667044 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.272911159 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.270068233 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.270168987 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274373083 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.282103621 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270850001 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.269983975 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271531122 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269835456 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271338185 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276359403 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.288920873 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.271537249 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.271680825 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270631243 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269154444 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271617429 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.269828211 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272266701 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272669572 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270579351 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.271867218 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271239672 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.271498171 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272818097 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272534821 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277968962 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280811448 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277837084 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.271612698 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272332369 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.270934725 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.278014673 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.271854983 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272583808 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272223893 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283189606 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295216577 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276067851 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.292251463 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.274408099 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276967266 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.292715162 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279441796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272710403 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274579209 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272239436 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.272019921 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.270911755 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273774325 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.275642451 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274220882 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273635776 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.280115474 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273594963 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.272946642 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.273362265 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274345088 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.273829818 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.272106413 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.274783885 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.273591478 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276632101 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274588392 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27462838 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278445542 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294998195 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274768414 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274578 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.274067522 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275482862 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274833556 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276540473 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276926102 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284837688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.279212736 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.287733907 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278654528 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286251982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.274750735 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279505252 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.286555937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.27595087 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274110972 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276394366 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276333152 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282310863 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296630442 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276367252 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.280992751 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27566353 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.275951368 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.276795689 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276965321 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275412566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275676917 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283676608 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296922216 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.282511496 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279997249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.273874857 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277892759 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.279078991 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275532771 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280713753 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.27747922 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278201905 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278098414 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.278024858 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278174839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.279561455 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.28004167 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275597652 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.280265594 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283647242 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.2977202 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284077648 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.280727446 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283990071 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296408139 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284530988 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298121013 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279512853 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278879678 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279281935 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.27958871 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279662078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279256579 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.277506225 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.281646009 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.286027316 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27960347 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.28294739 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278334066 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279684996 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.281107206 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290669505 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305869299 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280734455 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285893854 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.277614839 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.281468582 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285211492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280600368 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.280480317 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.282721238 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291541609 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289851581 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279592868 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279623576 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28050699 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281277987 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281592503 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281172889 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280292194 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281333922 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.280570004 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280485607 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283429911 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281337354 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282716316 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280991641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282542697 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.291936587 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.300728088 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282434352 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281309697 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283258489 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281263239 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281133833 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281115568 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283266738 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281612366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284156896 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291025211 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.2906777 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.284726484 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.281230528 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281233476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281941807 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282897016 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283410205 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.284514194 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284736306 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.285651752 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281379932 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283266867 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.283450705 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.284612446 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.282700744 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283756439 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284598397 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.292038328 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283730628 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281003852 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284938068 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282949658 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281333695 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282669461 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290359118 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303877198 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.297653325 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.295064204 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.290150141 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285804802 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28768764 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.294362015 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284100604 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286696727 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.285231965 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284773173 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.284649791 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.289485967 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286309949 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.291688447 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.303552336 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284316777 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294120653 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304076974 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287842284 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287360447 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.290597481 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285183206 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283254403 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286285033 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283563568 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291562843 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306301699 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286771529 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289111347 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285125633 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.290177626 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292802152 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286864909 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.286634456 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28332017 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284595547 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285405158 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287580687 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.285389421 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.285914819 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285960389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.289185475 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.295719932 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285079541 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288463145 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.286392964 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288156725 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288884766 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287656138 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284886773 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.28470687 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28540621 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28818758 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.288656936 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.288652885 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285444924 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.2907999 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290760083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289802777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292379573 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.300104024 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.300263355 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28739195 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286439077 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288486096 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290511935 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288218715 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290630284 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290335355 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.290057199 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.291171648 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290079928 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288867446 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.290757946 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305908064 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308102592 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28936828 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288867929 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29101202 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288696482 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287925179 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289884225 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291189619 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292694261 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.299307531 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.291130837 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297016468 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309139091 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290463213 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294479804 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.291684128 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.299844895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.294415769 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289662052 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.290283287 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.2952621 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.310491196 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290085169 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300001593 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323650372 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310008774 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.293606387 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.29364377 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293712362 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.292077268 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.295875001 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292151098 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.295097933 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294162663 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292083398 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.296437605 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29694672 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.29235304 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293823585 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291658382 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290557961 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.293916184 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289153366 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292895611 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.294842216 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.293481837 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.293624071 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.294295896 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.293480552 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304499298 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319632196 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291602406 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.293167036 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.291603105 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.296312645 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294584082 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304543153 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.30273581 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.296072706 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293021891 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.295718786 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291598441 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.294193523 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294006256 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293316204 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292706125 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290782816 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306711983 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318662693 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.299786383 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.2928962 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294682141 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295913816 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296248204 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294255448 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297027104 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.294854947 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296436476 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299163352 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.293604945 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293966855 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296875064 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.303013041 seconds)
  done (took 762.728760984 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292222576 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291132872 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291132163 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292171193 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291686853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291049508 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291385265 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292660852 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292098407 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2920641 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29269615 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29432843 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293777792 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292254532 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291926111 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292642788 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292999332 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293040966 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292612073 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293402406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293298493 seconds)
  done (took 28.347455533 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294842489 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292158367 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292886438 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296477174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293297529 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296104407 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293390107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295208702 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295693203 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293333367 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295845593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297665456 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294288209 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.296415333 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293857527 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297067991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296823958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292989655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297538887 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293989143 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298134249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296037331 seconds)
  done (took 29.700435467 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2976281 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.2975633 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296979246 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.295524054 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.298553852 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.295530142 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297738191 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.298161332 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298108079 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.296910525 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.297052546 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.299279595 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305779633 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.30506547 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.299111859 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.298649892 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.441773414 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297395339 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.296289668 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.297829777 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296662819 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.302548285 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.316648669 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.296627361 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.297800907 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299422015 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298879092 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.29928973 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298130018 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.300317723 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304391438 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.301897129 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298749371 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300721414 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.2977995 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299311338 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303427186 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299468681 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.29763682 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299696281 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311481093 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.323936139 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300652111 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305420873 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.316931661 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.299754579 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303198237 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.313340644 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.301455747 seconds)
  done (took 65.105363462 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.301729419 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.300993537 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29748859 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301052861 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298582666 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300766913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300315621 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302886856 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298505553 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.300354363 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302032352 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299915329 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298352464 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.300828563 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.302374124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298551286 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298698499 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.3004058 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299673282 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300622714 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299810225 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302652872 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.30331522 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.300162751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301763792 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300379916 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299728028 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.304475896 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.300789194 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300110518 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302818459 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304413494 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.304935665 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.300029131 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299309437 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303212465 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303365622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300947996 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302540301 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.300639822 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.304745003 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30340512 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303596603 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303499154 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299238149 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.301073086 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300870561 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.302450924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.303387072 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304756461 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304565052 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302733707 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303771756 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.299893323 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302294677 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.303593914 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302238108 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.300476515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304441452 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301147066 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.300430231 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304723848 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.304334568 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304519952 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303879353 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302652725 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301346571 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304344307 seconds)
  done (took 89.731048733 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302533794 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303025148 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304387908 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305189505 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303023165 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305688834 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305739074 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303947795 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304663744 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306477917 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303489174 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306724985 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304862664 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304913046 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305796809 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305369094 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306176443 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304708859 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305579461 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305186588 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305996669 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306355119 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.306294114 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306030393 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307089385 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307365768 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307295098 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305838066 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308760788 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30796474 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.309125313 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.304972997 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307976187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308648714 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.308435115 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.307527659 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30745545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30693435 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307345681 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307580123 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.308096223 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307369635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309197174 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.308883422 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30965726 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.310009635 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307283231 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.309110845 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307662783 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308486907 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.310335905 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309164102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308252426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308599724 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308717154 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.309635752 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307313308 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308245643 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307511433 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308744962 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308586677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308842089 seconds)
  done (took 82.249860174 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308221427 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307546001 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304140123 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.30639226 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.307094603 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.30376356 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307914575 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309097038 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308789294 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308278043 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307123059 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308007553 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306118316 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307221815 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.3052035 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304582531 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304123792 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303483696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307934344 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305398466 seconds)
  done (took 27.348277995 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.304870414 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30658988 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.302171601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303463749 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306190081 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304708589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.304702938 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306309354 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303616516 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305503055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30608949 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305582793 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303965178 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305904034 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306306597 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303893628 seconds)
  done (took 22.095279676 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304831731 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.303937177 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.306228217 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306310737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300749962 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303690012 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304879996 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.30261931 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304056429 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307221476 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.304851127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306717091 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302395552 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.305845473 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.30358523 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.305434051 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303862876 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304446927 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.304114379 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304506369 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304725283 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.302957338 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.306608792 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.30637229 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30255066 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.303890069 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.30300771 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.304551987 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303458882 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.305830423 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.303547947 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.302237747 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.302476321 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.302126841 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.307259605 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.30375124 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.305617827 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.306403845 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.306123054 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307621802 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307459103 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.304271723 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305861027 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30757316 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.305236683 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.305739354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303845186 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.304684182 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.304299575 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303910556 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307084865 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.306709123 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307580641 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.3076332 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307570409 seconds)
  done (took 72.989773563 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306255466 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307575531 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305331722 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307764899 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308020611 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304712946 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.307988861 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30637989 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30605296 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.306515593 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305709262 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310444592 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305106515 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30859723 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30696053 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309730171 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.305589415 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307765474 seconds)
  done (took 24.744969858 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.307585982 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308569807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.310700077 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308879832 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.307745552 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308786643 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306164156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.308023356 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31058634 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308303605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307744014 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.309920256 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311074698 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.309924928 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308492889 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309146402 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.310351209 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311422754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.308399308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308962846 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309560036 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310631807 seconds)
  done (took 30.019455314 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.308811016 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.308714924 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.309407668 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.3271967 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.329807424 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.334743829 seconds)
  done (took 9.138635563 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318423445 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310832464 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308676818 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311695205 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310618975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309520395 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308090376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308882749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312299335 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309930712 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308308087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311700466 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311818538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310257194 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31269384 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312747549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308886997 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309519427 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310695714 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313227236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310119326 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31236896 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310206788 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309823546 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308848836 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3090814 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312179836 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312307442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311281172 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31438127 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312869389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310436507 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313055858 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311958783 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313123478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311531587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309469754 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313762122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312649053 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310692299 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314195752 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312127999 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314351151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310193834 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313522444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311677122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312514709 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312346091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313000118 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315220151 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314779798 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312690586 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314937182 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314904279 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314340396 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315307517 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312121615 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312601204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314351053 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313128692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313569042 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313828964 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311159084 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312889076 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314763072 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312295062 seconds)
  done (took 87.843336599 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313642143 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313398397 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312600357 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313477845 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313684662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312076965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312332219 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312723031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311865362 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312783166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314742126 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313089573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311921945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313696218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313300287 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314013603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313422655 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312853952 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313717564 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316896163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313660226 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314653674 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313609786 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312930301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314199391 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316334214 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314262257 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314834309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313217152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314353901 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313553716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312942851 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313740458 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312730889 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313263212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313498481 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313845662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315608963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314642023 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316224581 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313299053 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317302589 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314977866 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315316209 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316109751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315490075 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3152773 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31377858 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314130438 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313957264 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313395116 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313926456 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314205267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317067012 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312790808 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314094399 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312944054 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313833884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31242187 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316435433 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313371726 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316739686 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3164583 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314192207 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313972029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313783059 seconds)
  done (took 87.953466078 seconds)
done (took 1777.450513678 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.33005372 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.334165719 seconds)
  done (took 13.888292047 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.474193521 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42973259 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312356698 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.309570663 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308756061 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328986019 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.329545984 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306873469 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312975605 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312205783 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.311292595 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.502310017 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.366677552 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.309332629 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313241397 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.407315073 seconds)
  done (took 42.8605606 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343750283 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321106219 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.435908661 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336972124 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342421425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.508659419 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371003944 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319582693 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.49926757 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.362898299 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.930410907 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.3371331 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.31772359 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.472325075 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.333637395 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.506715574 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.573089932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.92479674 seconds)
  done (took 30.46162058 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785216804 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.321762168 seconds)
  done (took 9.330453379 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337795222 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318722143 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320016533 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315888409 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.311091478 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.304361573 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.317910732 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.321431806 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.114285587 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.447787452 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.318219143 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.325796257 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336389857 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319878186 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316049136 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.354382328 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.47341396 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318373758 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31395657 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.3246138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318166902 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.439701009 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.360007353 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315742289 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447770509 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.098321302 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.31970101 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.325198681 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.453262625 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.316591135 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316642944 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.319440342 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317234788 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.924419253 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.798371548 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.334403323 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337851127 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327406553 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.31665399 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.509075872 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.317970473 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.323499605 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309820639 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.782299975 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.460656508 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.43580733 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.6210076 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.334318966 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.319825201 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379783274 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318601501 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317037353 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347680791 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.095251191 seconds)
  done (took 110.998437821 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363409123 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.703747094 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482152978 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334172565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06241143 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004718513 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.32049624 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600194174 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338192696 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309177371 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599428531 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821519632 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320902886 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.371617039 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.793338939 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362740921 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313245165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.053808051 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.320682056 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.311726571 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811056548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31151934 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303863902 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.422963719 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341974932 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761573931 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.693553336 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.717562796 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317961445 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.301093657 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775051182 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.328816156 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.331230548 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301697292 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.564496607 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.65222447 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636162463 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.315184155 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311308471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305616401 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.326330347 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.745821766 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645640724 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.314035571 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300014715 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756363932 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311531965 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311610283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.307879673 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512034438 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.004954393 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30359532 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.608303258 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.295065131 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.587477983 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.350464694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.349369254 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767297386 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31038901 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.365714415 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317195382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300220851 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304564451 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304875819 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297767464 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620839772 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712299512 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300709285 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.624239405 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.754716884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322679548 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807522552 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.206874714 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305850456 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362692274 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298000374 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.891588325 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761389557 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317304289 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293054377 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.608783842 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.308120457 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.560269478 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307337692 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29364703 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794288719 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305639311 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.348658988 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.294849252 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.293647805 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.093491717 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303705211 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566002208 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.332937586 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.298816473 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.29861663 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.300550196 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294779888 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308085561 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.306662302 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.80616475 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.31620362 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.286658428 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31636018 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299068267 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299445187 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.29831155 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299407044 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524752258 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.766816342 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.315806528 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301043243 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.295591327 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.303029373 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.443639545 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.300105166 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.583308686 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313341733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297510003 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.29651435 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.001910281 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329504009 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295683036 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.314113695 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.19521946 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.507412967 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317669827 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.313290124 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302175288 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317046191 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.45513738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313106148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.390430438 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301840406 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981358451 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.357227047 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320541557 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.655168372 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312385858 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.130421633 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322028537 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298892621 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585205938 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.55801423 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.602065777 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.300404517 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.316878569 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96885451 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.319662051 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443792586 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320927055 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285430064 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512444521 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.462499675 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301406581 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.910296328 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.304073529 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517074674 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.303342683 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599030175 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777930398 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318494852 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310584931 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99670823 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.993098478 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.062637144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.310265203 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.562481685 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.268040755 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791943402 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303857434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.305012916 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.900327285 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309710288 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302081903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.303347566 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.305479763 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361996017 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475715705 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.507908555 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302747176 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.736717314 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371419725 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308025473 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.311298525 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303444336 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.650491642 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.393313818 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.303391851 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.348660674 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.306996519 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307172066 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756869742 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.254453858 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.307868103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.45712606 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.917739244 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.320322383 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.306768169 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.916371015 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.535398363 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827442077 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.368330973 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.595689237 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.325146048 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341824491 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.007430879 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391980838 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794978286 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326380875 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.308879927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893458513 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.323396342 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.357623504 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.301177436 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307251944 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833352823 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321465849 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311485625 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.496290242 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323544152 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560787073 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.313731339 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.343915638 seconds)
  done (took 1103.189817935 seconds)
done (took 1311.95362412 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.306292379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309160765 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.289922461 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.308645472 seconds)
  done (took 26.436318323 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318315442 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.315527922 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.31510266 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31445841 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315919701 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31317314 seconds)
  done (took 9.113176108 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.346734032 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.301081947 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306922076 seconds)
  done (took 19.176417513 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.509435285 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.541964161 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.654257895 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.396470099 seconds)
  done (took 10.324467018 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.316801257 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315483295 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.316652801 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318571295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320006092 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320661414 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316783476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317579278 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.32091514 seconds)
  done (took 13.083812724 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.319878665 seconds)
done (took 80.674922704 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.291314179 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.132407555 seconds)
    (3/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.336381409 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.540143047 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.632325607 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.364249232 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.288243929 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.148556136 seconds)
    (9/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.915888766 seconds)
    (10/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.395575135 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.549128278 seconds)
    (12/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.01162135 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.368060256 seconds)
    (14/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.291099251 seconds)
    (15/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.671855333 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.33837846 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.327654619 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.334878926 seconds)
    (19/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.289150374 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.696799851 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.243266232 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.342773814 seconds)
    (23/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.829292302 seconds)
    (24/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.05643308 seconds)
    (25/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.329590002 seconds)
    (26/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.564893317 seconds)
    (27/286) benchmarking ("sort", Float64, true)...
    done (took 6.304501424 seconds)
    (28/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.389651699 seconds)
    (29/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.824603922 seconds)
    (30/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.318626116 seconds)
    (31/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.318842081 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.331407632 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.311182095 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.305622766 seconds)
    (35/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.846418205 seconds)
    (36/286) benchmarking ("sort", Float32, false)...
    done (took 5.292548687 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.422905858 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.339180345 seconds)
    (39/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.506742865 seconds)
    (40/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.516644048 seconds)
    (41/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.659449326 seconds)
    (42/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.376420078 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.351048755 seconds)
    (44/286) benchmarking ("sort", Int8, false)...
    done (took 4.320814668 seconds)
    (45/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.436061006 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.292288633 seconds)
    (47/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.310524058 seconds)
    (48/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.129945157 seconds)
    (49/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.50883782 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423581261 seconds)
    (51/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.488120563 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.5876762 seconds)
    (53/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.292666521 seconds)
    (54/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.292042138 seconds)
    (55/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.331754484 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.430245065 seconds)
    (57/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.371767678 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.338748916 seconds)
    (59/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.746094337 seconds)
    (60/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.522887251 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.389056927 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.370157926 seconds)
    (63/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.261542944 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.550816787 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.320707062 seconds)
    (66/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.320780127 seconds)
    (67/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.162431769 seconds)
    (68/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.46016397 seconds)
    (69/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.294203603 seconds)
    (70/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.804154285 seconds)
    (71/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.311498086 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.308413972 seconds)
    (73/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.407117038 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.29263378 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.082683968 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.429272834 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.929648499 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.333736058 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.902204824 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.33301517 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340975038 seconds)
    (82/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.522734361 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.984579652 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.499953278 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.303659667 seconds)
    (86/286) benchmarking ("sort", Float64, false)...
    done (took 5.593978709 seconds)
    (87/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.292955644 seconds)
    (88/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.31769082 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.390344726 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.294518526 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.294619079 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.314935613 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.322527356 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.7372515 seconds)
    (95/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.064955517 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.292815719 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.322313347 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.138133359 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.311750997 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.355742057 seconds)
    (101/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322663162 seconds)
    (102/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.020248792 seconds)
    (103/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.29238109 seconds)
    (104/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.438564166 seconds)
    (105/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.624098311 seconds)
    (106/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.41814393 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333831539 seconds)
    (108/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379442728 seconds)
    (109/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.136500937 seconds)
    (110/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.382506715 seconds)
    (111/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.422302102 seconds)
    (112/286) benchmarking ("sort", Int8, true)...
    done (took 6.316357209 seconds)
    (113/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356923119 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53081009 seconds)
    (115/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.381566229 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.134731434 seconds)
    (117/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.51129667 seconds)
    (118/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.469048453 seconds)
    (119/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.402133347 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.304266092 seconds)
    (121/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.337844805 seconds)
    (122/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.404326279 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.692401473 seconds)
    (124/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.331716305 seconds)
    (125/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.326755593 seconds)
    (126/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.427752505 seconds)
    (127/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344975905 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.831351134 seconds)
    (129/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.087283077 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.352790994 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.575224592 seconds)
    (132/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.976854941 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.423431927 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.039788737 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580883901 seconds)
    (136/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.3146184 seconds)
    (137/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.091634799 seconds)
    (138/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.664516755 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.307455627 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.444273341 seconds)
    (141/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.30010707 seconds)
    (142/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.621986797 seconds)
    (143/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.301897269 seconds)
    (144/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.316278152 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.943383974 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.314121893 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.333339227 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.049174028 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348105058 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.66414476 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.356408537 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.692285839 seconds)
    (153/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.56132215 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.011723847 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.047875241 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.894010966 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.345406642 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.901487772 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.705949361 seconds)
    (160/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314860753 seconds)
    (161/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.900207687 seconds)
    (162/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.686330206 seconds)
    (163/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.463195261 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301424275 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.325728125 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.303132575 seconds)
    (167/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.337778602 seconds)
    (168/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346225179 seconds)
    (169/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.651562333 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.037023674 seconds)
    (171/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.724971733 seconds)
    (172/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.320834211 seconds)
    (173/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.665454015 seconds)
    (174/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.657774451 seconds)
    (175/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.063777275 seconds)
    (176/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.114123143 seconds)
    (177/286) benchmarking ("sort", BigInt, false)...
    done (took 6.321771707 seconds)
    (178/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.603398954 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.219564015 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.372899063 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.370188606 seconds)
    (182/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.30322188 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.715546663 seconds)
    (184/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.475991065 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.364748447 seconds)
    (186/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.854689084 seconds)
    (187/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.300321406 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.218947664 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.161529932 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.325041321 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.173036737 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.47651081 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.387164672 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.303218658 seconds)
    (195/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.317417111 seconds)
    (196/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.487340566 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348493604 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.333961517 seconds)
    (199/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.507201577 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.073743901 seconds)
    (201/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.352028178 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.302514246 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.96189872 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.532973367 seconds)
    (205/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.408357277 seconds)
    (206/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.324725759 seconds)
    (207/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.426289746 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.517521997 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.423883688 seconds)
    (210/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.314450631 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.925410322 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.723765645 seconds)
    (213/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.906408314 seconds)
    (214/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.30898813 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.329224951 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.342552192 seconds)
    (217/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.406897655 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.306513569 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.36039109 seconds)
    (220/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.530307397 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.462029981 seconds)
    (222/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.900098081 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.306028006 seconds)
    (224/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.48095184 seconds)
    (225/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.085311591 seconds)
    (226/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.839939217 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.338279746 seconds)
    (228/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.671114262 seconds)
    (229/286) benchmarking ("sort", Float32, true)...
    done (took 6.338805775 seconds)
    (230/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428021531 seconds)
    (231/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.52859505 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.333285263 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.318655286 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.736156614 seconds)
    (235/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.910190153 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.671856741 seconds)
    (237/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.315122582 seconds)
    (238/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.689438004 seconds)
    (239/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.318055114 seconds)
    (240/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.321899157 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.631145295 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.333013298 seconds)
    (243/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.13890278 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321368742 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.397898581 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.370605087 seconds)
    (247/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334600212 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.352924801 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.85205726 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.027160002 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.768366706 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.64182841 seconds)
    (253/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.677765169 seconds)
    (254/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.322767109 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.712247312 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.255388731 seconds)
    (257/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.424915641 seconds)
    (258/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.409071449 seconds)
    (259/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.306931085 seconds)
    (260/286) benchmarking ("sort", BigInt, true)...
    done (took 6.32247536 seconds)
    (261/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.661437205 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.124451297 seconds)
    (263/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.445602271 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.334464411 seconds)
    (265/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.642732414 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42180182 seconds)
    (267/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.346872338 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.411650075 seconds)
    (269/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.354946983 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.311344053 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.439318442 seconds)
    (272/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.338994637 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.146924293 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.853690342 seconds)
    (275/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.509283917 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.36460896 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.216825155 seconds)
    (278/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.484670355 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.427846478 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.435853031 seconds)
    (281/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.726500483 seconds)
    (282/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.310200206 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.360885428 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.920854857 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.201515269 seconds)
    (286/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341566907 seconds)
  done (took 929.843426195 seconds)
done (took 931.066438813 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.363013739 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36043208 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.340205509 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.363708476 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454755161 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.369437723 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351805922 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.34347593 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388913679 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.390542648 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.341444998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.367389813 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343710877 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.343082041 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34371901 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357629455 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.339142729 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.338008181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360380038 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.352701088 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.3592226 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.342064423 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393607788 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.369700283 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.346241349 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346031244 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.345919077 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.363732684 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.455275215 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.347720503 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346906061 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356045353 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.340137207 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.335858466 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339502198 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.365580806 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.357744894 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.351872146 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.346553549 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.377680183 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.725027389 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352935609 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345971506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.344981749 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.346834264 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.348780144 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346181877 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.352528978 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361057159 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361108645 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.714266551 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369398905 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.349945382 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345741149 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.35668927 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.346459381 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349861034 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365850194 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.367026486 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364410167 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.331714158 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344093393 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.347316407 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.363969506 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354881557 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.752591167 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350193473 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.350115429 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.728231922 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.358070567 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.753063594 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.363522444 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.345803094 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.361199296 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.379520519 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.341477565 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.33403916 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.345662769 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353866175 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.346727903 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.356142412 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36362448 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.351916708 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.348470524 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363591804 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.375539778 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.356461352 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348185467 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.355919949 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.367482115 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.356372335 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358844091 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352814757 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343385475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35860755 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.35156516 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352319231 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.352044701 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352693621 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356787797 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.735531784 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38236426 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345550486 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.344662659 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.348940417 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.363203125 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.7365691 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.363422373 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.36965386 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395489418 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.350050596 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.334072272 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.348485064 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369488403 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35761455 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353348876 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345381402 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.336624337 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.718770513 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373763512 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353547336 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.349511031 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369390373 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.35280278 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347264342 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.348704978 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.345561247 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367999303 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.472628704 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36008176 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.384054414 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349780854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.354957694 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.374481339 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371089406 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.383734016 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353244373 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369653034 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36700682 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.349010355 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.362309697 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.360480234 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.352190819 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357486003 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345648875 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.37250646 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364527328 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366943224 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.373109465 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.474325804 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.35012914 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.337741816 seconds)
done (took 226.806670278 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409374657 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.338628815 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.428125543 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345710601 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.443530119 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.44544016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.34385997 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344714274 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345478979 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.749122649 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345070756 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344218571 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.344938603 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345624889 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428567668 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348271109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.344117097 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.686483671 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.347271079 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417079513 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.343675685 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34596306 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348572354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.725070256 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.342178199 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.344318951 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.416653212 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348311855 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690237599 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.341137681 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.343026897 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691509116 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437739088 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364915007 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359035724 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.3560668 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446942368 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365780589 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.4268293 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.428636685 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428961215 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.387947538 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.348415249 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.347361534 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350728141 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350094869 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.34715487 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37473665 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.343279499 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347623902 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.689727918 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358854572 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35723327 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348010758 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.34756963 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368773156 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348678571 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.35047126 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439075283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.3516611 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.411205872 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.728553178 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.8086569 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.351094564 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.347266174 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.350378815 seconds)
  done (took 149.446704894 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417452622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424229839 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.463236865 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365450787 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.398441214 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.464277758 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366684234 seconds)
  done (took 11.15358784 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356707338 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352093725 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399948871 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399910489 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351240369 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.497844111 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352255298 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363176588 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349175359 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404556616 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352816239 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352844461 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359483988 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.352496424 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399064767 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.362650946 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464961856 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.352337651 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351831516 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502193643 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351529285 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.358924601 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.402529235 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.363837879 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353204632 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357263279 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923685281 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352770529 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350974591 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.353853176 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35136014 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.390956747 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.353180615 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348991656 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35128567 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468735828 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.35335587 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350834031 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353988513 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.350305446 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353998178 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.352298281 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354147371 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35233681 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.354312687 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376521589 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.355748848 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.354563691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354934292 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354604203 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.404027054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354973896 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351331904 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352585651 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.409784198 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36248291 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.35498755 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.352816416 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.355212432 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353021452 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50445502 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403324525 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.355089817 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40187296 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354958645 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355195772 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.355236413 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354219055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409588168 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355579477 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402102729 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353842056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.509366475 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37830314 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35657666 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35732624 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.355619695 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354381185 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.355731851 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.360850806 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354538903 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356674551 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362608765 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35498772 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354366665 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459494689 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465135966 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353587017 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368996778 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.361522728 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.354569875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408823797 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3566217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355499287 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407737625 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472552824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41133959 seconds)
  done (took 155.183146786 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360734009 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365741254 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356996763 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.372136389 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357358775 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.356568285 seconds)
  done (took 9.428876266 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360059532 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358666136 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.357516985 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358343787 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356588608 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359608545 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358303529 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358850439 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361827383 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357563773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359141838 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359135961 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358713244 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.35941503 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359735258 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358868572 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358104836 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355849119 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358602376 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359129226 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.463931659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359515488 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358757585 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.360103637 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365034492 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357615791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365058153 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.360813617 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359320767 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.363754265 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375273895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360598864 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360622223 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.364991414 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363656625 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.360090826 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363743713 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360997434 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358053076 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360753488 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.361595789 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360121623 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.361407307 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36003433 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.362259484 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.365418101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365109328 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367850155 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361191083 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361234754 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362942638 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.362416654 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.363363716 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361859709 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362616803 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379064744 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.366549607 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360572092 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361919778 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.3624116 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364763748 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361009425 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362467757 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366094118 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.360033464 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363593304 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361941223 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365670856 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363977629 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363864157 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363795846 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.362827151 seconds)
  done (took 100.407831003 seconds)
done (took 426.869813732 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.651178833 seconds)
  done (took 7.915192244 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.534644641 seconds)
  done (took 7.80047581 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.171852209 seconds)
  done (took 21.443820682 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.405426206 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.449663919 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.349903238 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.357541238 seconds)
  done (took 26.827376919 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.516584101 seconds)
  done (took 7.781610542 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.354671563 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.348895761 seconds)
  done (took 13.969587149 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.9527439 seconds)
  done (took 8.216577522 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.980855284 seconds)
  done (took 8.25124773 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.381912526 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.367631654 seconds)
  done (took 14.286595472 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.334789841 seconds)
  done (took 7.600620458 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.358201321 seconds)
  done (took 8.627098781 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.372359628 seconds)
  done (took 7.640477251 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.397386741 seconds)
  done (took 7.664663931 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.083273429 seconds)
  done (took 9.349262151 seconds)
done (took 158.639272536 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.356648834 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.351770942 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.351284409 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.350808191 seconds)
  done (took 26.678287106 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399736075 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398853005 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399007777 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.408560931 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401432027 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401085334 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391160235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.392798328 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407979396 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402278622 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400065045 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401533438 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399199976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390931072 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400077965 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.400001547 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409361242 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400245515 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391985774 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403115226 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368473398 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.409911499 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402047202 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367185196 seconds)
  done (took 34.816081587 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.886603827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436550861 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.519260425 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.419210965 seconds)
  done (took 7.530172206 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418254762 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421392109 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431615098 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.471544461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.499154111 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430603441 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393349 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.38839538 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.376056395 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.41966403 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.497107794 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436309393 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506031751 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.369023881 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569468934 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367134273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.367943862 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.42046773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.472199571 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484730341 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.369339477 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42003744 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.423752523 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.438434588 seconds)
  done (took 35.661556327 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.368421485 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.385732613 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.366605743 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.367172588 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.377426531 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366390701 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368220799 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.370398797 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.367406302 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.371972539 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366990732 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.381133662 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.367133512 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368108018 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374019545 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371360183 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.373448204 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.367282879 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.368219609 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.374299651 seconds)
  done (took 28.692119167 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.362003277 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.213926556 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714262091 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619430335 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.359519039 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.363034652 seconds)
  done (took 27.902364161 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43304156 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578328866 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370472312 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.711547831 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.799858992 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384645832 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.369856355 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.601306869 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.903605018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.890550029 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.423657238 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.43266976 seconds)
  done (took 20.170741634 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.366097339 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.356859359 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.370215993 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.372811115 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420602206 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385724821 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.375950067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.364632708 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421118674 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.434453931 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.38742008 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.422118833 seconds)
  done (took 37.950926411 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452435005 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413696752 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.278863348 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44102151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100968688 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571502564 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42784413 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794616682 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370533075 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641256347 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375859803 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454601756 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621127132 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372439787 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366381944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.323649211 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607372434 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840253301 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368848486 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.289043405 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392845575 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372813216 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.377859824 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396199214 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578154858 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.509639849 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.628134176 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144465747 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6533165 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379514086 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377615457 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368091199 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642409366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023230647 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472838233 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3789673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383073994 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.91456307 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.366174848 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.299738361 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.109472364 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368866958 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379910899 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367887064 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304795461 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371744077 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800728149 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.375930331 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079386314 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368813546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379548945 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463055902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373467427 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.938516044 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396245889 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373731755 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.366363514 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461987864 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954941919 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693236209 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377913779 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.304754209 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368422588 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.215463781 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994196428 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487823653 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.372235956 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373743368 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303382558 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.209793247 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385997355 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519907919 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.385910604 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019882359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066633576 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389699509 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302247752 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887125282 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363834446 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.306989771 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598178061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150610047 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306961153 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.317146025 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30517573 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045368356 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380415607 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.742735493 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393310859 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.81717067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.384784336 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387294508 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395020152 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593887874 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.250620289 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371172289 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.145555708 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515259537 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386754704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.800238666 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308347141 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.36799239 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628160041 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583262768 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382592402 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.323502455 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586484779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372219542 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405582713 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370343047 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382484938 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.936577524 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400499097 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.696950286 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391079905 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.150755197 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078608472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378757573 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.47296182 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383216547 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613317096 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.102705892 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.26874006 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440811573 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378000068 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3730599 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.312161139 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418141994 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.278041318 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.371782269 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383200651 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384983339 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.373789434 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3231966 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.377791332 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379434152 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.153100434 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599078029 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377126065 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64967885 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309108876 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522260474 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37892859 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.591475959 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561278977 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.388993238 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634083225 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377932171 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385942008 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38630051 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394867537 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478679274 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396517616 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383305387 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63054813 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.378367215 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.377379252 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.365619206 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147216243 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377820504 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.383945315 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376145736 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947838119 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362954955 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371384122 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265343157 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.389852402 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442497734 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380538077 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387289768 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.132132215 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392003694 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.376056012 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.374212884 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600045492 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386082279 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.245102666 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458411426 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.565889995 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956800055 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398273406 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.309555821 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.090022797 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.070127836 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379065224 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.559226813 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377080653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390684139 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388275152 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392259681 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942892567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387294046 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.277519281 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.378385078 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389165053 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382201029 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377567572 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.102427628 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.743228784 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384041226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389523455 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522138132 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393222115 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312866599 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896264583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383780764 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378802831 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.156931271 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413162967 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.249167688 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861029366 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632009792 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391632322 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385845878 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.351017402 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.409683042 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.379158282 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.230021083 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401398762 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.403149596 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403874536 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.391261754 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.337004861 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.743858871 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939335715 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141528791 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925981401 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296808467 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.389693572 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261549539 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.814573371 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31614016 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.03645648 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560951854 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.82785948 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326624789 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571336953 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.568124452 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133984333 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391820057 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607373931 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286635792 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.225904934 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411112813 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592949927 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41431027 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388163782 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310102631 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.654309167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615258708 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.201143102 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453776138 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811078752 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254794952 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175906841 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.404123945 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.705843641 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565168364 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.927821988 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.769404316 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381189345 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386714029 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854810994 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378628531 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908344915 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992215924 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391444472 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.592114229 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320280454 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.393978231 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.394337402 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.378850227 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.627537812 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.386358083 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.640490189 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392358107 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316590525 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381854639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924601195 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268788057 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390757139 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384116077 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10023628 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386770021 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666756555 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.391598889 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.091719728 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392009217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309024512 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309012845 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.066036025 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385105896 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350234327 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853665814 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.37400144 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392945326 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377484599 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221721617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630957354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.387870251 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954751895 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615932525 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387077504 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398339473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.475458428 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256600135 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.375666048 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.27517543 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610365578 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377038719 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599384106 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.310156664 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.268629523 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.408810406 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604021884 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275097469 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376288597 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638292916 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.095808315 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.377611652 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079044898 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417297124 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375853643 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388739905 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378068646 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398344645 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464966524 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386428274 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.386865729 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386560327 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54302999 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392147477 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379833047 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391737105 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471165696 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.736939215 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.099892839 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15092148 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958827332 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123328977 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.966394957 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405703805 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37816029 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378704123 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311971822 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522610912 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903814622 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651152243 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508202803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.37580859 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40230348 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255897186 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409854761 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590681006 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654852265 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348104921 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38911699 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162839481 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.260518488 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38984506 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590245319 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86145061 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930759286 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488962872 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378755235 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.809622217 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655682865 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469285717 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379771755 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971310548 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.391012563 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.687033133 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.401084458 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387979875 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526299914 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389268134 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042052067 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.406982267 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.538617335 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.15285966 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.359088836 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634570351 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.830187338 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391493968 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963233339 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092576466 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644866293 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45153764 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389643053 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.483038939 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531123231 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.390779215 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.264151707 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381606605 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225077456 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.091386329 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388886045 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954210761 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657948128 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.377193735 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.389156537 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405064241 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390974542 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60340488 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062626964 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607069939 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394900996 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391785362 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.371350741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958500829 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409446471 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316782745 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379622157 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626420704 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627233553 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405944713 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.835154048 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.093035663 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918958963 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.355798984 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404645614 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387755434 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069657669 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962696719 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.14703689 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861801815 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041228931 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397525408 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657245152 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.3884982 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390491213 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660131513 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38729446 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383684843 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395746938 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.968040198 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14774543 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403609071 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.388882221 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.32152193 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609384256 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416229892 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336481152 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377366786 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.556484994 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385256491 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514615007 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3876114 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.39204014 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397637825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.140673995 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661143062 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.382751187 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.381563822 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.322965362 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386204506 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4929156 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644809772 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391555254 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059665734 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.735043176 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640503514 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386623312 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.363670556 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.388150189 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386619326 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104748612 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390378299 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387993774 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938578078 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.391770399 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.396914521 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388628802 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.600940165 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598154984 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390247676 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399724992 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395735825 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401996101 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.290362607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15451994 seconds)
  done (took 1657.018846648 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433715478 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.400391336 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.42242806 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.412966503 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.403929248 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480106888 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.455350176 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.498445267 seconds)
  done (took 52.79839205 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.400482237 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.54490761 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.409459399 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.398104834 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.395340691 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.399910533 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.830994096 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.40403936 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.396202198 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.397762139 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.394693391 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.390032793 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.027710595 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.397581209 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.3903558 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.370192765 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.394831281 seconds)
  done (took 66.241906256 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.39296524 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.88113421 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.467029667 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.381491277 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.344476671 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.409665864 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.034772298 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.449775768 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.386930284 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.659493091 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.0535917 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.431193885 seconds)
  done (took 85.186319406 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.405436648 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.406218516 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.406406644 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.407232573 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406438458 seconds)
  done (took 8.325340788 seconds)
done (took 2090.241928931 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.395250276 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061855545 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.008638154 seconds)
  done (took 5.363881902 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.535725883 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.583292824 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.704398315 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.709951938 seconds)
  done (took 7.826177418 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.668249592 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.758742908 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.580410274 seconds)
  done (took 6.299595367 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.659197157 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.400974781 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.407539174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.387302919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.388585185 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.389168526 seconds)
  done (took 20.459176316 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.394048108 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.395664609 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.392982774 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396780785 seconds)
  done (took 6.872747571 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.369895148 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.096608479 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.37468057 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.385472138 seconds)
  done (took 18.519875912 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14032856 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.153606218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137961118 seconds)
  done (took 7.726447899 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.421035088 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.40841155 seconds)
  done (took 4.124161827 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.688867447 seconds)
  done (took 2.983871726 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.407764231 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.445523768 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.399977714 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.314531997 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.799074015 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.588165409 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.952929287 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.5575216 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.288198305 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.513095048 seconds)
  done (took 30.562789188 seconds)
done (took 127.895447981 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.11869719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387802532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.600263036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.090771597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.608486666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.599149992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.801381072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.054355372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.635050412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.588401447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.080184103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.612745653 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.529313191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.396593527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.529931359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398488222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.619405687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.171436914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.801025558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.961843167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.788161211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.727726019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.911416363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.748352921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.611317421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.544428806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.321072212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.390103489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.983729257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.38377618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.549843097 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.145040568 seconds)
  done (took 189.985982685 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392137066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.385871962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.402589307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.383244699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.398695893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400572759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.387480817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.400152542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.38869719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395130664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.387087738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.3937823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.386668856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.401013043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.403150622 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.400944618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.395107645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.393405886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.388287249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386610854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.386301469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.386037665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.400191881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.407076343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.393568122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.385788456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.385995887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.386982088 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400065653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.402838564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.394481927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.394981701 seconds)
  done (took 205.89244639 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408173104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.402430144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.392885266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.394007241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.395190216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.394810922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.403599821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407264438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.395592247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395863651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.387553697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403992297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.386867041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.385136724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406736927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388570713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.405433789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.40325571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394475778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.410808261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403216947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.413165818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.386745211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.395715373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407138142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.388418823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.403102924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.389009251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.409953217 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.388930152 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.415180835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403776921 seconds)
  done (took 206.065426355 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.592991924 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404454085 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403804156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.337487246 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.406589561 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.404255377 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398072348 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602501439 seconds)
  done (took 14.851158002 seconds)
done (took 618.0913197 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.711170763 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.417224485 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.606347457 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.425375852 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.202698212 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.440908289 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426594672 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.589774786 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.320061923 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.596402552 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648591437 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.43646565 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762389341 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.4146715 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.681461307 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521272797 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.326669648 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.447275194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.735860268 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.962417254 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.682442185 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.899905096 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.609372746 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.323982319 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.784346647 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.888398245 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.128037799 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.312169309 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.439103148 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.745102327 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.027006861 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.396507474 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.483380115 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.479837058 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.537051226 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.518184121 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.360505958 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478768035 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.623893255 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.663554431 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.980696898 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.141378084 seconds)
  done (took 94.477993926 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.388473223 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.389510796 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.38826716 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.388619431 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.391221733 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.388920219 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.388988653 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.389150668 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.390094275 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.389396001 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.389598313 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.390841519 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.388971581 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.391462591 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.389578099 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.388637342 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.38999544 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.392400837 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.389273803 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.389503444 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.390531276 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.391234886 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.391087225 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.390496081 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.390698159 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.391207482 seconds)
  done (took 37.442737382 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.407946506 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.655207699 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.809118537 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.414427404 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.408407478 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412596351 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.484370892 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.409081831 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.41166833 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412913147 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.561661837 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408536984 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440543635 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.842594139 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.404594662 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409950303 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.4098945 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409929707 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.663763325 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411661096 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.501707148 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.408639211 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.485127929 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.417004845 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.428566604 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410160709 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414116043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.975587949 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.419737547 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.561174722 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.179341093 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.484045269 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.953737145 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.844174265 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.185198027 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.413327939 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.410543079 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.563714522 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.407390636 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411436497 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486424865 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411132004 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.829824835 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.081570425 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.428899649 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413382597 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.997723861 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.581820442 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.639726652 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414484754 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858183318 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.409913241 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41546093 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.412097626 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.64786946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.417410973 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.413316523 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.017531328 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.432817747 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.489045852 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.415885153 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411634524 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.672774589 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405385257 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.659153137 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40575136 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421117479 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431153641 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.839893494 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.415608789 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.104983904 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.424334482 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.415411002 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.566800646 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.661088058 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022758746 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434632297 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.680016855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96279266 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.498933017 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.419478189 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.971549181 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.507775886 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41964198 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.420192834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418020273 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415409826 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.471641615 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.487327315 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.052270415 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114434577 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.042498504 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.509838172 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.42759541 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416980296 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.021115933 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43472774 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.416599916 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.830275725 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.108829726 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.432979934 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423519492 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.107491745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.435144366 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.494266714 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.421656817 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.845798831 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417434078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.474606025 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416525771 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423013366 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.436187827 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.492648977 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419235161 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418078249 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.079560312 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.588924453 seconds)
  done (took 185.854953069 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.416930591 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.401366989 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.419232079 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.402338392 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.411358143 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419460257 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.411850768 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.410906683 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415605089 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410181709 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.410562301 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412390485 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.411278842 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.413990217 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433590747 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.419109397 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.024291429 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.412338392 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.420545336 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.427804844 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.202070774 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.412526072 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.410529749 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.41261028 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.412168775 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.412964011 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.42116993 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.408351787 seconds)
  done (took 154.311593083 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.419340983 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.970331449 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.433918657 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.545389175 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.437277851 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417917175 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.543722858 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.475228765 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436882283 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.418639531 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.418521631 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.713273799 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.421253421 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.921657115 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.604155227 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.560315474 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920720832 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.436055582 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.416039075 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.417233813 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.54681623 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.419762226 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.714200486 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.971311435 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43592699 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.969916948 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405376267 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.421452692 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417800934 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.971700419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.43598096 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.716690102 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.495259174 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478684525 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.988809556 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.937933564 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.938569825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.563785539 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.420489774 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.418970154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.420121946 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.405875015 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.972399018 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.43700349 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422456823 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.960750464 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.439710982 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.424071388 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426027556 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.419330972 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.477643385 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495045462 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.734703316 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.97858023 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.509693543 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.434645753 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.54820136 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.786234787 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.424667397 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.924262017 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.40665148 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.972385599 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.429652444 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.405786139 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.422899828 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428045836 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.56715262 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.550431358 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.926068021 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.439379317 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.925792114 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.58154257 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.423025387 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.421619276 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.425218918 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.974162195 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.93422942 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.582600065 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.552707471 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.608961145 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.408586556 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.422518342 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.407478375 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.493911101 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.420007295 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.973991381 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.932811994 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440233628 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.421774704 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422830625 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.423687513 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.589674586 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.991073087 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.50481666 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.91465705 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.735438954 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.711760052 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.419557689 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.47862258 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.439142808 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.720508664 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.418797012 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.475926338 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.849569954 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.722380888 seconds)
  done (took 168.274723877 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.666404911 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.611493349 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.512904516 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.567118209 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.012354189 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.968247945 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.653050135 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.557256813 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.527610201 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.677886766 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.541359374 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.506262199 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.634932959 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.512144007 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.13393952 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.509003167 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.533455292 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.569700276 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.579375688 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.429145547 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.088688665 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.69731506 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.619517486 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.297241192 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.509872998 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.163953415 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.980653387 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.955271072 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.599115318 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.755211451 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.955315787 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.53223075 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.362635119 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.103211174 seconds)
  done (took 67.6462439 seconds)
done (took 709.310574471 seconds)
SAVING RESULT...
DONE!
