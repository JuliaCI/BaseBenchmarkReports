cset: moving following pidspec: 20786
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.971859153 seconds)
loading group "string"... done (took 0.570324021 seconds)
loading group "linalg"... done (took 9.218935641 seconds)
loading group "parallel"... done (took 0.175633716 seconds)
loading group "find"... done (took 1.37277033 seconds)
loading group "tuple"... done (took 2.244339677 seconds)
loading group "dates"... done (took 1.407525436 seconds)
loading group "micro"... done (took 0.236014105 seconds)
loading group "io"... done (took 0.649080066 seconds)
loading group "scalar"... done (took 43.910847536 seconds)
loading group "sparse"... done (took 13.870368484 seconds)
loading group "broadcast"... done (took 1.123305828 seconds)
loading group "union"... done (took 15.602817612 seconds)
loading group "simd"... done (took 5.226367316 seconds)
loading group "random"... done (took 10.783373637 seconds)
loading group "problem"... done (took 2.327709682 seconds)
loading group "array"... done (took 27.249446832 seconds)
loading group "misc"... done (took 1.263209866 seconds)
loading group "sort"... done (took 3.983694124 seconds)
loading group "collection"... done (took 24.177918925 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.735668337 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.153812393 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173273827 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.220965078 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.234967862 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159287296 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.183767614 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.625424718 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.122909162 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.260112067 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.168072317 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.684188414 seconds)
done (took 6.465729727 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260837947 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087884561 seconds)
    (2/2) benchmarking "String"...
    done (took 0.153306302 seconds)
  done (took 0.905535669 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.089551817 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.217481485 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.119566959 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.136422726 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137465854 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.119680285 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.13575402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.136522791 seconds)
  done (took 1.670251849 seconds)
done (took 3.596329837 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.95870166 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.902688136 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.5783359 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.150345184 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.190800024 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.167058596 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.386326688 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.178996814 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128543619 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.135925267 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.209064663 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.406038141 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.586978901 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.118663833 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.118262962 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.144443338 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099323469 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.744674782 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.103636957 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141356289 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.63591315 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.134552897 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.134940617 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141127178 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.223571314 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137438291 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.203950865 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.133889367 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.693380359 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117474388 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208290102 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.116377103 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182126635 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.298430508 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097780993 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.124009114 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.692139612 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.213324501 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.135926644 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.111130128 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692752443 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.100938815 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.228430788 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.135626475 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.13446231 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.210654853 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122457422 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.113408296 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.121529757 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106378556 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182169307 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484317574 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.122539701 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.163656539 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110651287 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.723613743 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.115395344 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.171879782 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142573974 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.122770517 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.11581495 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116608959 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.191017589 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120242385 seconds)
  done (took 21.75081695 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14388982 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16870389 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10813293 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162427363 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.17076909 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095099752 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.117149646 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093205171 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.151583667 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.218951721 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.165403846 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171531712 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090088082 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110343987 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.120916756 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.275675703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.144179096 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.128130356 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113693036 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110490351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.16303705 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114500368 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.130039761 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.131169518 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.190534106 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220198875 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.126013715 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1385984 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.11147171 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.124005599 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.159184921 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.187347193 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091857975 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.109436461 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.215718509 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121216404 seconds)
  done (took 5.879255365 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242530233 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117698201 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.263316011 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.230743627 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.182610445 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.213226771 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141611855 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314400271 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.244386327 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.202639257 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144996623 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11481501 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109020165 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099839427 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093245709 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.124563861 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161049224 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214780913 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153598494 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125236377 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096545516 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.395883442 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118478813 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097242123 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122820746 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085415936 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.235064999 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104212124 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.588178903 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117538533 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.132708609 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149354148 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207349898 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154101567 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152102692 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12358013 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099470995 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.283416604 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115654727 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.193279022 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.111417352 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126781636 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152070905 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.155497692 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.118055018 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.121331257 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.290384921 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.103574304 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146025487 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.318507269 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.223783884 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.116184976 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.11481344 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.417654564 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117481566 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128518539 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.116052545 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.360670924 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.164688267 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.116774092 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098604174 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.111438398 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105997538 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.115659155 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093465939 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132792043 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.422167663 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096210455 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.201906349 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.052754907 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117179253 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129331755 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100764108 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121619406 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120459755 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.114610236 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092829735 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.114606431 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094145884 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.120362939 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117118106 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118222083 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092929375 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.180118526 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.145274026 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119455337 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140865442 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102884029 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.113666263 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142223027 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097397142 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10059867 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173287216 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126261599 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.133550297 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103541677 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.157986112 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.114457027 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098456089 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.235508232 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098811969 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.143087368 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.116319751 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128254665 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.144384303 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111932558 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101674066 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.108789025 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097423027 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163353255 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.113946999 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095248811 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.117736936 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115556116 seconds)
  done (took 27.250441611 seconds)
done (took 55.542454741 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.459767955 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.14140567 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.14148963 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.141365784 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.1411472 seconds)
  done (took 1.771333326 seconds)
done (took 2.485472547 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.427135009 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.254789283 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121818416 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.244058907 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107926064 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.254557097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.213839149 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12309321 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.274202911 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100527611 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.239237077 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102337712 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.124175001 seconds)
  done (took 3.335698078 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.111623548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140187646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096180791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109510866 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107450341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109336863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125583892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132242915 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126342153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101583057 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109185451 seconds)
  done (took 1.979478579 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108136522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115375094 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.112717744 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106366398 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106038375 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106702128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123538819 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119266358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.124116372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102922619 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106767197 seconds)
  done (took 1.943211417 seconds)
done (took 7.961407609 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245510157 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.171741272 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121293465 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.19617511 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.406167432 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.229501511 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.656361191 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138433343 seconds)
  done (took 13.11670496 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.152565367 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115081788 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097524046 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.113189761 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095664179 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.114555531 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098921979 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111403309 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096293447 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115315386 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0990455 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094816275 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114355495 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098331851 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.114321005 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096025445 seconds)
  done (took 2.509131134 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138716985 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.136617169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.122938324 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112212732 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.119454598 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101008801 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.124347785 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10420581 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.117869837 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.117310976 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113113466 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.127731218 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110308469 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.11724961 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105414829 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.129880573 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100039583 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.12263013 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106079901 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.123903779 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.129107032 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10495789 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.126950235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111794536 seconds)
  done (took 3.659621725 seconds)
done (took 19.994695205 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.205600592 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102894955 seconds)
  done (took 1.026505647 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.1201184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.137548093 seconds)
  done (took 0.981846604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.13014503 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.111718083 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.160897788 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116916392 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.113956088 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095082508 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.154138228 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113220447 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096697078 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.113236038 seconds)
  done (took 1.930214416 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.101718391 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101783652 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124132014 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138031087 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110625676 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.115928475 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101714864 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118094386 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103761092 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.111511951 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106107337 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.138910537 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.12098825 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125253727 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.120650154 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.120473957 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109791609 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.11907617 seconds)
  done (took 2.811779946 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095766928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098486836 seconds)
  done (took 0.918210734 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.100756118 seconds)
    (2/7) benchmarking "second"...
    done (took 0.110482586 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099691926 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114959825 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094156814 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.110151605 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094780715 seconds)
  done (took 1.450497143 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.605125822 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275886296 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.404732734 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.139801447 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.179590125 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.439240091 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.181131979 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.136330216 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.13586186 seconds)
  done (took 3.271166139 seconds)
done (took 13.113253948 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.108647084 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.15857977 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.619475085 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132782782 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092701249 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.175280724 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.331079266 seconds)
done (took 2.344549845 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403008448 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140354973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.099597416 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093166833 seconds)
  done (took 1.46039052 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.095174238 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104135183 seconds)
  done (took 0.931074355 seconds)
done (took 3.122771471 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093302542 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.147064792 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092216999 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.232955794 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090214527 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092161382 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109379641 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090115771 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.107869777 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092585697 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091971052 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10945716 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.091779894 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.108935327 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092714512 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088917141 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107462621 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092486985 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107273514 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09047359 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089268217 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11036214 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089496311 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.10728532 seconds)
  done (took 3.297413145 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.120603291 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112331844 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101235397 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.118251941 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099290181 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.119027978 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100700486 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.111288055 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100951375 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.113471658 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098722417 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.115256898 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0961072 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.116178215 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096106942 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116100214 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.118644647 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094753784 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095828729 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.11727165 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.117151178 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094659367 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.115333279 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100654505 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116552119 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098333956 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.11343121 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094829955 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118439583 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099581838 seconds)
  done (took 3.962079234 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.104693502 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090126832 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.109392813 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104853611 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.107917074 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094506861 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108765974 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091918908 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092269594 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.10786022 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.092754065 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.10808705 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090881654 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110342132 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092901349 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099008023 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.136042524 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090648796 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.108727046 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091815033 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115454147 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090902993 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.11129141 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090999936 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090059834 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.107823682 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091252343 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107608622 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092134772 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090756785 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.115170369 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098755178 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.107447424 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108651491 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.1169631 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089979253 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.120541887 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090846004 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092308165 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.107963457 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090270742 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109309115 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090986933 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.123212636 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094419262 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092054406 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.108853958 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092719632 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109372515 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09594067 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107462915 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091288968 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093545932 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111276572 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098387856 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.107239554 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091501315 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.108072077 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092444429 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090002977 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.107998743 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089896657 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.11726513 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091607767 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.142723107 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105532574 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.108068951 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093821674 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.112834808 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.103053101 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111598076 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116493834 seconds)
  done (took 8.107326806 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098124122 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121778912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094321734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093170911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107635713 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091435709 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118194577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091500419 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112646373 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112523772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109302778 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094180219 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111454901 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096312208 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109497685 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094286288 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12180053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090615239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091865433 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114056099 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092464574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118028108 seconds)
  done (took 3.027568044 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.285126662 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121078622 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.175752517 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114087447 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.138593361 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.132336104 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101101295 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120986057 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102018947 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125013436 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107135768 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11849351 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.138422905 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106465575 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124560035 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108030085 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118908578 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12554123 seconds)
  done (took 3.104861849 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.111813064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.112577269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123366142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113558496 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095334425 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.116435931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104091056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.131564181 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097807223 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.112855377 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108898654 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115282797 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098179065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113238215 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097996923 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112882047 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098534555 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113347432 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108837186 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121882274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103542681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126001813 seconds)
  done (took 3.180733026 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11590697 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115069229 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122695713 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120100968 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090397928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.114408588 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105424903 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.112899738 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10549008 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.114996739 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094829033 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110973941 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105715325 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113432623 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103749055 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112768826 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098558551 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112337354 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097006339 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109382649 seconds)
  done (took 2.92137658 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147111497 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132971276 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115094702 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147849461 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132175125 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115810493 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147450171 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115024846 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133103358 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134642065 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132890936 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132499242 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130456715 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.141656716 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115417401 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147799333 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.147012524 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129114922 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133695144 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115482753 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152552891 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132788301 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129422575 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132600475 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114509347 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133030575 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114610594 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141575474 seconds)
  done (took 4.444166545 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094714281 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093783733 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.109653285 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.091553447 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.109345611 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091646786 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09093256 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109596958 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093255059 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108885021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093724486 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092947119 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111528604 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093259157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112330156 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095113494 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093874936 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109449027 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091108294 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109138493 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093890494 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111836388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094862969 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091707869 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109436465 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094222422 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108929382 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091680807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094093074 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109171156 seconds)
  done (took 3.74402923 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106883581 seconds)
    (2/2) benchmarking "in"...
    done (took 0.121137821 seconds)
  done (took 0.975816148 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093547528 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13335531 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091329565 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097729295 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.121004502 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09544749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.126116607 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120633717 seconds)
  done (took 1.627116032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.125088594 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1363246 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.102241938 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.129468879 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.117262809 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.135607148 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202671667 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102344997 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.121988957 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097084891 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.135919116 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096282028 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125391664 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103740391 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.125034949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115946979 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111163606 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107472429 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121779092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098196651 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10150422 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137691717 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12940536 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10655477 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.116877639 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111983851 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.135581436 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110401093 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121648698 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11492008 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.122524009 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088595148 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.119054735 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101860638 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111268928 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11642036 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139706224 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104118814 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.125395341 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10311484 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126247394 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091188555 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.129992974 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104654082 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.13017732 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101817166 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119629779 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.090512479 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096778055 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.119094477 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.090033024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.118997761 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089317966 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127629735 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109811088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143837234 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097904469 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.12062033 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102217006 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.118567539 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105540054 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.120449198 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111707286 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118365059 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109492558 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.126724663 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108079078 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109836037 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089176488 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11272934 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109640328 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144854111 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11438323 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.121896632 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102452409 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11193879 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104186003 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121206991 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108740201 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.131184058 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100600653 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124331262 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109532047 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119465857 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102532311 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.122829009 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097694518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117747693 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097922517 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147105821 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098566268 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.111982404 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097370508 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.131522306 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102463158 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.117853606 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097995472 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.126600124 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089611833 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101480844 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121096193 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104975425 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.135381158 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120911488 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10398766 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.126660258 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109472274 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.12129105 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101902127 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091829158 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120997002 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098657425 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.12605407 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089162378 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.12132611 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104406166 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.121516892 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114734471 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11631414 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101214909 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128950728 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114301096 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.117342757 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09238619 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.12087649 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101453979 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125043801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114889713 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11699155 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091450491 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090766348 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.128003708 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10028922 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.125340763 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102573321 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122615767 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089410955 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113279739 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102688441 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.133590167 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10068965 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.124305543 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110884236 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.124429532 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099307314 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.129322857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099215832 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.115846988 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111007539 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.122367055 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.090771216 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12535677 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102498207 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.116728707 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102917987 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126019534 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103811552 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.121487104 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099064953 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121014559 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103522478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.114462713 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10460986 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099026042 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.134789745 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.120848153 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092333979 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093141574 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.1241733 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097796399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118661751 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097443965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.121233643 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10273271 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.122006109 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099854717 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.119095154 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117894754 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129999749 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103620214 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.124882554 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.1115114 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.119127927 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106513034 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118809094 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104100666 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120791428 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11094646 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.123191757 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103695307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102130841 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.111781279 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105649376 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.128403094 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097114821 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113146307 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096854757 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.119840835 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114116926 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120138602 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102852438 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116441266 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107640004 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125645034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102569456 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118894443 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097454058 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101927704 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.127543402 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103852709 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121721512 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113201994 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.123490722 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09186489 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12586935 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098097216 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.126658704 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091408906 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.116530451 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097621295 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.122548908 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101955485 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.118500885 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090348622 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109918217 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129932227 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104533545 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.116899421 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101648137 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.136186233 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100192545 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126785765 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102384301 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.12778917 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144351422 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098015034 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.119920124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117061258 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120257306 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090462013 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107008896 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.11867267 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.119450084 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099823559 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.122826229 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106156271 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.125524953 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090115892 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.12101822 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099112095 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097003244 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112314691 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112607854 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.125222772 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103945386 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.136221822 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121874359 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102713809 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105521436 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119623321 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103034269 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123182469 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103669576 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122178973 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09980797 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.116829257 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105497071 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.115495173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094922862 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.120643489 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102880476 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.122876539 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106760807 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119039763 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113206659 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.121640832 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104065279 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.162569395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098715247 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.116975945 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104564942 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.124936129 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102199845 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.121291845 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.091974096 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128119385 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101335773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130477716 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102513886 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111038002 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103740894 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.120206946 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104220022 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103516204 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.122208993 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099893301 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119964404 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102704926 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137029249 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098419646 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.13291765 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10629648 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125771697 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102946738 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.124798434 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101271589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.116694067 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104184684 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122227657 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104049713 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.11984972 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10662316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.122929606 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102104739 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119349037 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103867192 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.123405352 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10481912 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109027433 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098937096 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097680332 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120610899 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110146331 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.122319953 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099853047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.118188048 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103979207 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118825319 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094078434 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.126858971 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107295906 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121225554 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117562843 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11596167 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103800602 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.138897258 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090293238 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117642504 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095914485 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097907833 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.130964012 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102475436 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.130755143 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103581066 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.118394509 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093853849 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123110637 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099874252 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110601861 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095957137 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126526135 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100346289 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099057995 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.122510774 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106547262 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124386125 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110789969 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120746704 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.1042655 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122413875 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09389791 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.11767164 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098447123 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.123215868 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104249502 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.116950142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094433952 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100768506 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.124926451 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103691251 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.12128329 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100609044 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.129827036 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101407246 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.122846135 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10846074 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.110595368 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103830661 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120432642 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10161571 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.116676553 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106162961 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124277676 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105259526 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.130138301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102543348 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126061483 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102600713 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094137053 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121097095 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101357302 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122051104 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097766076 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.12363568 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112486324 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114383291 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106113483 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.124773347 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099970078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.126103328 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104425861 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.125683003 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108907914 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122902183 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104907896 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.128472819 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103346693 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124263799 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105299155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.12038467 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111415393 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097582189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.133984723 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.123899292 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104741478 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.100876625 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.119392886 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101361532 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120198822 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100791853 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132736798 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104119051 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.116934037 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098286262 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115239822 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105727379 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127607621 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111848191 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.123981543 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105243445 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111455931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095320529 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122642119 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099486782 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101661298 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.126920809 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109929212 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.123662271 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099730206 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119519803 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111308265 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.129504542 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107903018 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.119069297 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108400717 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123646481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103892941 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.120105747 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102887127 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123654685 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108067316 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.121935765 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098764799 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.136979768 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112555002 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123598387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101863592 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.126376937 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102921108 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.111923348 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105077695 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.123239232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109633366 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.123693951 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102743456 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13923583 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096918415 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.121675927 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109953899 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120445548 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114791784 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111936801 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105696509 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123507354 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10508452 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092105028 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.11833897 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098676965 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.12400059 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098539147 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.11261755 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121737797 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.131495718 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106394728 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119880882 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101273537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.111596624 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093457958 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.117398243 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105841117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101559287 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.137985075 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.1162345 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099397915 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093229375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122109327 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105847669 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.126423284 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094596388 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.112414894 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099589172 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.126292164 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116114319 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120810101 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102739268 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.124883839 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105585364 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095685756 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.129676018 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094550482 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.126198854 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.139781561 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105411528 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126829008 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111459922 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.132752203 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105964939 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092667187 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124643711 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105758137 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.126630073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105116536 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.126289736 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.148340175 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107150227 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.117014141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101979571 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106213589 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.120133551 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117087915 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125536725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103944171 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.127114544 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101685294 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126642809 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113922669 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.128102133 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106599267 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.127113335 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100446266 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.123843151 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099768262 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.121750963 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106151944 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124495655 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1038201 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125939057 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099278319 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139879786 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116244475 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.125350545 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094411665 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.118246111 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100327976 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093201473 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.125145041 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.096155834 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.119424824 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100518326 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120550152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109244549 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.126302166 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106392393 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124383449 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102902901 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090705348 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.128964785 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103838676 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.127612535 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093431397 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123306189 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104163675 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.132429867 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110510544 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120556565 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104740395 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.122809465 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10843185 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113351908 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107681747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121392106 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102679752 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.11821855 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103481024 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104445434 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.127120112 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104526825 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127436679 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104217683 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.130287917 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105519906 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.115739836 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095250237 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.128510311 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096255844 seconds)
  done (took 68.054215412 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.185356876 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101271063 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092941821 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113082452 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149657564 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095980963 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112181819 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09583467 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094628014 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134452308 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111904036 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093825579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143319964 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.153746949 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127995264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135385418 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092886221 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115755056 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092309268 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114959281 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142096176 seconds)
  done (took 3.299756372 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.125157812 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.13645023 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135622809 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122639701 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12713349 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116053987 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.135881423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136015436 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.140271058 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110411975 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141464919 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136517961 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110506557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12867241 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110099575 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13301029 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.141651702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108747148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138274054 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135374301 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114308907 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.136143055 seconds)
  done (took 3.615222757 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108387566 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102337485 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.130239766 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.095642147 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.122455429 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09618735 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128712227 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099250466 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.129564351 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104286545 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.119710795 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10429503 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109146647 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117576569 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101224521 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.118834173 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110797958 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.122103036 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105622463 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115176638 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.146778556 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.1164971 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097831127 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.120226494 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.113738527 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.124803984 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.102984888 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122324197 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101533063 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102354038 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119057504 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107805819 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.132227251 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101146581 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.120706871 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103110836 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122456502 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097142068 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098492266 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.13097054 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096943351 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124464782 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114409296 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119595331 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098922453 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.127167266 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102519478 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115857347 seconds)
  done (took 6.222531551 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133092111 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168144568 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.124295238 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166088576 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.142257975 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114404419 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124731553 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.164368721 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097376787 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118565719 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124074611 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142549192 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120959882 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108553959 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.12307907 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101325924 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.122052864 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098486528 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129367377 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102565332 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130300212 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107382451 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.142505052 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139681845 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108716645 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120161328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098758846 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12774214 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.138208394 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111135191 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127795487 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128050067 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123310932 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126451696 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102713376 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123474013 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.143609707 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101683311 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122900937 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097556978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122457269 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10810583 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.128782181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124301768 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125651729 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12563006 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101916854 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115505481 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120474143 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123648075 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116022009 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142910822 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12576077 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102392235 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127259197 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.142059402 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101794298 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117868056 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106311289 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.138008505 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097422249 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129384284 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141657199 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104388483 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.134718543 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122075907 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127267686 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12855579 seconds)
  done (took 9.316456159 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122733937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.149007047 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125647433 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147982409 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131593375 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111924433 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.130714011 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111993836 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132574417 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139942986 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112812129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194391995 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122459822 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119572876 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131867364 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111554025 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132547908 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110521213 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.13324119 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131411755 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112846624 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.14592403 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111622985 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146327336 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151311814 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102802193 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.13373578 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131409338 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126096843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131596175 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150674626 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112063792 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133149111 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.146234188 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131358485 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.132119797 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09886191 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1316671 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111726971 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13254541 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102019726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.147339716 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131372813 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103516221 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131939263 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111880423 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.146702668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.150620654 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139013386 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122008065 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132123875 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146426237 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113266218 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131717791 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126561824 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.157495363 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147615278 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145848196 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113393556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.148314947 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146253813 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.157286914 seconds)
  done (took 8.938337725 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10120854 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099610323 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118657561 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.097979857 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119703153 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09837168 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099144685 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.12079808 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09961175 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119343789 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100278302 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096404691 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117288832 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099853523 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117133552 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097942201 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095979905 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119179813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101545352 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117060032 seconds)
  done (took 2.95006355 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111043493 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.145878331 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.102009821 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.131891669 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10380633 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132407892 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102948931 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125280219 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102480745 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124726553 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118343909 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138916056 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121900188 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11250348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137263974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111726722 seconds)
  done (took 2.737122388 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127883469 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.140108553 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.151453325 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107126062 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097596157 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.132477479 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099315672 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.119594705 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096041099 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132639859 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107851253 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1332414 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101095065 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.120395604 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102425922 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.129178289 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096754034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125973051 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101469524 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.150629446 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108457745 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124675433 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102658271 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125546652 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104621063 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128370395 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109388546 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.118864374 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099550175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122473394 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105813883 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132485054 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096831717 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.128374697 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099271074 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119191815 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101387059 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121601809 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108952898 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121100126 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100885914 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124965969 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102186493 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.122305126 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097405468 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101377237 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118183991 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10886236 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124791212 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104947834 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122102782 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110449639 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130048112 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114387701 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.135010821 seconds)
  done (took 7.188995345 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119300857 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125386126 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.110082936 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118793415 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105967867 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.130121108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106757767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102687727 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125038522 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097414073 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124378013 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105329124 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124634175 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105974446 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125322634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105682638 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115983524 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103562724 seconds)
  done (took 2.873121935 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10888541 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10030895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.13230811 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100813 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.121944396 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103712281 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117681404 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099873635 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119018389 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102325758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121024494 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104524455 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098216144 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124145649 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10118762 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121501374 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10406213 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119404199 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101864327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117138323 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105510057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098788925 seconds)
  done (took 3.247557752 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.126820359 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.163929089 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121318031 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.176550043 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129978956 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.10886875 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.141925174 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11028468 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.151174642 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107261545 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127079871 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108150893 seconds)
  done (took 2.398055737 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135081782 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17111981 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100015543 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125711206 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118040787 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130708168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108690072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131901237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143713757 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150472271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11040333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144585484 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123970958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145963167 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138178601 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118431998 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131535776 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130081891 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103776328 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157328704 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108794245 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146715213 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129876035 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109800543 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130000605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144081813 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125136793 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151563622 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129865287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125481745 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139322054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108982505 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146145103 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150188649 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104444475 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14553163 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129631142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136667273 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140106055 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144765932 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105033803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139818353 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144920231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119058129 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146006341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129763463 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119758276 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130784991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110064447 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168512102 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140600578 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1445158 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119444569 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145329275 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144351184 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170103661 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13033754 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14615144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13920786 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151149086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124614601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139882433 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145365992 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129273724 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140105847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144690205 seconds)
  done (took 9.662299679 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156485169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121122279 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109335029 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151636654 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144633046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109431865 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131003534 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129907918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110725314 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123810792 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190694765 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111513306 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145581112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144925071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110482564 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130639711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110398521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145141756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10279296 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168520197 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130585847 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14511916 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124009763 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14494949 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149819424 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139166759 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110602216 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130675779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110618133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130644152 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119600141 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131716897 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144398783 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10100221 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145225143 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108913963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131771747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140178329 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110536346 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140386168 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144897622 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138445527 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132030828 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109102902 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15173421 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130323309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11029295 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125070828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109805649 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125660459 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150633021 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129313945 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152619565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145934231 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130755482 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112040641 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13065891 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110812465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131151969 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118388747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145929493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131244016 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170596571 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111499834 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131750734 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124468164 seconds)
  done (took 9.474731603 seconds)
done (took 179.102485115 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.125428076 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.167636933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.118653544 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.189817328 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102192496 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159537758 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138833254 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.140490993 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102655687 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100431935 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.124443096 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107004888 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.194058547 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101512757 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.122772058 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107254862 seconds)
  done (took 2.929988895 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.22148684 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.334874359 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129862145 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.131148733 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111395262 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128807813 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109804732 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.13165616 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104853046 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.143157702 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106240759 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.127942503 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123317293 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.128762169 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10343609 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.127627392 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122543139 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.127987966 seconds)
  done (took 3.351345243 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.14437254 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.170173261 seconds)
  done (took 1.148143725 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.147844098 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.227261245 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.355928781 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175534161 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.160473972 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.159446129 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.197053756 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127753265 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.231792384 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.156922517 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.156428673 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111613122 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.16502785 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.140286329 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117757178 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.131196737 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143538295 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134603616 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111765833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.135659022 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13942771 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.13504047 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.139960823 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114770281 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.220402803 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.156310378 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112816934 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.135334712 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113930774 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.133371478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.142187991 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137096165 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.155629132 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.217799939 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.140916661 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.215395577 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.144630884 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11139634 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133966808 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11116778 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.13846189 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.138598665 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132837321 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.131601366 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113408851 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.144573528 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112862927 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.135303207 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12369046 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.147492937 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.145473419 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121979422 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235008598 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126360649 seconds)
  done (took 8.977385657 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.95769109 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.181240728 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108327918 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.124600914 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145567939 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15131664 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.197745922 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134317795 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312795197 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.949302374 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.152450331 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121806989 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30752892 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.2998257 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.218006198 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.414374544 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.809226709 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.147167982 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140744071 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.190978527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141938725 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168901584 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135317543 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.467634385 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.133371343 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106885217 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140660888 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.143179618 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.209188845 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107276392 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.134262759 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.233790252 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.312442095 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.266936688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110909719 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128938291 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106032905 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.21518837 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337525978 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.282713879 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.207552667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102296141 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127878246 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123906472 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158646109 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102018257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.235652018 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.221796019 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.223007723 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.134965451 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120572949 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143282982 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143991281 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.210103395 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103533914 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.411051375 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.415986085 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10507476 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142818474 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.151872687 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.310051258 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128497012 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.296801699 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142962694 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277396378 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105150915 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.879219499 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.214262729 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128836417 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118983228 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.140506469 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114284143 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146270561 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.20441884 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.438253729 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.153576283 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11335826 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128709867 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.261581336 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128000052 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10708511 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.211807167 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133688453 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118910687 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150607897 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146851142 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.220582273 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.295758812 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148786382 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119577901 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.136672042 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145138159 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112017166 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.260566415 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.292742669 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.205574231 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.281216433 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12502614 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.21238403 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.236878128 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122656462 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.241573704 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119603641 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15067035 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124468012 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.289493051 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.178903192 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12809408 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115337606 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140107082 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.180380731 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11145327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140888333 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.217120841 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.525460033 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.214155601 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.126541765 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110650368 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144344728 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.21153553 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138689639 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30424968 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144826479 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.216790319 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.140439029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.105026834 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142618197 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.214040846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14737497 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120827251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148453423 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117824051 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.321146039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.26501213 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.149573508 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.299353198 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194251471 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142544591 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.221875831 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143944175 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217594168 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.143119926 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122624511 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133930001 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.874221038 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125371944 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142745792 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113842906 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.241218883 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130463527 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107922598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12828982 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104742295 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865453787 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110705756 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.125618978 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108358344 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139823827 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119763723 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139841213 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114115002 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209250304 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308973215 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.145731378 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.139695887 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107592577 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.208424356 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133611839 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107311277 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128619803 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108474734 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142320247 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114760721 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130525801 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.22213307 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.207377329 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.29447434 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578461443 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130488058 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107504489 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.30588818 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105989873 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.379980613 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143175667 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.297705711 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.216787138 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103967542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.413204978 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.218678841 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.237455423 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132766476 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.221702206 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103170057 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14086209 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.209965808 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.128947284 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118856184 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.206867034 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.153556742 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148708035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.200429466 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130122878 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276015962 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.126301266 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.218921773 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110863124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146134573 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.381812474 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107615077 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155852693 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212089519 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13535916 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108990469 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.877201008 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130576996 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122625323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143873923 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.301440551 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.215290907 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142155841 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120312008 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.146118885 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.2109759 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.259066232 seconds)
  done (took 52.553668021 seconds)
done (took 69.793696375 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.403193882 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.341724783 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376684432 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.25612039 seconds)
  done (took 2.329707816 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.222840367 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.193340803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.154926871 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.129192211 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.189071268 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107270566 seconds)
  done (took 1.854592421 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.645393557 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.565302743 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.435187158 seconds)
  done (took 2.509786713 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.306150825 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.332419947 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378612769 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.572622598 seconds)
  done (took 2.571661617 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.254867995 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1513955 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.120289497 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.163098819 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.18857786 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.275758618 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.171946093 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203612006 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135575715 seconds)
  done (took 2.584163716 seconds)
done (took 12.714775428 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.258261366 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.325603028 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.168692546 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.244192349 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170777022 seconds)
    (6/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.327714613 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12677768 seconds)
    (8/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.311925535 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139287124 seconds)
    (10/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.223542651 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.172446151 seconds)
    (12/286) benchmarking ("sort", Float64, false)...
    done (took 0.202592081 seconds)
    (13/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115194059 seconds)
    (14/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.141821921 seconds)
    (15/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.270589246 seconds)
    (16/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.120973535 seconds)
    (17/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.241543254 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.121366652 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.224951937 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.270877391 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168287341 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.150691562 seconds)
    (23/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231649338 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113940776 seconds)
    (25/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.233943828 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.172694101 seconds)
    (27/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113389033 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.138794087 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.247790698 seconds)
    (30/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.227760383 seconds)
    (31/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.198084568 seconds)
    (32/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128641619 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.159891162 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.263841463 seconds)
    (35/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.126404049 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.146117008 seconds)
    (37/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.197849053 seconds)
    (38/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163211776 seconds)
    (39/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.144225562 seconds)
    (40/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.270527005 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.274405754 seconds)
    (42/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114233879 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.226160286 seconds)
    (44/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.138638874 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.303707473 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137433571 seconds)
    (47/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.285696507 seconds)
    (48/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.147756511 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114387424 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.168883131 seconds)
    (51/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.226516545 seconds)
    (52/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.212444306 seconds)
    (53/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112505933 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135010567 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12731541 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.180492198 seconds)
    (57/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090208215 seconds)
    (58/286) benchmarking ("sort", Int8, false)...
    done (took 0.262940785 seconds)
    (59/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115386495 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114699643 seconds)
    (61/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.115486019 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.234267548 seconds)
    (63/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.232868018 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121170674 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.149984628 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.148739022 seconds)
    (67/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.147262709 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.188794763 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.260712451 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115296072 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.182844724 seconds)
    (72/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.106581202 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.128834712 seconds)
    (74/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.089878495 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.256423746 seconds)
    (76/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.174545571 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121235956 seconds)
    (78/286) benchmarking ("sort", BigInt, true)...
    done (took 0.290212116 seconds)
    (79/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.170517004 seconds)
    (80/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.171722757 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127053609 seconds)
    (82/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.117568751 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115261177 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185837738 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12439009 seconds)
    (86/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.139983401 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.156512968 seconds)
    (88/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.172366678 seconds)
    (89/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.23317814 seconds)
    (90/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122971207 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.117451486 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.21866233 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107355143 seconds)
    (94/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.145208004 seconds)
    (95/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.094065541 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139565489 seconds)
    (97/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114965458 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.136347832 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.153207213 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138915567 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126686435 seconds)
    (102/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.2318717 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.142492769 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.149584042 seconds)
    (105/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.174821902 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111739712 seconds)
    (107/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.153549283 seconds)
    (108/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.22637506 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 0.230365063 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120288768 seconds)
    (111/286) benchmarking ("sort", Float32, false)...
    done (took 0.205671863 seconds)
    (112/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218633568 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.220516132 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124404962 seconds)
    (115/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.142438348 seconds)
    (116/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149298642 seconds)
    (117/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121821429 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112515195 seconds)
    (119/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.134397516 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.127444341 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.145853608 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115961154 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.21009848 seconds)
    (124/286) benchmarking ("sort", Float32, true)...
    done (took 0.270759011 seconds)
    (125/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.257897813 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090574014 seconds)
    (127/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.122210791 seconds)
    (128/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111264445 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.139168961 seconds)
    (130/286) benchmarking ("sort", BigInt, false)...
    done (took 0.279582289 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.146145068 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113160451 seconds)
    (133/286) benchmarking ("sort", Float64, true)...
    done (took 0.26957285 seconds)
    (134/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.113456652 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107879412 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115021997 seconds)
    (137/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.148511015 seconds)
    (138/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.122811637 seconds)
    (139/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.115286196 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12062415 seconds)
    (141/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.153738483 seconds)
    (142/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.172681244 seconds)
    (143/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112047273 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.237669175 seconds)
    (145/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115848321 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219798453 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.145584983 seconds)
    (148/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092637278 seconds)
    (149/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.115797728 seconds)
    (150/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.097300544 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.236337592 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.176685932 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118799415 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138524306 seconds)
    (155/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.096675354 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089841937 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.14996545 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.156403764 seconds)
    (159/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107283659 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.093021183 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.148237112 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092186006 seconds)
    (163/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.126355536 seconds)
    (164/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113262446 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.138300755 seconds)
    (166/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091140277 seconds)
    (167/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.115487324 seconds)
    (168/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115712802 seconds)
    (169/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136323679 seconds)
    (170/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.116006349 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.146035297 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107742672 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.136027163 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14473781 seconds)
    (175/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.136357832 seconds)
    (176/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107019397 seconds)
    (177/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.213359159 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106168787 seconds)
    (179/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.184503935 seconds)
    (180/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159613412 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.264540612 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.113349492 seconds)
    (183/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.181156636 seconds)
    (184/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090022243 seconds)
    (185/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.114265375 seconds)
    (186/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090226382 seconds)
    (187/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113096513 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.180655125 seconds)
    (189/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.136596477 seconds)
    (190/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.124162472 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091637893 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.141800113 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148483434 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124490214 seconds)
    (195/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.09780819 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.147797534 seconds)
    (197/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.150889148 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.125081264 seconds)
    (199/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091005255 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13613051 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.120798942 seconds)
    (202/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.13441343 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.12448622 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.135105895 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091636113 seconds)
    (206/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.134057251 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111537896 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.214248594 seconds)
    (209/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113924973 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.147250419 seconds)
    (211/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.123161962 seconds)
    (212/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.140105504 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.156646041 seconds)
    (214/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091345013 seconds)
    (215/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.089826155 seconds)
    (216/286) benchmarking ("sort", Int8, true)...
    done (took 0.261877591 seconds)
    (217/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.115735956 seconds)
    (218/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091669024 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.119635339 seconds)
    (220/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.095071095 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.137455841 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.093672181 seconds)
    (223/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093091098 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140035683 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092633518 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.148499105 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092755034 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.130108404 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109570106 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.114050886 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100737653 seconds)
    (232/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.089932126 seconds)
    (233/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.135226336 seconds)
    (234/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11226176 seconds)
    (235/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.159902968 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115582648 seconds)
    (237/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.114890829 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115370315 seconds)
    (239/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.136693245 seconds)
    (240/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091589006 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.148541135 seconds)
    (242/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091667275 seconds)
    (243/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090815335 seconds)
    (244/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.201963956 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.116923932 seconds)
    (246/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091930984 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.159778932 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.093161518 seconds)
    (249/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091329046 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.115778833 seconds)
    (251/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116304397 seconds)
    (252/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.115059292 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.116764536 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.140215349 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116958759 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.135962457 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108167997 seconds)
    (258/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.137261945 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109627222 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.142147045 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.094147388 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.140000219 seconds)
    (263/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.151269904 seconds)
    (264/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.136605927 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125528671 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.118524665 seconds)
    (267/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11508933 seconds)
    (268/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.138930251 seconds)
    (269/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.287604194 seconds)
    (270/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112894999 seconds)
    (271/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.115939549 seconds)
    (272/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11279168 seconds)
    (273/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.122235494 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.113094136 seconds)
    (275/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089780372 seconds)
    (276/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.143118177 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115959829 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.114188026 seconds)
    (279/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093659138 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14095086 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11175795 seconds)
    (282/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.11536592 seconds)
    (283/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100374482 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139574379 seconds)
    (285/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107794356 seconds)
    (286/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.093151909 seconds)
  done (took 43.937616451 seconds)
done (took 44.811169925 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.124206288 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178975732 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.120324977 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.166789781 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124339083 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150930638 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.142468883 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.122578571 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.146903755 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126856989 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.150374661 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102563649 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.144104969 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121308785 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.14529182 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143204599 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.148188905 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.118026692 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.135279181 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112582986 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.135984226 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113605321 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.139053333 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102267769 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.143414095 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119545302 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.139337688 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120424525 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.137969412 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108794692 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133917185 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115071535 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.133307803 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123612193 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.136143332 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112157328 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.144908352 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118382352 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.13832522 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114391585 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115871247 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138417255 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114231733 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.141377892 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.111681236 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136982688 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111438143 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149462714 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166333058 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111057078 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115620681 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.144307234 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123657924 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.139823413 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109366866 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.136735253 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114035376 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166942377 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110102554 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135827069 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11568512 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.141068054 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.111914702 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.135538751 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112348754 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143293868 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119978247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135993128 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119908298 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.137648069 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.125374545 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.136307865 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110727093 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.131949115 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118534835 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.141754364 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105026901 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11181018 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.139346739 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113514559 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136288235 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108325913 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.139120934 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112602265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132164349 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102447019 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.133432194 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114253423 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135841875 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112206874 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.13738423 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114565498 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115203742 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145791228 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.13783498 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115156276 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137553943 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11480029 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139213937 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111336132 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105925999 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13278277 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116121039 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.132632256 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113896803 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.148428579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109467906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.13722381 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.113169383 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.136880971 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.127700562 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.143258665 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114157437 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135051978 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.10837519 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.140940841 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110737717 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.133702427 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110027223 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.138183815 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113961178 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.137451537 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10912646 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.139749557 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12406511 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106190645 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.135125261 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108013716 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.138822459 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115230241 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.138482011 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108771747 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.135173565 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105319151 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131531687 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110157755 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.140787525 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10885558 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111221622 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.137380845 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112041983 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.137861202 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112920381 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138482016 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109836879 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.12620867 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111027226 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132967344 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115387892 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.138057372 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113194641 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.128983809 seconds)
done (took 20.213410589 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.12382985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.222892264 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176671392 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156179776 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.19028775 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.166594263 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.151707653 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.158184392 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.149375731 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179724852 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.154137628 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.16613371 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.180186893 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126687139 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.166559301 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143803935 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120489539 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.16245122 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.18676756 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14861416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.174474918 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.149997018 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148339868 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.17760288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118291851 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.186017736 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.152536638 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120339523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.151201118 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129257047 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.16614331 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.153388875 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127890232 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.16135664 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126926615 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142432618 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.165926588 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114178174 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.146438259 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123605954 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.160428092 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133119038 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.142351397 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.159785201 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121654657 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150642072 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.119816616 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.144319118 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12094418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137841691 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129205068 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171226913 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145177193 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126286979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.150844283 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121226851 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.150889334 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.150313998 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127155613 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.151691052 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123932897 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.150891283 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130062293 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.171365467 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.146700893 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126437208 seconds)
  done (took 10.748635266 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.143229496 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.182269485 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128048648 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152521926 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.151678549 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106172837 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.13034078 seconds)
  done (took 1.927739841 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108778193 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.16898809 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150740985 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.174545016 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134267939 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.180063031 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155716062 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108318485 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163243764 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123132241 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167139658 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.202074403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11024213 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.150803928 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153030517 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133992765 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.178995838 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109041064 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143696242 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151525673 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141653368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136451666 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.154369915 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11029116 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.159612099 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110936218 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219762278 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.15343129 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107973617 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144048196 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118363491 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.231824822 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.160204611 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122804743 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131517655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.16927351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13493684 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141911107 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141186483 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.14179284 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13554515 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.143943963 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11973188 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144537569 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11955688 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.150713986 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126651336 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.147399453 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116743525 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169020306 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.150428728 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136121438 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136603249 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11505195 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.149387967 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118285676 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152558887 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11792453 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168211233 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12267875 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168527507 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.167442576 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13628846 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168968411 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132780775 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161041349 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.16029929 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11767472 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14562657 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121232583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.170179794 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116266029 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.150277927 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126863161 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146469024 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.141142402 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.165564983 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115494952 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.151431258 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115042694 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140038081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109285279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.153184876 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114160712 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138196153 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134539792 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1522346 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118078773 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.141076006 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.166967662 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116947993 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.15210944 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127346356 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140557117 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132943582 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.171519224 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.150913341 seconds)
  done (took 14.812609454 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113993562 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11088472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.143336654 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112406864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.135904467 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111378815 seconds)
  done (took 1.669744627 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150102523 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140837507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13009913 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.14423265 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187369868 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.1370579 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.163172404 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124742575 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159813207 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128714527 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.162317307 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.163101076 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147044969 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145385131 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136920193 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145822512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137058089 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139570335 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128357914 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13971498 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130042186 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14715111 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114018312 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.164743758 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143969376 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122223 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143648513 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129539037 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154010313 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124154259 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.144863773 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11867546 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.145570111 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123914813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.163885209 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145581696 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112805936 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145005217 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121310919 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143533337 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.138921283 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139220749 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130340007 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145702356 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124710199 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.146891849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120811261 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143575594 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136743578 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145797171 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12017638 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146448119 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117741671 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146229315 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121077667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150048604 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144484437 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137725601 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145778121 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121530817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.140933278 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118580035 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.149256255 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118224981 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143694288 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120379955 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.145325804 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113843603 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139641542 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119792333 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145534718 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116886695 seconds)
  done (took 10.892985538 seconds)
done (took 40.971997876 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.720940483 seconds)
  done (took 1.660783998 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.986827094 seconds)
  done (took 1.930161275 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.173773941 seconds)
  done (took 19.147361716 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.655229308 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.81375021 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.255824533 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.196542203 seconds)
  done (took 3.86481714 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.027996501 seconds)
  done (took 1.987480733 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.366517496 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.286537584 seconds)
  done (took 1.599744669 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.8836775 seconds)
  done (took 1.841783064 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.750456795 seconds)
  done (took 2.701211473 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.443324964 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228706795 seconds)
  done (took 1.636739022 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.669335695 seconds)
  done (took 1.623374279 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.818738292 seconds)
  done (took 16.778563132 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.290407712 seconds)
  done (took 1.2625485 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.346848877 seconds)
  done (took 1.306858915 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.833507339 seconds)
  done (took 4.793566007 seconds)
done (took 63.085987003 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123525073 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124893204 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.152243712 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12297041 seconds)
  done (took 1.478224753 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131419037 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.14769279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.127954088 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.146614201 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132755012 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.148839829 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118250372 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.154328368 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120899214 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149565505 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122459949 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.146998641 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124937902 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144360939 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116655032 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150614428 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12595707 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.148353369 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120021422 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.149932229 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118027223 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149336596 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150024011 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12162883 seconds)
  done (took 4.235070616 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123056987 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.115998644 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.144368932 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115496898 seconds)
  done (took 1.468453541 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128566122 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.165017315 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139059155 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.15427619 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139213001 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.165136215 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114961221 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.141270279 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117952205 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.154735841 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117725786 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.167723363 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.164419686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110341493 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156233815 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107276843 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.138694355 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1400129 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154422826 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129296554 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.139965954 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127979331 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148973278 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13278322 seconds)
  done (took 4.325146019 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.222787478 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.159234559 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.170689896 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.124429148 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.206509321 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.172643828 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114015207 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.173245946 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116443794 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.169019652 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120099754 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.206562645 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169294369 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120539017 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.144351265 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153594795 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141152561 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.172794751 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.117689371 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.157605213 seconds)
  done (took 4.104613153 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126011096 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115101175 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135284269 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114596031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.149713713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.117261489 seconds)
  done (took 1.729309283 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110564661 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107682473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.134031214 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.107303191 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.137765112 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.108586715 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106622004 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133671599 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106994605 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.133158051 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.107495305 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106381661 seconds)
  done (took 2.373953648 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.513378069 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113969725 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.154116551 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116346174 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.167385943 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.138457278 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133483365 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.138974625 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.208198329 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126651384 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.158875497 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.204471722 seconds)
  done (took 3.149648549 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273925225 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120238054 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345881983 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.493469466 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197479396 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210389128 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375026228 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210079721 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.240203967 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168077882 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248977883 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194389134 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187264541 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221903255 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147106446 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.219109502 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222698224 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266807714 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185142552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268149409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21554977 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210715233 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23434505 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186690058 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171757579 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205490876 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116385491 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154785218 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225884179 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217373795 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238790323 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191138144 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145868496 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293566115 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297530964 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244330853 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.466734506 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145422078 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.252220217 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.233714608 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30778192 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175341619 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266449062 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192965779 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134471049 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233426255 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19952604 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.229363938 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160763342 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172749719 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257353758 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223335346 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.237913646 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172235558 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396502285 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180953409 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178209092 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236237268 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259590002 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248284576 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211967124 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148026311 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270488945 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231484027 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234356154 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177772325 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.217983906 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153671334 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225050389 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25391053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233901241 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211944912 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.278827977 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16636944 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213339851 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216084468 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189442709 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227690302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202038863 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118006014 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184260058 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141977676 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155195463 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219437038 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120430648 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274930053 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169431174 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324929005 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307993852 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172210654 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207667427 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211956557 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218233114 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179405913 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116639165 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183330359 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.203789446 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196166106 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13612272 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19752065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181786537 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153722696 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159860644 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147817884 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201067081 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134793948 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212784548 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20866886 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158613464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20924183 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156529471 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.202635903 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220036201 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239424681 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16206648 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161626898 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252861673 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17116026 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.167844363 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22506899 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242227499 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209731657 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171814424 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224109932 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25837502 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176223882 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247063952 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153018669 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166343537 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.196142121 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201798522 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202743903 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164819359 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157018146 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.194570219 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251560247 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152795785 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138538314 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224262951 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152959635 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128251387 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180695308 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16820623 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1457752 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.188929834 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168852414 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197904041 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171153782 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191431288 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207188505 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184455165 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270212261 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164023101 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19805281 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152541458 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.140896188 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.232768891 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24057804 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127911534 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237924431 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.216429703 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31608176 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211929507 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158824243 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23345591 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129411296 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.143845024 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218717085 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206323465 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180780052 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.262419483 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285671129 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.217544582 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191873941 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183927483 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22056555 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.222862889 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213416184 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.178224001 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180419574 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220772882 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146344264 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120247415 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154525299 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172347999 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132434646 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161612873 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246109574 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212077598 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.303319764 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209519008 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145603516 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236558737 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151408056 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210856881 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.224543374 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140992624 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.238999873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257434611 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187315894 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175028624 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228521106 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143096816 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122908469 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163250041 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212131134 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13318486 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166458547 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185770814 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234733903 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226166013 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158242534 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330661813 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213653871 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247206115 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.148337581 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192717494 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215414586 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170695899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.222956659 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165336536 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.176378026 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229310949 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180761429 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259774754 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20600839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221467833 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301929377 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168104454 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159335054 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187844548 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212117207 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149416993 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203105741 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181080532 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165983799 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164771008 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.169365831 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153434266 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247077109 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173714329 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247747288 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.194232173 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238728444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122317253 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18764342 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203226111 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177476036 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114972816 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217251485 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249083996 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184564054 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20025935 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223612055 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129158235 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.434170674 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251239723 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244739568 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170690295 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177865925 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176648869 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199412053 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210597221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234636053 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184439442 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234444838 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197848288 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.14735814 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167710838 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181253215 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159403846 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.196226613 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167246618 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193743487 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144950437 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281445947 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151669117 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199393372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21485059 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.176075831 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163983527 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173588718 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26343642 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199541347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230946228 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193572717 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20943843 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240827296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119448015 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155676504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124199887 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235090767 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161064319 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204563314 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.269199503 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.326088202 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202936002 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212961261 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166926718 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121076395 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204432627 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185343739 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.318163012 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156305117 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166501182 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24715281 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183524971 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129591159 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207291267 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398520005 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151981531 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222296537 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.146629869 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.361626558 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153150347 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131860417 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201005278 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218671878 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161637094 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.195859747 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210276895 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183758212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20113806 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16949091 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274038335 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30926527 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226685159 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230826303 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151418296 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202256439 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210995495 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226218547 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178956229 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176901434 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172049134 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235881459 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.236466759 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.163163606 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207104829 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207718793 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204275659 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245649947 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133317685 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238866642 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159626698 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218014111 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176695859 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121424254 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195560842 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.292122881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137002849 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222841898 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198587498 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159428147 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123940276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195523904 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197772464 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180252135 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128106974 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242932635 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15397863 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210276245 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22775506 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129612437 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19367187 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180163165 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13014702 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178513419 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18355207 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13807987 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203148047 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242028399 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131243469 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254896769 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230511968 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210748322 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17518441 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178249975 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696385358 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125351437 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233207615 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18107633 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250984837 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183688475 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215831614 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205332806 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154522975 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219141434 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18982837 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.256872107 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218968362 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202326465 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130051777 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183686541 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18121906 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1323565 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189758609 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207218438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169553869 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137534407 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197664506 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183945011 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.180685631 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140332731 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242209488 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180294007 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247727093 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236620814 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171498852 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215411036 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247548159 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127866898 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208027811 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220630224 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176314132 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1960495 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127189391 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164083079 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229843516 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119469983 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204619659 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202519322 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209099825 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208709685 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139156947 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205298605 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18120058 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204462618 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122525843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.194097869 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198572638 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15831635 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126056949 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195438875 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207470038 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.199475257 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125893337 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.202877816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23642222 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122405046 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163442008 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373926331 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199416141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254789675 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.193870349 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164109438 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14542504 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198438413 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191582037 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200922439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126574938 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159956775 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.132542843 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.218648359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.192713563 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198403599 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244622427 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204479028 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240180534 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161156201 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274223152 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169579648 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195643861 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135061931 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156065972 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173337942 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136990252 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184113813 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.30427212 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201928521 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.18814963 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.182616233 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154132576 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12427119 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159396186 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173919908 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195122635 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198295178 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183136763 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114751442 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180867958 seconds)
  done (took 97.206019675 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170031182 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167408365 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.177700943 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221870041 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198965984 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277515993 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.2356496 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256993966 seconds)
  done (took 2.764598201 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.127710688 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165937492 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.17458278 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.12525689 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140634471 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.450904779 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.167686228 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.153775346 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.149909615 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.19416413 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114787995 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.757275414 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122343346 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.15387554 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.13741028 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138473141 seconds)
  done (took 4.325803481 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.846430607 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.605038305 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.216610654 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.305239851 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.289012088 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.210078003 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.81680331 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.246463819 seconds)
  done (took 13.589452514 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149985945 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164837187 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.169473665 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.194535657 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149608207 seconds)
  done (took 1.894345527 seconds)
done (took 143.601589649 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.117924398 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122284442 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.147513422 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.122370967 seconds)
  done (took 1.562196595 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.130227272 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.099457104 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.130496025 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.098231778 seconds)
  done (took 1.52404363 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.529398866 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.130089948 seconds)
  done (took 1.760532212 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147739809 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160741449 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.132744987 seconds)
  done (took 1.507788618 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.129279585 seconds)
  done (took 1.199241739 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121972695 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123688103 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.166787694 seconds)
  done (took 1.482091977 seconds)
done (took 10.101019041 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134929643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46615179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410417181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16263948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726835705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431071266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.074753685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165795556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200993468 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139929331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13479124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.723291333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.068505865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.391320943 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.047862097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.483484351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695610353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143506669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123111331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142027391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018506984 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139384885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114953463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142021364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.692559038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420463847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142458986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.50341997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112757282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120814186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.43209071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112054385 seconds)
  done (took 17.874288236 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115882708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.216845525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.122842809 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143120768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118388614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142582448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126536633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162042325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219128905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112424807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164220587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111667058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147591604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113637165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166441598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112862874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143922194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116718621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149240269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115781919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135090037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13984981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11427621 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144755981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111795595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156804935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112583901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.16171455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112597395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150178966 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11984387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141841154 seconds)
  done (took 5.496133314 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.167243196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.230655727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152278512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152689452 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.207794109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114515206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.24456326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197129437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.221625139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140256623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136892235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112010059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.186591783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141142773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139870828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.141098826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117389636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144438233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123040489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142594358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137224072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139095862 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115802242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116203326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143640806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129631316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143286818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161086512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11370043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12104793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149336013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113351811 seconds)
  done (took 5.867161577 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124514854 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.154253554 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136278436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162650207 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.116684138 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.151620307 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.126225618 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.115739598 seconds)
  done (took 2.165428691 seconds)
done (took 32.467262517 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133051579 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118917981 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.157914921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127796819 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.152719666 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139025272 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.140374782 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.125434346 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.155845612 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.121911847 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.160139655 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112910433 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.114121081 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.140157266 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.12752094 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.146770175 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130481962 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.152084366 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13879534 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.159106252 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.114213089 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.154215107 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122979631 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.167653795 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.139503763 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.168384646 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.131384194 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15036778 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114413844 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.142973583 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132473361 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.171683405 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115823853 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.161510206 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118385323 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146312403 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.11493386 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114606639 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160049979 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.124818193 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148694351 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.125574138 seconds)
  done (took 6.860678669 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.1474606 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.193318574 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.110768888 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.139784368 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.110627661 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.189960015 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.183901447 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.111219445 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.110559932 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.173568618 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.176606702 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.111646448 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.110186737 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.140640924 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.110777122 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.140399991 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.143620367 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.173185794 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.150911417 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.176759371 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.198806761 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.150524194 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.182565101 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.171800001 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.163630301 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.185254028 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.168842382 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155823907 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.174835275 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.110445246 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.182286308 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149369082 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.139762493 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.110309505 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.191329558 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.18574275 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.14816373 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.191716948 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.178432592 seconds)
  done (took 7.128990198 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125804224 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130929293 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170569591 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222844811 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161744629 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159080608 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.12599083 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.168250124 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.133722776 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.144307749 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124496874 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184531663 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133913772 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.161289869 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119851187 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.162409831 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139053368 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147333381 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120152164 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167775355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135148502 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161186468 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.128664636 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155827478 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115014703 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.16170968 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119940385 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.160274865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12088717 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.152739262 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122053746 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149528096 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123323672 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.156438331 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.119755331 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157254938 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142035176 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154055424 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125667549 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.186169564 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12948969 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.151383222 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143591415 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.191753221 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115613177 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154122547 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120591584 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.154829431 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112469106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.165556971 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127425103 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144707059 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14236464 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.144761746 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11401745 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160512816 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11653977 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117737899 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.15375832 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122942145 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.172445334 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121228646 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160390324 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117190624 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151250695 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115069808 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142649329 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.126813002 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171091214 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120611103 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.192819965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113989875 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154453058 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123345552 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.150868073 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125115001 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.143530924 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130983713 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124446216 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151943599 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126940523 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148536419 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118927707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16497676 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.140053844 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159596461 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152086383 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124469188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119103126 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147114112 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13137098 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.146094251 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118710483 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.163318861 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116670666 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147097687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124293174 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.150440856 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113548249 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159467669 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122174488 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.142330685 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127289958 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115964431 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148659697 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126124261 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.150543073 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116693176 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151526947 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123523455 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142978513 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121884195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148809911 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.119011856 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161878962 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124170097 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118787386 seconds)
  done (took 17.569129313 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.293564887 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.262308411 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.245045581 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.369404292 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.175356258 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147634551 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.259697904 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.207980877 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114414282 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.200462331 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.22101332 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.227654625 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.211521875 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.222621635 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.219948532 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114369069 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.174613554 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.209264107 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.261941522 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.331975136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.174091988 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.164395981 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170455841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.200339248 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.169182646 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.165487394 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.144572202 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.174268877 seconds)
  done (took 6.931868645 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137778391 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.194450462 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.123853223 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.183556488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.178724966 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116222148 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.150552338 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115554913 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164629155 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13857515 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.147739877 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12527906 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.153439894 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.126575432 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.144095536 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.126688655 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.157684385 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128656779 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148108292 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.120840188 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.168155818 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135326646 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.151373121 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124569813 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.168819843 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124630224 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.148897123 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176698257 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129225577 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.182210164 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.110811153 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.156166839 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13272943 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144428178 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125632227 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.14874408 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.117445132 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.14658369 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.119768992 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111502038 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.145037468 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.102905534 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.155333774 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134785412 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155232174 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118524652 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.153148316 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.120009631 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.15167419 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111680973 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148141478 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118244361 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151109299 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.137678442 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.149398032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.111675741 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.118864406 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135005041 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.126924719 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.148859073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108953579 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155034988 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107899792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.154151176 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126791102 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138973733 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123779351 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.147492865 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.121533867 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.15479816 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.11841858 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132599623 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.141425048 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.119233851 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160937092 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132637801 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.151527501 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123153319 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.156741166 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114344999 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.132598649 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113672966 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.099566851 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.15082072 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.114403952 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154123861 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118514805 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153280447 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168276485 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129915781 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.154378607 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115559962 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124407723 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152091468 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111960274 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.151586037 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137491923 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.174690064 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113598434 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.142920471 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139379871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.148164701 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.112601627 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136323951 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128277198 seconds)
  done (took 15.571138785 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.175517016 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.218947155 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.147945397 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13896472 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.188817515 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.206712623 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133001721 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124199955 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.146673627 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138949405 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.157623278 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126944157 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.157829746 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133653423 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.20577511 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.157760942 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.116770778 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163756233 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122919924 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.222510549 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138458637 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.202962462 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.211777851 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161859955 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121669133 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.200949244 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.209844971 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.131532521 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.159986198 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.181751417 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.162487568 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.209853743 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.213503633 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124248989 seconds)
  done (took 6.729971233 seconds)
done (took 61.868761114 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.220905628 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414627013 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.182028555 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.178129253 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.183288617 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.215139322 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.183539508 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.393108539 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.92880291 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.171905087 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.177198194 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.177465234 seconds)
done (took 27.524807067 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.245844334 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.33548871 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471413471 seconds)
  done (took 3.903041333 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.178342005 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.177348623 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.423733035 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.185735452 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.179804832 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.195846633 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.179642482 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.203645187 seconds)
  done (took 15.641076916 seconds)
done (took 25.066910394 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.241101235 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.374230675 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.447062616 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.198270279 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.197231842 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.190098092 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.184498032 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.20785034 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.194596851 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.180066828 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.181083176 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.452544155 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.202798773 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.568499032 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.197597041 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.192370617 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.198912464 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.41182108 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.185537891 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.219285855 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.164466939 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.165013724 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.187643083 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.204154868 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.191898582 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.192085941 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.22159537 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.194247699 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.379775686 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.20832151 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.221513836 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.181552501 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.218325357 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.19947199 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.296568385 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.221725299 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.373988685 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.192573977 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.173790989 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.185778032 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.369290737 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.610069976 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.185796289 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.18462727 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.187082759 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.233262511 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.167535893 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.913446042 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.192622772 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.183252496 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.202129158 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.570677921 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.198988451 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.195042029 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.187626399 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.418114739 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.215718488 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.205655026 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.211517198 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.184295495 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.183018028 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.183679442 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.198778374 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.192270334 seconds)
  done (took 142.272688901 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.183234173 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.189965499 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.191226971 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.21025436 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.190144259 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.188641989 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.185209102 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.185419443 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.189208095 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.215867087 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.191257404 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.18757532 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.191529497 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.167132442 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.184720252 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.19850788 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.191653066 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.210204304 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210186671 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.185433354 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.204641304 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.186189794 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.191379452 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.191943759 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.190139777 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.26111901 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.226546573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.192838101 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.18803514 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.188129608 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.192182398 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.189740484 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.826507744 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044475919 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.198602529 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.217313165 seconds)
  done (took 79.639834341 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.184336691 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.186772628 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185179295 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219489683 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.186742197 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.782877967 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791799869 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.92918695 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.356569485 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.621343036 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501031713 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190634567 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280229181 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.202738148 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188955437 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203483398 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.212793871 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187509399 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186282233 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781130182 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.205348746 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.403483797 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.363644416 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204586382 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218721414 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582432132 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186252041 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21959181 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.522042828 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.238655472 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186572602 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.592336346 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.318275981 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301105802 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19119691 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219940601 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189032783 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469435909 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187172097 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.185885429 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188862583 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.193840076 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900164691 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194586997 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78366711 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192010661 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.181082161 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195111274 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189390962 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.355641586 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.920705409 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191178008 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189685497 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191135218 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187415792 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187498551 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.219791836 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.514676887 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311415857 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.189894957 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188287269 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.193080957 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221211074 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189511935 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.189505804 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187763256 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.397439534 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.246913397 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.296481917 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.451301674 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776242415 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189522466 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286937269 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310079684 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187976647 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187557582 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190276663 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188369651 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300264555 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188275002 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.602273402 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.367614133 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208618677 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.66164474 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292256754 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191079894 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621223734 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.192223138 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189993935 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955972475 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285850984 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.188835967 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.188722948 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189431372 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602953979 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789735766 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.466671079 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195459661 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.189137586 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.128161483 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195008664 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.615473645 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763405976 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907389722 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198207777 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304852254 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368633631 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211536694 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191537508 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.664895125 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197255959 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250382496 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194070924 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.58997233 seconds)
  done (took 365.478581783 seconds)
done (took 588.489896019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.949688573 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853196839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.988058323 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.881634462 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847865634 seconds)
  done (took 10.627139907 seconds)
done (took 11.731814862 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386035412 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384888288 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254470914 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.386229569 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224779019 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40513515 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369369692 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.218094706 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.297028125 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275432598 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298026204 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247065732 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227074667 seconds)
  done (took 18.080906256 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458755319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.197392333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275032238 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.446167703 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233696722 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467999654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510181812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.197303619 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341160796 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206683596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205075435 seconds)
  done (took 17.647229248 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472099822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.196985764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262007152 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.451311685 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238787675 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.464570529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510458309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.197159335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.336382477 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204238246 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206001853 seconds)
  done (took 17.647486156 seconds)
done (took 54.481706067 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236442203 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360330445 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2302993 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.207389072 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.203492094 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.205049788 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.208040942 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212770378 seconds)
  done (took 10.973907311 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203456786 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198381535 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.202219567 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198542145 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198271622 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.199198903 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.202448798 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.199386583 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198457449 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.201527404 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201485975 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.199091367 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202604285 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.202663155 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.202459189 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.19913087 seconds)
  done (took 20.318565788 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201701943 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198950196 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198928102 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198604322 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.200250569 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.200892802 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200511585 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.19947876 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199213228 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199361509 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201047714 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199625742 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.200617742 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201081552 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.199842949 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.201959812 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.201117785 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.201101767 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.204218706 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.199802085 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200772158 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.20115726 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.199815769 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.200828802 seconds)
  done (took 29.92208503 seconds)
done (took 62.320852078 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.195917524 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.209929083 seconds)
  done (took 5.517134987 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.26110894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.266708825 seconds)
  done (took 3.642783966 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204650437 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.204714808 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.204264037 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.203978112 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204746411 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204798948 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.204537903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.204867429 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204402488 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.20372988 seconds)
  done (took 13.156393327 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204998197 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205952072 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.201555737 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206016865 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.206551799 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202513908 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206292094 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204601598 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.205935539 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.203188596 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205664752 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204425949 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.205208584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203839945 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206801406 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.203629259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203125723 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.201742433 seconds)
  done (took 22.79471924 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22009478 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227092748 seconds)
  done (took 3.560786479 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.333603349 seconds)
    (2/7) benchmarking "second"...
    done (took 1.245606896 seconds)
    (3/7) benchmarking "month"...
    done (took 1.312682625 seconds)
    (4/7) benchmarking "year"...
    done (took 1.301936152 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.245019392 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224200339 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.244720892 seconds)
  done (took 10.021805876 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.207319394 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393731762 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.502383563 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.776821408 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208568079 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.210528362 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.11063485 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210277498 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215005981 seconds)
  done (took 13.948903794 seconds)
done (took 73.753266112 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.203595789 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.218851314 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.222201599 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.213651332 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.519562413 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.231702825 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.203931996 seconds)
done (took 15.92660707 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.189714488 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.201373981 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.193088632 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.205462321 seconds)
  done (took 9.903700968 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.217036198 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554196185 seconds)
  done (took 4.886549363 seconds)
done (took 15.904475557 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208395672 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205682771 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.2079516 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210026016 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.20589224 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208380494 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.206054504 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.205612803 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205890817 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.207851025 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208626622 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.209042187 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.209002622 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.208457623 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208385921 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205119972 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206435411 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208782394 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206041524 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205619076 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207093637 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208950735 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.205671147 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206725145 seconds)
  done (took 30.091131236 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20883905 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.206581142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209171822 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209660949 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207818111 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.208948688 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.208508241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209126223 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210700354 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210422846 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206584761 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.207278902 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209550118 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.206092353 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210778072 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206686335 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209827537 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206013654 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211403299 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208137548 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.210401624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20690484 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207431553 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210712872 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.207717683 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20892607 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210316401 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.208187787 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210923726 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.208122899 seconds)
  done (took 37.378735436 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215538057 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219559688 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.211414704 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211929878 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212399687 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.211289362 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213267752 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.211825189 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.210197545 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.211948521 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21115771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211503358 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210549992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.212977782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211148985 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.210819267 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213211955 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211488205 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212361905 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.21208092 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.211069586 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212828325 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212079221 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212634487 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212625615 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212410189 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21231918 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.212242823 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210834148 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21320804 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21243237 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213389494 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.213010823 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213819053 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213185366 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.213720492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2173442 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220190384 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213270037 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213724336 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213264532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212736665 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213773129 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212110637 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.212008482 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214406704 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213273048 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214082725 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213040985 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213887507 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.214369298 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213418902 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214481433 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212811077 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213124846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21371817 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213720355 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215100758 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214247038 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214229543 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213859329 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.213362152 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.214655204 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214477658 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215290571 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.214783302 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.214452471 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215176797 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215597032 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216135358 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215103821 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215482584 seconds)
  done (took 88.48298574 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.21556145 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212955537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21280328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212230121 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213559264 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215909999 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213205501 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215731396 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213848048 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215929779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216514111 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213034997 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213433328 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2153008 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216116513 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213955357 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216803166 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213043979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217122506 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217409447 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215959142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214203482 seconds)
  done (took 27.845630132 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216750539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2178057 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214264616 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216596244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215786456 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21786933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216557562 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217646899 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216518768 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214904234 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214802217 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217638071 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216792468 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21487954 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214928807 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216669118 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218067769 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216818199 seconds)
  done (took 23.019024119 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.218391343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215451529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218094621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214755604 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.214562293 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219318037 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214933304 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217133741 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219019269 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215062355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218906751 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218628146 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219256188 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216188992 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218226041 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216834408 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218620504 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217328654 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220164041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21583186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217831696 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219655761 seconds)
  done (took 27.907845567 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220372088 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220939243 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217226105 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217590817 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217478411 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220027251 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218919517 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217139784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220585252 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219814518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217846799 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220885575 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218740057 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216084755 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217520682 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218372544 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220530056 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217860974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2201675 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217217889 seconds)
  done (took 25.501418699 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231136031 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22978598 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230523342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2313599 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231147507 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230675449 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23159908 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230495274 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231129697 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2311259 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231463806 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231871778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229905719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23043854 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230878611 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232406133 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23160593 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232154801 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232070845 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231045921 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231544743 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230275623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231676002 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231675796 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232318448 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232380502 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233427921 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231754453 seconds)
  done (took 35.604471134 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223619814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222012878 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219798182 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219973497 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220608011 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220488562 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220102574 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220676572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224078976 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220164482 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223628904 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224019497 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223304287 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222610973 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22428342 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223826049 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222981684 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221225163 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221380299 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220900387 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224460002 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222869562 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225133164 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221643749 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221388321 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224897095 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223039639 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222603501 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22413345 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220672284 seconds)
  done (took 37.799736538 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.262489005 seconds)
    (2/2) benchmarking "in"...
    done (took 1.263790445 seconds)
  done (took 3.656901729 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22348081 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225364627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225565525 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223831374 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222447387 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225703152 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225712481 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222897783 seconds)
  done (took 10.925578271 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226265444 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225967186 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.226293515 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225344384 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226898952 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225124709 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232479897 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.248142722 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225138526 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229127634 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.732673289 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23191988 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22778413 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226034717 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.224805423 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228558073 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226675533 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225773249 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226602811 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225373894 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226761621 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228380141 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227656408 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225121027 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227852482 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239052241 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.231234504 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228017289 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226316585 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229665407 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.226774084 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22374239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228215387 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227807697 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226637875 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226292072 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235616185 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251049527 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.232990138 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228478594 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227731899 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224500693 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228139143 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229010262 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228583762 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228223981 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229810968 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.22467977 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227496212 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231057155 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233848204 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227778708 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225760997 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231086729 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.228843734 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234326661 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248784002 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232015357 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237571953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238230678 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.2412596 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254159706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228906206 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228243157 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239775486 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251965702 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23468178 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24582702 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22676436 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229583072 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235358484 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240314695 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256378249 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229538555 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230780282 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230878838 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230937889 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230368597 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236837977 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.253933518 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229635267 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230210628 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24148636 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253210341 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.229077184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230053726 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.232186322 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.23051346 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.231106423 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240010197 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249932865 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230284672 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229677015 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230218826 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.232267366 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231032793 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230738255 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232522562 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228340655 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231735088 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229828477 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234720387 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239137098 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231484087 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232472206 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.23886032 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232391197 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232139801 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.235804706 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231752099 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231340505 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233107138 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238735671 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.229893191 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234981182 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240118194 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233068552 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234671803 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.231991335 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233002555 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244665674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258602291 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232272125 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232630814 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238647403 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244797535 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233531158 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23614449 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233757646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.229368016 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230419867 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233233091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233998337 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234128627 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233305016 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235140869 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231065007 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.232994164 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233256125 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235337476 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234305223 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.234555938 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234059405 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236721165 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234592965 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236093068 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.239996771 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.233803609 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235175328 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236309527 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231369594 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23591905 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234544125 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236646327 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233793232 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234644679 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235726308 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23639195 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235996664 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.235829761 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23597557 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236460516 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239715254 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236200982 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238364878 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237074225 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233493117 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236822305 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236870948 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235681745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236644586 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235741174 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239772419 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24503939 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236342712 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23641023 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238277672 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236986399 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236685062 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23748884 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240320911 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245719088 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237285039 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.242252183 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.237719329 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238106192 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238457387 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236608586 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.236559478 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2366271 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241671469 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245589124 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248053375 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26280984 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238385539 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242335552 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239875406 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241855006 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.242723736 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.23750145 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.239425687 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23832101 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238586521 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238793115 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239402192 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238085824 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.239859585 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239270882 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.239706005 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238516057 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240821188 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.238549329 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238796484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236576646 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239077777 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239993849 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.238847706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.235223314 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23967934 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237824779 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239102998 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239571121 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24571643 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235219809 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240301937 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240926572 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238536368 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238989949 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.240214544 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241284624 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240869812 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246395018 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259881811 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.241289552 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247687592 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.259510555 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240667571 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.242652406 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240891714 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238823614 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243847185 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24968612 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240668469 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.240473695 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.242332454 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242250027 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242733579 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247469337 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238693783 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.239718856 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241033843 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243251644 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239372055 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243263116 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241257979 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.24047057 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244051175 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241843071 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24236019 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242414944 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24147209 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241642037 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.242526365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244414922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.24953548 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246724002 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241278055 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242817878 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242452241 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246055081 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.24147786 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241388611 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.242729855 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253334144 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268335862 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249066301 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.244252103 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243438491 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248472096 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245969918 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246325141 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242766957 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244386253 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243418291 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243667584 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241893564 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243660713 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.243133584 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245065309 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244889034 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247535281 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.244599583 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243592966 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.244452005 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.245432785 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245022199 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243984482 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245062974 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245680123 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24498725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243978855 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244607014 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249774873 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266013973 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245362094 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245004264 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244382688 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244284649 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.243823488 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24513863 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248323781 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253980867 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24854754 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253875609 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247428184 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254958096 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246331591 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24864723 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.255248803 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243634396 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244065272 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24596416 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246893617 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252218227 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268598976 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.249233874 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251243341 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246559341 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.248471852 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246733136 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247035608 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249318329 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.246705886 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255789459 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.270264756 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251410865 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249479268 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244171762 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.248103701 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248123651 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245595286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25025762 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.248041829 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247971823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.248329971 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.245969975 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.246435007 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24703529 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.247757708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244331631 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247661086 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255033906 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.272754882 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252937811 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248592231 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253908113 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248851587 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254025257 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268880177 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247988644 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248798351 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248616038 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249610193 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.247356029 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250346256 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249327172 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249126586 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253706992 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.249023539 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250641333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.248463451 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2483871 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250488138 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259234771 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27310676 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249585315 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254640848 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246632237 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25186694 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25522173 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249027295 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.2495253 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253193827 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261223357 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258795246 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.25169702 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250812021 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250848267 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249395386 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250488351 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250921092 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251180126 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250632211 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251558911 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249576798 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253667175 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252084366 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250995703 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251864388 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252010835 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261711375 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.252502655 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.253533564 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252191653 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254749285 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252799027 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252603489 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.251934183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251362415 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253300149 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253096161 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258892993 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259262314 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252462492 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250826186 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251426688 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251838799 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.254374073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251906555 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252434479 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253728258 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.252866395 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.253102456 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253410293 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252304728 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.253235924 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25123404 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253507024 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255860608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.26105476 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253826484 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.250484953 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.253388254 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253876701 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252730583 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253616682 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260911583 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256152337 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264957948 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261930997 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258661 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253668134 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256785854 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261594654 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.252223198 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25406866 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.255069788 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.256146308 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.255625312 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258200893 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255273039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.260247105 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.255673151 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255495635 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262625253 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279242432 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255251049 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257411624 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259435128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254507962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254043606 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.255008426 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.254926214 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261998461 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.277305346 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256432156 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257199133 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255596512 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.257592697 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260191364 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256723789 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256708066 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254360676 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.256874213 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25713423 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257385876 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254285336 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255104522 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255487508 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259338344 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262406578 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254278423 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25759882 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.257569815 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.257519037 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257007155 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257832693 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.253826678 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254062792 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256388957 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258182189 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256735675 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.259049053 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256623575 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.258448644 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.25885851 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258144196 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260610562 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.267510896 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265438288 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254974798 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256227736 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257847211 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258933899 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256719094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258876789 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258216858 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258738451 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25945772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258601188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258442914 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.261370113 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274828426 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.282263183 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258858386 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.259734441 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261875935 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260442579 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256718446 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260249815 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262740552 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.263815898 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270580927 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.26112672 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267107924 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280387307 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26086649 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26450039 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263231297 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267788665 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.262665126 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259227268 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258581609 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.265845946 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276996223 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260783481 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269939015 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290916445 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282123045 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260383503 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261019702 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257342809 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262308715 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262825193 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262090391 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26111935 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261597971 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261577451 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.26255804 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266734152 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.261547769 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263560349 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.260864307 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.260900964 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263469876 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259714276 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262611512 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262516308 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262460215 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.262074423 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.263344791 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263338244 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274362627 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290718287 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262537365 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.262663261 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261519599 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264212105 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265991136 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272743645 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271847366 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262305245 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.262842958 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264236966 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263353568 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261410062 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.26404454 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263510459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263785915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.260855352 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275221882 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290686615 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267653205 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.263039091 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264463534 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26434697 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263648132 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264357948 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263133788 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264871655 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267114115 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26884864 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265199561 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264316454 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266610318 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272811535 seconds)
  done (took 744.976291533 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263125135 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262857269 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263406497 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262566803 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262377552 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263229693 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261110932 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262754498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261637494 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262584595 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260913667 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262327378 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262437617 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263437883 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262426633 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262836624 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261869845 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262333619 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26237333 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26265396 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263202543 seconds)
  done (took 27.67821671 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266250988 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.263022578 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264136304 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266633506 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263437385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267946003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263081045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267167916 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266968078 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263755758 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266990728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26772264 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263844436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263160575 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264056635 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267669312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267742747 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263951157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268178408 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264298266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267854482 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26530579 seconds)
  done (took 29.010306516 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267379313 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268976648 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268144748 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.265288498 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267381468 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.265009182 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267972653 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.268026857 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268183095 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.268805461 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.267595842 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.268896532 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276008113 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.27317366 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.269494831 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.267679772 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.268048085 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.268653129 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267947345 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.266241613 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273368152 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.266206229 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.265320999 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.267690481 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.269899052 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267821435 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.270057655 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268617706 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.268875647 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274167974 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.27031295 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269703314 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271934996 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.268255509 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.270873601 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273845765 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270437914 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.266620938 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.269260731 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.278616769 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.291089302 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269826852 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275813721 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.270520911 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.270036642 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274068832 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27788179 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.268041036 seconds)
  done (took 62.137574098 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270740292 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270305442 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.26808003 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270116431 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271659569 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27072263 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.269099568 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271634375 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.26875889 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26791715 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.272178551 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.269730325 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268985123 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271389155 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271740823 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269320936 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269094981 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269231252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.26936109 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268700923 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.26943687 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272011527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272019536 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.26950382 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271350474 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268758884 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270218861 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272198986 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.268522875 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269807584 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.271258198 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272392012 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.272839487 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.268311424 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270931148 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273122833 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.272536045 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269073577 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272597112 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.270343272 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273155349 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273819317 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.273179868 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.27424377 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271129705 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270680196 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270267003 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.271266906 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271741678 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274795535 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274461112 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.271051217 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274289422 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.272119869 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274802117 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.274286038 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272727251 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.27192104 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273904782 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.272869096 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.271822018 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275117528 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.271923703 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274021875 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.274006544 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272562058 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272498151 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275955046 seconds)
  done (took 87.635601658 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275145071 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.275784628 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276129589 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275719984 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274284272 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274688049 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275582494 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275703619 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275741876 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276386521 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274992577 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276524197 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275774255 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274986707 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275131915 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275349 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274870437 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275227342 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277299219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276483665 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276778672 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276091114 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275904204 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275926497 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275893276 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276342805 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278314885 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277695478 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27613292 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276766511 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277628249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276286221 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27701353 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275770715 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277621351 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27676712 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276595855 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277744547 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278077916 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276024974 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277405554 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277716862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278366742 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277470802 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27776048 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277671671 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277507323 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278846617 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278190946 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277983069 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277823811 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276987065 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278102806 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278418868 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279556286 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27795297 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277813706 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278931751 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278104398 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278643584 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279337042 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.279419014 seconds)
  done (took 80.34449248 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279469788 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277344405 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276734273 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276446544 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277993769 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276697417 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279140944 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278474346 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27912575 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280968604 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281654579 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277186456 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277940881 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281788744 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277441066 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279208575 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277936164 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277520565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280984389 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277495461 seconds)
  done (took 26.750512746 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278031235 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280201009 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277500759 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277568947 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280775016 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278469929 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281494606 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281672063 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278202141 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281328329 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281019533 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281849569 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277962129 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278417223 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282031333 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279546966 seconds)
  done (took 21.654901577 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.27912684 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.28079045 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.281871587 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280458483 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278461894 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.278829041 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.282558261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279475237 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278925952 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281874476 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.282588684 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281512325 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.281304913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281670854 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280659751 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282727875 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278810887 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279509006 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28330919 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283020097 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.280051947 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279159313 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282192998 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.283220433 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280105034 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280234408 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.278217119 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279997442 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280392602 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281540699 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279815576 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281052478 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280116452 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279986507 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283062008 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281310415 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285180156 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283243871 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283603034 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.284125591 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283440907 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280608351 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283322217 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284304469 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280830317 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285400049 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280756437 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.282587584 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281352432 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281502156 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284944044 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285306261 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284508822 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.284823787 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.285856408 seconds)
  done (took 71.676287981 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285573656 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285006967 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281602205 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285645114 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284740018 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28413798 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284553715 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284570175 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282649448 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28515254 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28193667 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28635395 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282783532 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287330499 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283908554 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286372413 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28346322 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282389059 seconds)
  done (took 24.302396684 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283237557 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284187838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285999943 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282693174 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284342275 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28657758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283311337 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286401148 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286453019 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283957387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28470985 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.28668476 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287203568 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28657679 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285035681 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283842526 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.286506196 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288495616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28411638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28503937 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286300352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288454862 seconds)
  done (took 29.465381164 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.285631759 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.285461306 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.285497644 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.302033708 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.306333302 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.286471935 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.287265941 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.288102064 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.309662087 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.339673664 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.332678429 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.306045692 seconds)
  done (took 16.802172494 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286031382 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288510289 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285701862 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288597634 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288617436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285362876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2873246 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287143442 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289746495 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287644176 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287016357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288998949 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289848079 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286343092 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288378584 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289135038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287178712 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286376377 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286028016 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289103979 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286169329 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290009613 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287558795 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286624598 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286627177 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287257373 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289859896 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286772694 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287705398 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291679899 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289719476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286765411 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29075533 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286920344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289855221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289650471 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287532917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289457602 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290776011 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286456627 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291139082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290389385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290963293 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287858665 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2908012 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287863065 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287592318 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288823502 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288126359 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291160492 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292004669 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287966101 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290920617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290633898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290891863 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291944836 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289605978 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289553171 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291927072 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290298746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290222427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29273931 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288399705 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289860673 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293253328 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289253003 seconds)
  done (took 86.255003669 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290027467 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28987827 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289812322 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290838428 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289529812 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289392133 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290500764 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290171014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29003798 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289946031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292955733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289849845 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290900461 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289635346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290550053 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289931039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290429373 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290482791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290616295 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292351194 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290350461 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290185863 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29216828 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291817295 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290729956 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295139002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2905115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290919661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291057488 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291827449 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291120309 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290462017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29233114 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29141027 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291757249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291722879 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290889264 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292629682 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291854645 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294382478 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292107258 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294718998 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29156585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293179626 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293331901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292150831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292221022 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291070148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293365397 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292049945 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292646442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294116697 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292932887 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293368162 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293762389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293138147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292609133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293600522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293841514 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296516661 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293939826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294191241 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296482383 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294005769 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293781825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294632395 seconds)
  done (took 86.463535304 seconds)
done (took 1744.480985943 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.460103544 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415658731 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294878555 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.330077394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296930563 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.2896748 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.31204093 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29505366 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.297046327 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.293941328 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.296675022 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.485142829 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.313202974 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296012587 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296731007 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392565379 seconds)
  done (took 26.562624367 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327035516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304187427 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.429247284 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325224265 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.327498253 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504350176 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360485892 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301472464 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.489375139 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.346227699 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.305641689 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.325794113 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302621957 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.291099181 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339402487 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.503621426 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.573331305 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.292140441 seconds)
  done (took 28.844940536 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801692927 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.341535591 seconds)
  done (took 5.339794834 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32217763 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.301678874 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.30365983 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.300139667 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.292317601 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.294333358 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300073317 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.293198504 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.304863672 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445051692 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.30356381 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.31280187 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.322927375 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302936612 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298480405 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343648154 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.480228762 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302073106 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.298201359 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308790158 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303234107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396576508 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.348223117 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302352912 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.442603595 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.305923938 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310718515 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310456316 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.4323891 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302909404 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302834215 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302321667 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305598118 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.278409493 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.883934294 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.296141534 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330260707 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31262018 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300518828 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.467144274 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304990195 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309528642 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.295306059 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.886886217 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46093687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429810985 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.314682768 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.306076501 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.306481452 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372758701 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306122613 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30605599 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.349654752 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.140683462 seconds)
  done (took 83.96064335 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.341723313 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.296106461 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479042122 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.316642 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310264841 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297621258 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.298015331 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615153752 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.303454577 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.298337309 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606374207 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.882061187 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318966568 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.345619668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.168167708 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.31797177 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299714157 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316731562 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.298625823 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.301773754 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869733288 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315050081 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.299861878 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.561636446 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341046675 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847112822 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.298166366 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.305126603 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304569591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.298347218 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839886435 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.316849408 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.353768707 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.299056898 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.588881597 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711743469 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.672034879 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.302154572 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.339375406 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.301297455 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.310991902 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830806173 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688021084 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.299386952 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.298946181 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838559064 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.299999875 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.301665512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.303002276 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551627852 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.299881284 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.301863105 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.319127166 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.301086618 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.301009955 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.397336418 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.400869182 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.849927612 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30235973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.302725934 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336625808 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.302555905 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.303227685 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301325883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325853608 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695456342 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.498672094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311379212 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692893532 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.836205511 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.320933364 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.911533576 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321463591 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.326650937 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.35193317 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.306790776 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.302697776 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862301461 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.329945745 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.304508226 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.673432193 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.303709773 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619169069 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.327941054 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305475657 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882962037 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.309477586 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.388504353 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303308254 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.302377183 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.302894311 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304794772 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.615335951 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.329410694 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.302644221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.302936973 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.336397397 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30227737 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.303907526 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.307643584 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913295532 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.330231453 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.303506725 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306507992 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303166765 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.303172469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.305252438 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.307212851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.572791209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320253347 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.305971723 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306889775 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.304789896 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.305605667 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.444307042 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.313585905 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.644176472 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.307567647 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305225755 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331480965 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304695712 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.338043931 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305065473 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.312975726 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.193507072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.58419999 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.325732794 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.323945774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304143771 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304442604 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324361069 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322702855 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.338795931 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.31056537 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090263808 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.330747539 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.324336867 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.306988017 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.30866227 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311674961 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307482105 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308100737 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6059411 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.600761539 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.514390429 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.309822223 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.311667657 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.072909447 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.376943781 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491195963 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327867814 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306781421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557170607 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.522406629 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.310123006 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.306300478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.310511078 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566158728 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.309128598 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621344165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870510024 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.326726917 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311494956 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.091845135 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.026947011 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.310140011 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.313602224 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.616469907 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.330416845 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.308595626 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.306623938 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.308169624 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.326722573 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.310110093 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307611015 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.308412255 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.307268987 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330372671 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503035642 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328924353 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311329976 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85006923 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32019392 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317874253 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.315675962 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307502289 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.308779952 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.31894382 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.31454586 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.357601564 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.311814223 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319820693 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.876981345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.310711564 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.310148462 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506378543 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023626037 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.32807108 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.311584926 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328949073 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.203404152 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875759254 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.332703569 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.653964991 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.313275315 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.351815111 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310110563 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344027496 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878475701 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31390605 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.328727646 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994023329 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.329451207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.945311169 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.31302235 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.313191276 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946009103 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.330568468 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.316919029 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.310871795 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331883845 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606461446 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.313328191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.322360701 seconds)
  done (took 493.367551487 seconds)
done (took 639.26927381 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.310955204 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.314398881 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.30172278 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.319848742 seconds)
  done (took 10.462038112 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.323141782 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318262674 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330559619 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.319936184 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321798738 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.317669033 seconds)
  done (took 9.149443171 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.312897107 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.315280535 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.320600198 seconds)
  done (took 8.164960597 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.545426227 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.335657143 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.68106661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330988032 seconds)
  done (took 9.112693176 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.329755625 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329792964 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328915793 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322542092 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.324709092 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.324151556 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.323429006 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32310043 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.324504589 seconds)
  done (took 13.144924772 seconds)
done (took 51.248328543 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.38653608 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.045627935 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.493851118 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.343900145 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.367049588 seconds)
    (6/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.452538021 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.341468174 seconds)
    (8/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.365722476 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324491652 seconds)
    (10/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.345169777 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.419750792 seconds)
    (12/286) benchmarking ("sort", Float64, false)...
    done (took 1.520755757 seconds)
    (13/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.322429961 seconds)
    (14/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.34247377 seconds)
    (15/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.331170418 seconds)
    (16/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.351239669 seconds)
    (17/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.440596373 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.393200951 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.371830241 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.300221494 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.350686122 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.359949125 seconds)
    (23/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.476481975 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.40807716 seconds)
    (25/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.399805114 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.368719035 seconds)
    (27/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324278724 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.330111895 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.450217266 seconds)
    (30/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.420960565 seconds)
    (31/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.518699564 seconds)
    (32/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.334570621 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.322670643 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 1.749166981 seconds)
    (35/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.536736455 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.328428957 seconds)
    (37/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.506159166 seconds)
    (38/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.337667317 seconds)
    (39/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.335605486 seconds)
    (40/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.396013954 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.415134114 seconds)
    (42/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344282881 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.398245011 seconds)
    (44/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.323847237 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.615035756 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334696466 seconds)
    (47/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.401867423 seconds)
    (48/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.33364438 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.33453624 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.348536518 seconds)
    (51/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.447587563 seconds)
    (52/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.464229586 seconds)
    (53/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.347983468 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.329060999 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.532400552 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.314874782 seconds)
    (57/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.381361426 seconds)
    (58/286) benchmarking ("sort", Int8, false)...
    done (took 1.463829052 seconds)
    (59/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.402596578 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.325813645 seconds)
    (61/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.480843024 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.467852579 seconds)
    (63/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.486163712 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.419662543 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.401630776 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.333704631 seconds)
    (67/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.331822434 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.421502804 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.306963656 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.43020386 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.653790822 seconds)
    (72/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.346002261 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 1.511616174 seconds)
    (74/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.307255525 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.565027413 seconds)
    (76/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.326699477 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.329409736 seconds)
    (78/286) benchmarking ("sort", BigInt, true)...
    done (took 2.319450192 seconds)
    (79/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.329406915 seconds)
    (80/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.40248899 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.385886376 seconds)
    (82/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.307196904 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.327381916 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.588065164 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330286518 seconds)
    (86/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.483415741 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.354373098 seconds)
    (88/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.339212589 seconds)
    (89/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.405385349 seconds)
    (90/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.342440057 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.337821725 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.991576731 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.413598209 seconds)
    (94/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.333204257 seconds)
    (95/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.107821798 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.340196947 seconds)
    (97/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.34037589 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.402293124 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.33931888 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.49906528 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.516830663 seconds)
    (102/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.306466261 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.34642074 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.338735261 seconds)
    (105/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.336291117 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.375287405 seconds)
    (107/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.324916212 seconds)
    (108/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.377712533 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 1.355224244 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.328701738 seconds)
    (111/286) benchmarking ("sort", Float32, false)...
    done (took 1.498131631 seconds)
    (112/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.179502918 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.518295017 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.353394059 seconds)
    (115/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.336282045 seconds)
    (116/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.330714647 seconds)
    (117/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.487321465 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.412123146 seconds)
    (119/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.336750221 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.324275809 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.373906166 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.329942848 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.987213094 seconds)
    (124/286) benchmarking ("sort", Float32, true)...
    done (took 1.912067582 seconds)
    (125/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.433670952 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.377591598 seconds)
    (127/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.356846471 seconds)
    (128/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.337707699 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.378337206 seconds)
    (130/286) benchmarking ("sort", BigInt, false)...
    done (took 2.323209076 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.336314559 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.359821713 seconds)
    (133/286) benchmarking ("sort", Float64, true)...
    done (took 1.954231374 seconds)
    (134/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.4757032 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.418814022 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330435866 seconds)
    (137/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.339951273 seconds)
    (138/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.410396508 seconds)
    (139/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.310209732 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352180944 seconds)
    (141/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.33176373 seconds)
    (142/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.367614892 seconds)
    (143/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.344268876 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.307990696 seconds)
    (145/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.390712976 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.481512244 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.357823675 seconds)
    (148/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.045922158 seconds)
    (149/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.03405885 seconds)
    (150/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.355087121 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.311065859 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.35727713 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.342504154 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.378579696 seconds)
    (155/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.226673195 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.396740386 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.3267184 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.340452201 seconds)
    (159/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.361998198 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.079990987 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.354203035 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.307839967 seconds)
    (163/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.237668002 seconds)
    (164/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.351958564 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.333152764 seconds)
    (166/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.405971972 seconds)
    (167/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.328287828 seconds)
    (168/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.334959004 seconds)
    (169/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.334231851 seconds)
    (170/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.347056599 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.335202617 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.412684603 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.337214844 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.344011802 seconds)
    (175/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.47776998 seconds)
    (176/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.483096725 seconds)
    (177/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.035700999 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.38217829 seconds)
    (179/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.465908517 seconds)
    (180/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.367197735 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 1.567015281 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.337204711 seconds)
    (183/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.466300451 seconds)
    (184/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.38862669 seconds)
    (185/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.442376436 seconds)
    (186/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.455183995 seconds)
    (187/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.337670085 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.359523651 seconds)
    (189/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.339869512 seconds)
    (190/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.343226886 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.97878696 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.3294341 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.436934427 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.349456416 seconds)
    (195/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.415117117 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.548972018 seconds)
    (197/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333668998 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.414309894 seconds)
    (199/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.350862916 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.419465067 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.453196338 seconds)
    (202/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.356941862 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.458087569 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.36601481 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.337803193 seconds)
    (206/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.337308049 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.337095359 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.456680483 seconds)
    (209/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.362213931 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.378297627 seconds)
    (211/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.532650555 seconds)
    (212/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.33600395 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.543330827 seconds)
    (214/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.095729233 seconds)
    (215/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.409714011 seconds)
    (216/286) benchmarking ("sort", Int8, true)...
    done (took 1.732890007 seconds)
    (217/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.406668435 seconds)
    (218/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.352287067 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.983082747 seconds)
    (220/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.987101818 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.345310164 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.084341026 seconds)
    (223/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.243773451 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.4582457 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.314011183 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.366624813 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.090908957 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.386160179 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.329375858 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.517596848 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.312371591 seconds)
    (232/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.356961413 seconds)
    (233/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.346701494 seconds)
    (234/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.340030928 seconds)
    (235/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.329980275 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.350163512 seconds)
    (237/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.173238679 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.336121418 seconds)
    (239/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.402296766 seconds)
    (240/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.412471398 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.370161223 seconds)
    (242/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.483443941 seconds)
    (243/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.460134763 seconds)
    (244/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.523333406 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.086675513 seconds)
    (246/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.345344057 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.399913497 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.007561133 seconds)
    (249/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.316365981 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.637774692 seconds)
    (251/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.34855164 seconds)
    (252/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.121605664 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.458910252 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.400047036 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.348012024 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.394392143 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.351407461 seconds)
    (258/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.347634859 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.352087337 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.531769101 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.316044569 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.399515904 seconds)
    (263/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.393194204 seconds)
    (264/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.3543296 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.518294961 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.01005321 seconds)
    (267/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.332790945 seconds)
    (268/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340309801 seconds)
    (269/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.331581599 seconds)
    (270/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362299771 seconds)
    (271/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.212798301 seconds)
    (272/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.36320662 seconds)
    (273/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.472641014 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.360341316 seconds)
    (275/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.454103184 seconds)
    (276/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.68699364 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.443314837 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.376602441 seconds)
    (279/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.993909808 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.512339082 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.339201521 seconds)
    (282/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.493858393 seconds)
    (283/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.49649582 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.382023337 seconds)
    (285/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.425960799 seconds)
    (286/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.089309088 seconds)
  done (took 468.435887223 seconds)
done (took 469.653282374 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.379270111 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390396369 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345042126 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378594938 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.459707887 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.516544074 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.35640366 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.384581082 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393081978 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.39543135 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.351925678 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.5169457 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34609052 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345362723 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.345026318 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388190512 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.337344842 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346446542 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360765919 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384513772 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.363231857 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.352011944 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39643179 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.518392727 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.351152574 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.348664233 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.347825062 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.368927765 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.462260344 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.349714026 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349708943 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.357595442 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33856099 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350830655 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342780042 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.369389073 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.357663476 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.356519707 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.381770608 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.462140166 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.342464622 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352593973 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.348150805 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.348290953 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348416382 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.387422144 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.34936396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.404633359 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390710846 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39065086 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.336911002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.381547608 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.356066936 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348195876 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358818296 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.348683054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.404561674 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394135422 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.367337738 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392780966 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.337659391 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.372687672 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.387401882 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36617075 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361072692 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.337263072 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.365328499 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.388025488 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.346872318 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.352915973 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.336593139 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377921798 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.349897721 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.362358398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.385289816 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.343253777 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343489017 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.34805508 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358828168 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.347262794 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.395579748 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390000607 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.399309687 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350941962 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390798806 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.521752897 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359368403 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.350819666 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.389062718 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.368644024 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.36238394 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.360998631 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.38408174 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35143781 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.396746994 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.40770277 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.359588829 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.359318279 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.401546492 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361842886 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.348661243 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397323864 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.347718288 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.348290215 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351194952 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.473789525 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347059306 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.351296061 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.385387233 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.399899671 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.412356798 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.340136468 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.36035425 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397608923 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361315905 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.411783896 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.353942023 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.340522569 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341396757 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.476083702 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354361511 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357534551 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397956833 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.411971511 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35290456 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.349471309 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353135102 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394203948 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.474183287 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.363194898 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.467851164 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352204187 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.355532019 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.381779086 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398474726 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388739133 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.412806624 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399505447 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.368966667 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.355413123 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36626354 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.365090354 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.354880556 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.410906265 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351875121 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384234241 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396057925 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396320603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.38664134 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.474453065 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358500345 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.342213377 seconds)
done (took 226.493843249 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.412110263 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.350135059 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452778865 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352499277 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455984596 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454491748 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348149456 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347960825 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348498604 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730945893 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349772672 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.350571052 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.351229925 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350462351 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436743689 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352685618 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349584906 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694487869 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353560188 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422369524 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.352689245 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.348647629 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.353150471 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732228778 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.352592454 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.34724881 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424163194 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352936492 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.697106432 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.349181662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.349309942 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.696678267 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.4428362 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.368706238 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363673739 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.359143405 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455859658 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374020302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435026111 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.435936135 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455963202 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.392438346 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.348282712 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.351561783 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355146892 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3550902 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.352356431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37825755 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.352486683 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35089931 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697578982 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363679577 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.359943058 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.350868497 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.351600802 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374352117 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.351255219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355516299 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445160576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355147844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417438025 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.736967787 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.733495088 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354473726 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.351821683 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.352047818 seconds)
  done (took 105.745977956 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421199514 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.43411864 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.474707718 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.355230762 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.407987002 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.477980165 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.356026539 seconds)
  done (took 11.173285432 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361127161 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.356241424 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406477599 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40671281 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356879128 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.572319702 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355605167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.367420979 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353881167 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.435408214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367663941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359257928 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365239389 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.356207233 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.40417055 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.366913772 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472200506 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357747388 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358243035 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.509972522 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355200554 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364316773 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.436466766 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368399875 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369088945 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365859172 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.31212673 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357881514 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35370325 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356796848 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354388867 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.467373641 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35862706 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.356703407 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354888627 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.518484693 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357341512 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356377437 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358430019 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.349778172 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357935724 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.358225631 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.359744002 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355583177 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357038506 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.381931141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.359534385 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35923807 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.359018776 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359609153 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.436298749 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359663671 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357031979 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.35673575 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437459316 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366468903 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358999605 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357947882 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360034745 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356796723 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512665242 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.407371265 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359504851 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408832669 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361407323 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360797076 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360395182 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360126237 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45148049 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.361052029 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410111616 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.356467329 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.585115067 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.383859408 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363217002 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363829864 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.363158671 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362422033 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.35941054 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369798925 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357675313 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.36143643 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366865032 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357669376 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357312563 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54418132 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.519049526 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358903126 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375073436 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.367419114 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.358972273 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.435975635 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.361345766 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.360278817 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413719025 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476797252 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.442194232 seconds)
  done (took 140.641750329 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365107719 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.369716177 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.365392668 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.384172297 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.363200875 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.360710357 seconds)
  done (took 9.460305563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.365481077 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.363283837 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362607605 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363004155 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.362207099 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.372983249 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.372310111 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36446702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367542684 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.364498345 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.373419364 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.36528449 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.366767865 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.365566571 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.374784429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.363453206 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.373162529 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361475124 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.364707147 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364199486 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.362157597 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36400036 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363969232 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.365309877 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378517106 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.364413571 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372438211 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364790312 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.365423709 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.373126725 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386744858 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.375281836 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36663679 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.370435363 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.37986688 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.365346125 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36861387 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367768254 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362346991 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376589962 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367791421 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367795958 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367353142 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367487547 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367254601 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371468788 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.371689564 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374360586 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375862625 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.368001433 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369095884 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36812024 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.376425513 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.369710334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.369725178 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390182519 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.373363165 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377958632 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.366469666 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366838637 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.369350099 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376880902 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369912735 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.383013283 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365078245 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36874594 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369076181 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372815785 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367134007 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368029087 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369187538 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365027567 seconds)
  done (took 100.851931759 seconds)
done (took 369.116123538 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.360534221 seconds)
  done (took 3.619678818 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.478178697 seconds)
  done (took 3.738472346 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.713200145 seconds)
  done (took 24.977658875 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.478969336 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.395963051 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.371887093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.370479235 seconds)
  done (took 10.874802305 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.708060527 seconds)
  done (took 3.966510189 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.359789186 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.365498753 seconds)
  done (took 5.984077673 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.685647076 seconds)
  done (took 3.944779851 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.800541238 seconds)
  done (took 4.065026278 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.384841064 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.376783308 seconds)
  done (took 6.03000254 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.346163843 seconds)
  done (took 3.606009775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.292172226 seconds)
  done (took 17.554362151 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.369333856 seconds)
  done (took 3.631742771 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.402883032 seconds)
  done (took 3.660603145 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.384593185 seconds)
  done (took 6.644885723 seconds)
done (took 103.556295045 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.363444251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.364240666 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.364582788 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.364600401 seconds)
  done (took 10.717600672 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403492922 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403750817 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.404087882 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.415421664 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405081698 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403218727 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395570155 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395969644 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.414173436 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405974659 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405661946 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406659236 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.404814972 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.39734649 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404959654 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406796017 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.416143616 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405695582 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395689705 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.406292272 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.371133851 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.415111996 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.407801798 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371604083 seconds)
  done (took 34.923405915 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.86529409 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.442308614 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527236222 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42547398 seconds)
  done (took 7.520530617 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441274498 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440684596 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453852662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488772412 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.514750941 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450011031 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.400111293 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.39292136 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380741563 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441102931 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500936031 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437621542 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520733343 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37375953 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.649152574 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.373167808 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372309149 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.450164314 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.49378518 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.504836884 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373976555 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.449125367 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.449450718 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.437930568 seconds)
  done (took 36.053441573 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.371726849 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.390505199 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.372526313 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.371043329 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.380316825 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.371241217 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371176877 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.37375933 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.372645668 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.918065482 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377493537 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.385999491 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.899502662 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.3780235 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.379652996 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374972417 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.901521484 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.907147848 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379444637 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.378534759 seconds)
  done (took 30.919544493 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.366917583 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.366839402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.719923079 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.625405946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.368570884 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.367613791 seconds)
  done (took 14.07975005 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458552408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.610580423 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.375265342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.784056078 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.864320973 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.378663433 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.379348362 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.654730264 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.023441711 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.015719189 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.449350704 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456080782 seconds)
  done (took 20.714727161 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.375725032 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.368025519 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.378301375 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388344082 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436998372 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.379841729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385749212 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.36889727 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.445044637 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.445210634 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.380395289 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.440796906 seconds)
  done (took 22.060395311 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465055008 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371525196 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370115561 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473001722 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375682119 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226883885 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46432834 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124324343 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.395568063 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643511651 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378102007 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476654165 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629476172 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375856115 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372287974 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.370566051 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608189448 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915158397 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373172046 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372446051 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410933561 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374966975 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371051285 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623605959 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377289357 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372998559 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633574087 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372280154 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694003635 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387543198 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384383534 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373800614 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647557444 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069185484 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499403424 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614309119 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394624598 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379278108 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.369241529 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.379083263 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384480306 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381565248 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385611595 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374517284 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373375436 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377228776 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136689235 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401282714 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.371701776 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373334142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671397291 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472556601 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.378981789 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37502423 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509647138 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38023865 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.377484092 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39040292 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965647741 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374335764 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379363125 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.374894946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389897374 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38075546 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066566045 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.379424906 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.379754652 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37988085 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375440487 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375832873 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397346947 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376096882 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402005181 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377185125 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165289468 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388023699 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38240424 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978599522 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384603646 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.376449841 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610311027 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377075583 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37725195 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.375517547 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377502588 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155765168 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387028028 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.359588024 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375988845 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135053877 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64127219 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402921456 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408834426 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604137624 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.359804344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377937042 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.386003119 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387052527 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400029081 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132927714 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398202765 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381883892 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637862153 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590746238 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376659057 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.383216981 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904276599 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409298877 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398955576 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381842089 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619074026 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.034447818 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395959402 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379572407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402920436 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379836235 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191413259 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393958142 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.479336812 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391218935 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680173796 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232241898 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379771438 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446808715 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384292708 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378576162 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380345136 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386609448 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38034326 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.607434628 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401527273 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393229403 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.391127361 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379578853 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.385313262 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381066931 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.407692608 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607716335 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393749184 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656017505 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380061603 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38131538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380322047 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606082608 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.395150174 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.723330144 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646637363 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381217819 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381258886 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393348949 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399938113 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486627076 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403643136 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.384757201 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639135318 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.38486453 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.385673637 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383300747 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388003376 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387511038 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386664615 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387448608 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043619264 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35617171 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392204944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310317237 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397136276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451410603 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388724641 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624108792 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397115994 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401670464 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.394556278 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.387211664 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610677938 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392080032 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.382611506 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467222458 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.900414882 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060146622 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397418541 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.385113014 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.380377542 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.380074015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383515091 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383969839 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383823372 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623430625 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401821055 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400929341 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05134666 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387782283 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383621998 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.394648617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397657005 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.389907346 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385684746 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.385713585 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388992008 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400198436 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401784878 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530092069 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.398957821 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385271177 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.90244855 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391236359 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384946292 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384337581 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419532545 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384717433 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250178689 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650214621 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415659629 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692257956 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388130287 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406862535 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.384455787 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399890208 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396943807 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.400510803 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421739776 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.397786063 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387636053 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395275862 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965588172 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204496595 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991090804 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388114935 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.401393963 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393116665 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147364526 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408643406 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386414387 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649997291 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156941137 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409755914 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910377496 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419220681 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249131562 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689464651 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62366778 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389322456 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.404324147 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696588539 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603390187 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425023044 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388189907 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395688907 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.370852967 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992919162 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422478536 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475029801 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150556798 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425070121 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397539609 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.481200188 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403382994 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836204337 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41227246 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389564816 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390001412 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394767222 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281030072 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396513268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390409761 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080664997 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391852742 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.917528784 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411185781 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636710605 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.407983793 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.391200028 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.38695714 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.392793558 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.647631761 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691457151 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391382401 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401553809 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00212029 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261006054 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.397105326 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390649183 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209514133 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394495736 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721312772 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.402275048 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395045627 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392127815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392510807 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391480947 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.389218128 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400125922 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361918639 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940073147 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.403939977 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431081976 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433167327 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398746175 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650997672 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.404870234 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051064401 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623688449 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424657294 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421864247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395245619 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393851603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384780165 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392935 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392659528 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531006781 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62418117 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392950445 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.376085329 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508437985 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611941064 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392494669 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411885244 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666790138 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.39111972 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.41640252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218040615 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427376784 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411518793 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400820997 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405860971 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415752643 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472387806 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64049107 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.412064175 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406503107 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842250702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41546016 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420921211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409952071 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491219986 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404883881 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394430749 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.168714505 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059329567 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219145272 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.061523481 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696360194 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39739551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398939019 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394878667 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558901372 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394145708 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669610966 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394989459 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.409018523 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424720563 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393924732 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399254813 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613373816 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671753524 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39670595 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397753558 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401477915 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.396273456 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407892985 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.608915237 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949218259 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00782076 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399027251 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403566862 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.173017103 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696973263 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39756255 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397986704 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39672575 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.418903422 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.438172138 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403157112 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398563423 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547128281 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697729277 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10318576 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429032478 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.425387027 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.170518464 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405501525 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655076956 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402109264 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642972727 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064457398 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188973288 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66653344 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469149729 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639674299 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.39647558 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563250092 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406098544 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397204028 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39619429 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39783273 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.395604178 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409180931 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069237084 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666391273 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403122643 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.404604829 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429458815 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.408753768 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62273953 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191352696 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6240352 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408798823 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405516199 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39984834 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064860605 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703046709 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400697894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.402837369 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666235597 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400597446 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425439869 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.897248533 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.396817429 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011899309 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.375622717 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423778384 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398858814 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198586288 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066702048 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.399710006 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951735655 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402338405 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414109034 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676902804 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408646111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405692484 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684933484 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404432165 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418213242 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655488257 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.066869279 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266952911 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.427562795 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428729908 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.4098886 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402272285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509709898 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407642629 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412647278 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.866106412 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424963485 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402780422 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414677213 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.413958963 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409209646 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.405829599 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40270088 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409449506 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.409514835 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.407467545 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412177965 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418683426 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01828527 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431441035 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.07734967 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.732545386 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660835515 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417068478 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.392297027 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.406613999 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404024149 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40450391 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403307256 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422825439 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021956397 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.421247847 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.420723979 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407713424 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621309475 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617453818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405386155 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656529953 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425745681 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425382873 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.387294365 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404086146 seconds)
  done (took 992.182551159 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.458306128 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440668142 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.443925504 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.460782607 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465921872 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.463857177 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.491199272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439898655 seconds)
  done (took 20.963428401 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.410463928 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.415163777 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.406231041 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.415182561 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.412848649 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.934078524 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.425911285 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416495912 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.415702964 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.412882612 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.404433739 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.214525468 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.419019348 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.406359115 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403090921 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.413671881 seconds)
  done (took 33.232957319 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.719878827 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.673033274 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.042152944 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.495381307 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.4601362 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.423362516 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.799094564 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.424943432 seconds)
  done (took 28.337204968 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417655182 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420919327 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418867321 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418846785 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418730938 seconds)
  done (took 8.394859643 seconds)
done (took 1261.36120424 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410194835 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414751083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.41150352 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.414884427 seconds)
  done (took 6.952383228 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.392240273 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.390420676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394202731 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.409654249 seconds)
  done (took 9.886959826 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.215239124 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.125103811 seconds)
  done (took 5.64176552 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.410057403 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.160995906 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.156355901 seconds)
  done (took 8.029713379 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.720304229 seconds)
  done (took 3.02034107 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.822263058 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.780423801 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.607273159 seconds)
  done (took 6.51094073 seconds)
done (took 41.34182569 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428065508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.662925651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.567628344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409002603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.593939918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.567615222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.183787612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408321469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429327036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408531577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408827374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.59359361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.24202962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.663587121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.240576355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.757700518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.571324148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416035836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.423633128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418531701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.18706808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423329489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41125148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408479752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.572080922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.556575313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.424076044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.757541832 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410235229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.44703019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.557220768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420108083 seconds)
  done (took 84.271962649 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412309403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41205582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.413422077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.439820404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411731776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.415731128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.434994755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418295401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420077322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416299615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41910868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.409280511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.410744484 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.433801681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.432495919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.429291031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.430303642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414640538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410315982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430137373 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.422591541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.410996838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429767961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410793775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.43360305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415668875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433637927 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.431492615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.433968487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414624812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435793602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433106377 seconds)
  done (took 78.825785936 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.4146028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.431347917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.42926566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.424522453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413815029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431110941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413622338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419657514 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.42413209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426138923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41788416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.411659952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415403184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415863248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414839728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413392684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.42407642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415735851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412233379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.43159308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414905536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42807937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413347145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.429543932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.429193883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416280439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.446320261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.414095699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413309495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427561301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417943015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447853831 seconds)
  done (took 78.80674478 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.697052622 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.420664996 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.4228281 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.415386545 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.422721828 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422161418 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.415924484 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.697134017 seconds)
  done (took 15.221353803 seconds)
done (took 258.426128407 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.417289126 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.417889678 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.659086116 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.443283675 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.415908178 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.464146429 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44252728 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.657256058 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.447943855 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664512695 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.449977934 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.439387324 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.428211783 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44085681 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.716852876 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573333356 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.404368254 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.416857097 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.788825194 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.441295765 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.713657645 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.415858103 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710376422 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.418021252 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.43510625 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.417425013 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.417439104 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.396715312 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463064379 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.79266796 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.427656161 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.406937236 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517501881 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.53754591 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.646850258 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.587849501 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.416608419 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.518141852 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.657063159 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.435251999 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.43174222 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.245669527 seconds)
  done (took 85.448331503 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.424878957 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.539045828 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.427077381 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.426018872 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.425923181 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.541305759 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.516977844 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.426869711 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.427206794 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.425722241 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.42462082 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.42706831 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.427038492 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.427128085 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.428098231 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.426654671 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.425525179 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.438257205 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.439121389 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.468688983 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.544844536 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.454276636 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.418211383 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.42686306 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.524403366 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.560055666 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.427448546 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.418687066 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.466151247 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.428314094 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.431347849 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.4695297 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.426531094 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.428461529 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.540403487 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.524503137 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.438165116 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.422749543 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.539064862 seconds)
  done (took 58.115168437 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429032967 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.698227661 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.894521607 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.434415276 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.428039107 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.433947296 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.517630396 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429479131 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.432313229 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.432243925 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.610900035 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432679552 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465709124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.930710354 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.431961843 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429859002 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.429826496 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.430233091 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.708205498 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43935385 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.540324099 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.430473157 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.51824549 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439015693 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.455729002 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43097844 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.435758714 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.007235186 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.432011476 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.613739566 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.354055722 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.520558789 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.945545971 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.905964146 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.357561069 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.438319384 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.431120998 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.616648178 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432960881 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431576071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.520372517 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.433503714 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.905308586 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106510965 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453316095 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432418781 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.033880722 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.616084362 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.72139197 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447177774 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935911838 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437068569 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.437060951 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.433604541 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.713573269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.440493829 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434079205 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.027429148 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456832172 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.520662983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433080151 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433847059 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.711207117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.433314937 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.70061756 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435502605 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440311471 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.45619153 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.915350403 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439691095 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.129822855 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454761671 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432523945 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.613387273 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.698811648 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.070405065 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.437854574 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720356533 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.963392657 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.51836417 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437950187 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.998380626 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.52347146 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440109588 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437041366 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43736299 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433643881 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.538486766 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.519511201 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.063567318 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124388577 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.063492179 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.544876523 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.448852381 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.436559631 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.031299577 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.455770457 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.435809655 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.90486503 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.132163885 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.457778232 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442714809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.136605286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.458589004 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.526539583 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.442946293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.916880706 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43841553 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.488509573 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.437694896 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.443087862 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.463091358 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.526111361 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.441626905 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436527963 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.106306777 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.645540124 seconds)
  done (took 189.657929096 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.4303853 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.430708852 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.43080897 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.430587903 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.429552027 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437818034 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.429057354 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.430820607 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.471829705 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.428491127 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.431841239 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.42813315 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.430977875 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.43284451 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441945638 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.437735704 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.43132428 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.432168318 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.431223242 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.431494244 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.430710661 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.451442494 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.432098804 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.432097508 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.431028275 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.432661841 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.435610719 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.43421522 seconds)
  done (took 65.482248357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.439327164 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.080241802 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.440222967 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.589258539 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.464158438 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436654581 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.58659727 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.503191546 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441615002 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.437573576 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.437638911 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.781078657 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.439504271 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.02381478 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.660167358 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.587362016 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022819124 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.459236012 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.4381374 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.437556056 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.589426266 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.449942119 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.783053101 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080466878 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.441472354 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.083324317 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427537451 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.440008964 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.438701194 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.082858422 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.437390109 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.784119823 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.525849469 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.506433204 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.106676761 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.034181969 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047185062 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.608037262 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.440049011 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.437587724 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.441085906 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.427275233 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085516655 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.441905397 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.441069563 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.077338466 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.462109282 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.442564555 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.433748256 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.439740006 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.508402941 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.511657257 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.789610867 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.171430523 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.529553837 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.439039896 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.59250222 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.75684219 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.444990272 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.03127307 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.429667465 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.090089073 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.449444739 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428562108 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442765438 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.432038969 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.610652758 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.591819578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.032113159 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.463486813 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.030216339 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.632339497 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.440434154 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.441464564 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.4436915 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.091317732 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.033923869 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.632724803 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.595733162 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.668978064 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431861215 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.44310215 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.43003248 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.530614611 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.443606087 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091664454 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.054366156 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.465563427 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.445630449 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443910625 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.44633833 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.6495242 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.092957517 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.53197155 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.026272075 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.811366502 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.792372177 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447015168 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511382272 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.462982615 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.866457616 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447133346 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507850574 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.814394569 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.796060937 seconds)
  done (took 173.210511736 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.708956641 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.459271998 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.540936924 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.604860272 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.092449693 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.065134529 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.442332184 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.581964787 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561659064 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.732475027 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.446195929 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.542717155 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.68100029 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.532518066 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.225903219 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527012272 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.544936906 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602760836 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.596773445 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.452653947 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.119235416 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.780798944 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.652220229 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.467023782 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.582481213 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.321204127 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.070513761 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.993753678 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.637876488 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.442358644 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.013967434 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.446347422 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.448530949 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.216978447 seconds)
  done (took 67.465572969 seconds)
done (took 640.688540064 seconds)
SAVING RESULT...
DONE!
